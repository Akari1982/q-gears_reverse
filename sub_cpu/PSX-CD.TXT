;:              ;:----------------- PSX MC68HC05 CDROM BIOS
                ;------------------
.disass         ;- disassembled 30 Aug 2013 - 08 Oct 2013 using no$psx
                ;- added symbols for most RAM and all ROM addresses - March 2014
                ;------------------
                ;XXX resolve "whatever_XXX_"
                ;XXX resolve "hz_XXX_"
                ;XXX resolve [40h],[41h],[42h],[43h]       = flags
                ;XXX resolve [45h],[46h],[47h],[48h],[49h] = flags
                ;XXX resolve [62h],[63h],[66h],[68h],[69h] = counters
                ;XXX resolve [88h..8Fh] = various scratch values
                ;XXX resolve flag-bits for flags like [40h..4Ch]
                ;------------------
                .hc05   ;MC68HC05G6
                .nocash ;nocash syntax
                .bios   ;BIOS ROM (non .EXE executable file)
                ;------------------
;:              ;:----------------- I/O Ports...
                ;------------------
0000.0.0-7 i/o  ;[io_porta_dta].0-7 data (indexed via [io_porte_idx])
0000.0.0   in   ;[io_porta_dta].0   dta.serial.in       ;\
0000.0.1   out  ;[io_porta_dta].1   dta.serial.out      ; for debug_status
0000.0.2   out  ;[io_porta_dta].2   clk.serial.out      ;/
                ;---
0001.0.0   in   ;[io_portb].0       F-BIAS  ;unused
0001.0.1   in   ;[io_portb].1       SCEx input (serial 250 baud)
0001.0.2   in   ;[io_portb].2       LMTSW  aka /POS0
0001.0.3   in   ;[io_portb].3       DOOR   aka SHELL_OPEN
0001.0.4   in   ;[io_portb].4       TEST2 (usually 1)
0001.0.5   in   ;[io_portb].5       TEST1 (usually 1) (CL316) enter test mode (instead of mainloop)
0001.0.6   in   ;[io_portb].6       COUT   ;<-- extra pin, not "SENSE=COUT"
0001.0.7   in   ;[io_portb].7       SENSE
                ;---
0002.0.0   in   ;[io_portc].0       SUBQ  ;\  ... used via [io_spdr1]
0002.0.1   in   ;[io_portc].1       NC    ;  ;<-- configured as "input", although in SPI mode, it would be "subq output" (always 0) (ie. "subq" data transferred in opposite direction)
0002.0.2   out  ;[io_portc].2       SQCK  ;/
0002.0.3   out  ;[io_portc].3       SPEED
0002.0.4   out  ;[io_portc].4         ="SPEED XOR 1"  ... AL/TE ... or CG ... or MIRR ?
0002.0.5   out  ;[io_portc].5       ROMSEL  debug_status ??? aka "SCLK" ???
0002.0.6   in   ;[io_portc].6       XINT/IRQ2  (unused) (though acknowledged in [io_intsr].2 for some reason?)
0002.0.7   in   ;[io_portc].7       SCOR/IRQ1  (used via [io_intsr].7, this isn't used to EXECUTE an interrupt, only to poll the latched IRQ1/SCOR flag)
                ;---
0003.0.0   out  ;[io_portd].0       NC           ;-unused (always 1)
0003.0.1   out  ;[io_portd].1       DATA         ;\serial bus for
0003.0.2   out  ;[io_portd].2       XLT aka XLAT ; cxd2510q and cxa1782br
0003.0.3   out  ;[io_portd].3       CLK aka CLOK ;/
0003.0.4   out  ;[io_portd].4       DECCS        ;\
0003.0.5   out  ;[io_portd].5       DECWR        ; control for [io_porta_dta]
0003.0.6   out  ;[io_portd].6       DECRD        ;/
0003.0.7   out  ;[io_portd].7       LDON  ... IC723.Pin11 ... maybe "laser on" ?
                ;---
0004.0.0-4 out  ;[io_porte_idx].0-4 index for [io_porta_dta]
0004.0.5   out  ;[io_porte_idx].5   NC, not used
0004.0.6   out  ;[io_porte_idx].6   NC, see "idx_4xh" maybe test signal ???
0004.0.7   out? ;[io_porte_idx].7   NC, see "idx_8xh" used as INPUT? (although: port is configured as OUTPUT)
                ;---
0005.0.0-3      ;[io_portf].0-3  NC, not used by sony (but used by selftest rom)
0005.0.4-7      ;[io_portf].4-7  NC, not used (probably pins don't even exist)
                ;------------------
                ;68HC705G4 iomap see pg. 27 of 126
                ;MC68HC05L16 iomap see pg. 39 of 202
                ;---
0000.0          io_porta_dta      equ 00h ;used (with index in port e) (also used bitwise for something else!)
0001.0          io_portb          equ 01h ;used
0002.0          io_portc          equ 02h ;used
0003.0          io_portd          equ 03h ;used (to various cxd chips)
0004.0          io_porte_idx      equ 04h ;used (index for port a)
0005.0          io_portf          equ 05h   ;\reserved on MC68HC05L16 ;unused, except by selftest
0006.0          io_portg_reserved equ 06h   ; exist on 68HC705G4      ;unused
0007.0          io_porth_reserved equ 07h   ;/                        ;unused
0008.0          io_intcr          equ 08h   ;\                        ;used 1x, set to 0Ch
0009.0          io_intsr          equ 09h   ;/                        ;used 7x
000A.0          io_spcr1          equ 0Ah  ;\      ;used 3x, set to 50h,71h,[io_spsr1]
000B.0          io_spsr1          equ 0Bh  ;       ;used 6x
000C.0          io_spdr1          equ 0Ch  ;/      ;used 2x (subq)
000D.0          io_spcr2_reserved equ 0Dh  ;\reserved on MC68HC05L16 ;unused
000E.0          io_spsr2_reserved equ 0Eh  ; exist on 68HC705G4      ;unused
000F.0          io_spdr2_reserved equ 0Fh  ;/                        ;unused
                ;---
0000.1          io_hi_ddra        equ 00h ;port a direction   ;used, set to 00h,06h,07h,FFh
0001.1          ;io_hi_reserved   equ 01h ;reserved           ;unused
0002.1          io_hi_ddrc        equ 02h ;port c direction   ;used 1x, set to 3Ch
0003.1          io_hi_ddrd        equ 03h ;port d direction   ;used 1x, set to FFh          ;MC68HC05L16: pdmux (port d mux)
0004.1          io_hi_ddre        equ 04h ;port e direction   ;used 1x, set to FFh          ;MC68HC05L16: pemux (port e mux)
0005.1          io_hi_ddrf        equ 05h ;port f undoc ??    ;unused ;USED by selftest?! ;but specified as "reserved" in both datasheets ;MC68HC05L16: reserved
0006.1          ;io_hi_ddrg       equ 06h ;port g direction   ;unused                                                                     ;MC68HC05L16: reserved
0007.1          ;io_hi_ddrh       equ 07h ;port h direction   ;unused                                                                     ;MC68HC05L16: reserved
0008.1          io_hi_rcr1        equ 08h ;resistor control 1 ;used 1x, set to 0Fh
0009.1          io_hi_rcr2        equ 09h ;resistor control 2 ;used 1x, set to 40h
000A.1          io_hi_wom1        equ 0Ah ;                   ;used 1x, set to 00h
000B.1          io_hi_wom2        equ 0Bh ;                   ;used 1x, set to 00h
000C.1          ;io_hi_reserved   equ 0Ch ;reserved           ;unused
000D.1          ;io_hi_reserved   equ 0Dh ;reserved           ;unused
000E.1          io_hi_kwien       equ 0Eh ;                   ;used 1x, set to 00h
000F.1          io_hi_mosr        equ 0Fh ;                   ;unused
                ;---
0010            io_tbcr1          equ 10h  ;used 1x, set to 82h
0011            io_tbcr2          equ 11h  ;used 4x
0012            io_tcr            equ 12h  ;used 1x, set to 00h ;\also "used" for
0013            io_tsr            equ 13h  ;unused              ;/selftest
0014            io_ich            equ 14h  ;unused
0015            io_icl            equ 15h  ;unused
0016            io_oc1h           equ 16h  ;unused (except for selftest)
0017            io_oc1l           equ 17h  ;unused (except for selftest)
0018            io_tcnth          equ 18h  ;unused (except for selftest)
0019            io_tcntl          equ 19h  ;unused (except for selftest)
001A            io_acnth          equ 1Ah  ;unused
001B            io_acntl          equ 1Bh  ;unused
001C            io_tcr2           equ 1Ch  ;used 1x, set to 40h
001D            io_tsr2           equ 1Dh  ;used 1x, bit2 tested
001E            io_oc2            equ 1Eh  ;used 1x, set to 3Eh
001F            io_tcnt2          equ 1Fh  ;used 1x, set to 01h
                ;---
0020            io_lcdcr          equ 20h      ;LCD Control register    ;used 1x, set to 2Eh (!!?!!)  ;(MC68HC05L16 only, not 68HC705G4)
0021..34        ;io_lcddr1..20    equ 21h..34h ;LCD Data registers 1-20 ;unused  ;(MC68HC05L16 only, not 68HC705G4)
                ;---
0034            ;io_pwmcr         equ 34h   ;\         ;\
0035            ;io_pwmcnt        equ 35h   ;          ; unused
0036            ;io_pwmdr0        equ 36h   ;          ;
0037            ;io_pwmdr1        equ 37h   ;
0038            ;io_pwmdr2        equ 38h   ; 68HC705G4 only (not MC68HC05L16)
0039            ;io_pwmdr3        equ 39h   ;
003A            ;io_adr           equ 3Ah   ;
003B            ;io_adscr         equ 3Bh   ;          ;
003C            ;io_portj         equ 3Ch   ;          ;
003D            ;io_pcr           equ 3Dh   ;/         ;/
                ;---
003E            io_misc           equ 3Eh   ;-         ;-used (bit7,1,0)
003F            ;io_reserved      equ 3Fh   ;-         ;-unused
                ;------------------
                ;below are I/O values as observed on a newer PSone console
                ;(that is, NOT observed on the disassembled older ROM-image)
                ;---
                ;notable, unused I/O ports seem to be 20h (possibly the
                ;prefetched next opcode in "cmd_19h_60h_read_ram")
                ;---
0000  4         ;    FF 7B 00 FF  (other when disk inserted)
0004  5         ;    11 00 20 20 0C
0009  1         ;    00 (when disk inserted: changes between 00 or 80)
000A  2         ;    71 00
000C  1         ;    00 (when disk inserted: changes between 00 or 80)
000D  3         ;    20 20 20
0010  8         ;    02 80 00 60 00 00 99(orBB) 98
0018  4         ; changes randomly (even when no disk inserted)
001C  3         ;    40 00 41
001F  1         ; changes randomly (even when no disk inserted)
0020  30        ;    20h-filled
003E  2         ;    82h 20h
                ;------------------
;:              ;:----------------- idx_values...
                ;------------------
                idx_00h_dummy               equ 00h ;-  ;used 1x (initial dummy index)
                ;---
                idx_00h_r_ecc_status        equ 00h ;R  ;used 1x        sector-related, see [curr_idx_00h_r_ecc_status], summary of header/subheader or so
                idx_01h_r_decoder_status    equ 01h ;R  ;used 1x  read, but UNUSED      see [curr_idx_01h_r_decoder_status]
                idx_02h_r_hdr_error_flgs    equ 02h ;R  ;used 1x        sector-related, see [curr_idx_02h_r_hdr_error_flgs]
                idx_03h_r_sector_header     equ 03h ;R  ;used 1x4byte (sector header:    MM,SS,FF,Mode)
                idx_04h_r_sector_subheader  equ 04h ;R  ;used 1x4byte (sector subheader: file,channel,sm,ci)
                idx_05h_r_drv_addr_base     equ 05h ;R  ;used 1x ;-base address (in 1K-steps) of most recently decoded sector
                idx_06h_r_undefined         equ 06h ;-  ;used 0x ;-N/A undocumented/unused (probably "reserved" although not officially described to exist at all)
                idx_07h_r_int_stat          equ 07h ;R  ;used 2x     see [curr_idx_07h_r_int_stat] and [temp_idx_07h_r_int_stat]
                idx_08h_r_adpcm_codinginfo  equ 08h ;R  ;used 0x ;-not used by PSX bios
                idx_09h_r_reserved          equ 09h ;-  ;used 0x ;-N/A officially marked as unused/reserved
                idx_0Ah_r_host_remain_lo    equ 0Ah ;R  ;used 1x ;\
                idx_0Bh_r_host_remain_hi    equ 0Bh ;R  ;used 1x ; used for test
                idx_0Ch_r_host_address_lo   equ 0Ch ;R  ;used 1x ; command only
                idx_0Dh_r_host_address_hi   equ 0Dh ;R  ;used 1x ;/
                idx_0Eh_r_drv_address_lo    equ 0Eh ;R  ;used 0x ;\not used by PSX bios
                idx_0Fh_r_drv_address_hi    equ 0Fh ;R  ;used 0x ;/
                idx_10h_r_reserved          equ 10h ;-  ;used 0x ;-N/A officially marked as unused/reserved
                idx_11h_r_psx_fifo_flags    equ 11h ;R  ;used 9x    ;\   ;see [curr_idx_11h_r_psx_fifo_flags]
                idx_12h_r_param_from_psx    equ 12h ;R  ;used 2x    ;
                idx_13h_r_cmd_from_psx      equ 13h ;R  ;used ONCE  ;/PSX interface
                idx_14h_r_undefined         equ 14h ;R  ;used 0x ;\   <-- exists on PSX? (PSone returns FFh)
                idx_15h_r_undefined         equ 15h ;-  ;used 0x ;
                idx_16h_r_undefined         equ 16h ;-  ;used 0x ;
                idx_17h_r_undefined         equ 17h ;-  ;used 0x ;    <-- exists on PSX? (PSone returns DEh) (maybe int_mask read ??)
                idx_18h_r_undefined         equ 18h ;-  ;used 0x ; N/A
                idx_19h_r_undefined         equ 19h ;-  ;used 0x ; undocumented/unused (probably "reserved" although not officially described to exist at all)
                idx_1Ah_r_undefined         equ 1Ah ;-  ;used 0x ;
                idx_1Bh_r_undefined         equ 1Bh ;-  ;used 0x ;
                idx_1Ch_r_undefined         equ 1Ch ;-  ;used 0x ;
                idx_1Dh_r_undefined         equ 1Dh ;-  ;used 0x ;
                idx_1Eh_r_undefined         equ 1Eh ;-  ;used 0x ;
                idx_1Fh_r_undefined         equ 1Fh ;-  ;used 0x ;/
                ;---
                idx_00h_w_drv_interface     equ 00h ;W  ;used 1x ;=28h ;\init
                idx_01h_w_config1_sram      equ 01h ;W  ;used 1x ;=40h ; only
                idx_02h_w_config2_audio     equ 02h ;W  ;used 1x ;=02h ;/
                idx_03h_w_decoder_control   equ 03h ;W  ;used 13x  (write 08h, or [curr_idx_03h_w_decoder_control]=08h,0Dh,0Fh)
                idx_04h_w_drv_maxaddr_lo    equ 04h ;W  ;used 2x ;\
                idx_05h_w_drv_maxaddr_hi    equ 05h ;W  ;used 2x ; group (23,09,00 or 23,5D,00)
                idx_06h_w_drv_maxaddr_bit16 equ 06h ;W  ;used 2x ;/
                idx_07h_w_chip_control      equ 07h ;W  ;used 7x  ;MSB=mute
                idx_08h_w_reserved          equ 08h ;-  ;used 0x
                idx_09h_w_int_mask          equ 09h ;W  ;used 2x ;-set to DEh
                idx_0Ah_w_clrctl            equ 0Ah ;W  ;used 8x ;clear fifo?
                idx_0Bh_w_int_ack           equ 0Bh ;W  ;used 3x
                idx_0Ch_w_host_len_lo       equ 0Ch ;W  ;used 3x ;\pair?
                idx_0Dh_w_host_len_hi       equ 0Dh ;W  ;used 3x ;/
                idx_0Eh_w_host_address_lo   equ 0Eh ;W  ;used 2x ;\pair
                idx_0Fh_w_host_address_hi   equ 0Fh ;W  ;used 2x ;/
                idx_10h_w_drv_address_lo    equ 10h ;W  ;used 6x ;\
                idx_11h_w_drv_address_hi    equ 11h ;W  ;used 6x ; group (always written as 00,00,00)
                idx_12h_w_drv_address_bit16 equ 12h ;W  ;used 6x ;/
                idx_13h_w_reserved          equ 13h ;-  ;used 0x
                idx_14h_w_reserved          equ 14h ;-  ;used 0x
                idx_15h_w_reserved          equ 15h ;-  ;used 0x
                idx_16h_w_irq_to_psx        equ 16h ;W  ;used ONCE  ;\PSX interface
                idx_17h_w_reply_to_psx      equ 17h ;W  ;used       ;/
                idx_18h_w_reserved          equ 18h ;-  ;used 0x
                idx_19h_w_adpcm_addr_kick   equ 19h ;W  ;used ONCE, ORed with 80h  ;\
                idx_1Ah_w_reserved          equ 1Ah ;-  ;used 0x                          ;
                idx_1Bh_w_adpcm_codinginfo  equ 1Bh ;W  ;used ONCE, ANDed with 55h ;/
                idx_1Ch_w_undefined         equ 1Ch ;-  ;used 0x ;\
                idx_1Dh_w_undefined         equ 1Dh ;-  ;used 0x ; undocumented/unused (probably "reserved" although not officially described to exist at all)
                idx_1Eh_w_undefined         equ 1Eh ;-  ;used 0x ;
                idx_1Fh_w_undefined         equ 1Fh ;-  ;used 0x ;/
                ;---
                ;idx_4xh                    equ 4xh ;bit6 set 1x
                ;idx_8xh                    equ 8xh ;bit7 TESTED 1x (INPUT??? but, io_hi_ddre is always set to OUTPUT)
                ;idx_XXX                    equ xxh ;VAR, used 4x (for test commands)
                ;------------------
;:              ;:----------------- Summary of used cx(X) values...
                ;------------------
                ;Summary of used cx(X) values...
                ;---
                ;cx(00)=AllFocusSwitchesOff                             ;\
                ;cx(02)=FocusSearchVoltageFalling                       ;
                ;cx(03)=FocusSearchVoltageRising (TestOnly?!)           ;
                ;cx(08)=FocusServoOn                                    ;
                ;cx(0C)=FocusServoOnAndDefectOn                         ;/
                ;cx(11)=SledKickHeight2                                 ;\
                ;cx(12)=SledKickHeightInvalid                     ;???  ;
                ;cx(19)=TrackingGainAndSledKickHeight2                  ;
                ;cx(1D)=TrackingGainBrakeAndSledKickHeight2             ;
                ;cx(1E)=TrackingGainBrakeAndSledKickHeightInvalid ;???  ;/
                ;cx(20)=SledAndTrackingOff                              ;\
                ;cx(21)=SledServoOn          ;ForTestOnly               ;
                ;cx(22)=SledFastForward                                 ;
                ;cx(23)=SledFastReverse                                 ;
                ;cx(24)=TrackingServoOn                                 ;
                ;cx(25)=SledAndTrackingServoOn                          ;
                ;cx(28)=TrackingForwardJump  ;ForTestOnly               ;
                ;cx(2C)=TrackingReverseJump  ;ForTestOnly               ;/
                ;cx(30+n)=BalanceAdjust, cx(30+4)=TestMid, cx(30+0)=Min ;-
                ;cx(38+n)=GainAdjust, cx(38+4)=TestMid, cx(38+7)=Max    ;-
                ;---
                ;cx(4000)=AutoSeqCancel                                 ;\
                ;cx(4700)=AutoSeqFocusOn                                ;
                ;cx(4800)=Forward1track                                 ;
                ;cx(4900)=Reverse1track                                 ;
                ;cx(4C00)=Forward2Ntrack                                ;
                ;cx(4D00)=Reverse2Ntrack                                ;/
                ;cx(54)=BlindBrakeOverflowTimer=4                       ;\
                ;cx(5A)=BlindBrakeOverflowTimer=A                       ;/
                ;cx(6100)=SledKickBrakeKickTimer         (fixed)        ;-
                ;cx(70xxx0)=TrackJumpCountSetting        (xxx=variable) ;-
                ;cx(8180)=Audio                                         ;\
                ;cx(8980)=CDROM                                         ;/
                ;cx(9B00)=NormalSpeed                                   ;\
                ;cx(9F00)=DoubleSpeed                                   ;/
                ;cx(A040)=AttentuationOff                               ;\
                ;cx(A140)=Attentuation-12dB                             ;/
                ;cx(B01000)=TraverseMonitorCounterSetting (fixed)       ;-
                ;cx(C600)=SpindleServoCoefficientSetting  (fixed)       ;-
                ;cx(D7)=ClvControl                        (fixed)       ;-
                ;cx(E0)=SpindleMotorStop                                ;\
                ;cx(E6)=AutomaticNormal                                 ;
                ;cx(E8)=SpindleMotorForward                             ;
                ;cx(EA)=SpindleMotorReverse                             ;
                ;cx(EE)=RoughServo                                      ;/
                ;---
                ;cx(F)=Unused (N/A)                                     ;-
                ;---
                ;cx(Xx)                 ;\                              ;\
                ;cx(Xxxx)               ; TestCommand (cmd_19h_50h)     ;
                ;cx(Xxxxxx)             ;/                              ;/
                ;---
                ;sense(30)  SEIN.BAL
                ;sense(38)  SEIN.GAIN
                ;sense(40)  XBUSY (low=AutoSeqBusy)
                ;sense(50)  FOK   (high=FokusOkay)
                ;sense(A0)  GFS   (high=GoodFrameSync, ie. CorrectPlaybackSpeed)
                ;sense(C5)  COUT
                ;sense(EA)  /OV64 (low=EFM too long?)
                ;------------------
;:              ;:----------------- RAM ...
                ;------------------
                .data?
                org 40h    ;begin of RAM (after I/O port region)
                ;------------------
0040      [40h]      db 0   ;08 00 00 00  ;or 98 07 xx 0B when disk inserted
                   ;[40h].0 = seek_pos0 (0=normal, seek pos0)
                   ;[40h].1 = mute_flag (0=normal, 1=mute)
                   ;[40h].2 = unused (always zero from memfill)
                   ;[40h].3 =
                   ;[40h].4 =   general purpose result flag
                   ;[40h].5 = unused (always zero from memfill)
                   ;[40h].6 =   disc_missing or stopped or so?
                   ;[40h].7 =   toc_loaded ?
                ;---
0041      [41h]      db 0
                   ;[41h].0 =   SENSE=GFS result
                   ;[41h].1 =   also SENSE=GFS related (OLD GFS or so)
                   ;[41h].2 =   also roughly SENSE=GFS related
                   ;[41h].3 =   set by some TEST commands (maybe force omitting some normal processing or so?)
                   ;[41h].4 =
                   ;[41h].5 =   near_target_flag  ;for report/auto_pause/fast_fwd_back, see also: [near_target_offhold]
                   ;[41h].6 = Mini CD (0=normal/12cm, 1=Mini CD/8cm diameter)
                   ;[41h].7 = unused (always zero from memfill)
                ;---
0042      [42h]      db 0
                   ;[42h].0 =   set on TRACK SEEK (not on MSF seek)
                   ;[42h].1 =
                   ;[42h].2 =         fine search ?
                   ;[42h].3 =    sled direction ?  // sign/carry from comparisions
                   ;[42h].4 =
                   ;[42h].5 =   auto_seq_busy ?
                   ;[42h].6 =    seeking ?
                   ;[42h].7 =    recent sensed COUT
                ;---
0043      [43h]      db 0
                   ;[43h].0 =
                   ;[43h].1 =          pause ... ?
                   ;[43h].2 =      PREVENT auto_pause on next track change?
                   ;[43h].3 =
                   ;[43h].4 =      busy flag ?  (seek related)
                   ;[43h].5 =
                   ;[43h].6 =
                   ;[43h].7 =
                ;---
0044            scex_flags   db 0   ;for futher scex flags see "license_flags"
                   ;[scex_flags].0 =
                   ;[scex_flags].1 = enable_scex_reading (0=off, 1=on)
                   ;[scex_flags].2 =
                   ;[scex_flags].3 =
                   ;[scex_flags].4 =    (0=boot/one-shot, 1=test/repeat)
                   ;[scex_flags].5 = scex prev.bit (for sensing start bits being at least TWO continous timer cycles long)
                   ;[scex_flags].6 =
                   ;[scex_flags].7 =
                ;---
0045      [45h]      db 0
                   ;[45h].0 =   sector_needs_processing
                   ;[45h].1 =
                   ;[45h].2 =  ... maybe want lead-in ? ;\toc/subQ ?
                   ;[45h].3 =                           ;/
                   ;[45h].4 = get_q_command (0=no, 1=want SubQ response)
                   ;[45h].5 = unused (always zero from memfill)
                   ;[45h].6 =
                   ;[45h].7 =  ... comparision carry/sign (=direction)
                ;---
0046      [46h]      db 0
                   ;[46h].0 =
                   ;[46h].1 = unused (always zero from memfill)
                   ;[46h].2 = is_data_disc (0=audio_disc, 1=cdrom_disc)
                   ;[46h].3 =
                   ;[46h].4 =   disable test_timeout_1
                   ;[46h].5 = unused (always zero from memfill)
                   ;[46h].6 = set_loc_pending
                   ;[46h].7 = unused (always zero from memfill)
                ;---
0047      [47h]      db 0
                   ;[47h].0        ...error related?
                   ;[47h].1        ...bad sector skipped flag?
                   ;[47h].2 = ReadN/ReadS flag (0=ReadN/Play, 1=ReadS)
                   ;[47h].3        ...accepted_corrupt_sector
                   ;[47h].4 = INT5 request pending (error)
                   ;[47h].5 = INT4 request pending (data end)
                   ;[47h].6 = second response pending (INT2 or INT5)
                   ;[47h].7 = second response shall be "get_id" response
                ;---
0048      [48h]      db 0     ;40  ;or 58 when disk inserted   ;<-- MSBs used by PSone only?
                   ;[48h].0
                   ;[48h].1    blah, tested/cleared, BUT cannot EVER be set?
                   ;[48h].2    ... set by read_toc
                   ;[48h].3 unused (always zero from memfill)
                   ;[48h].4 unused (always zero from memfill)
                   ;[48h].5 unused (always zero from memfill)
                   ;[48h].6 unused (always zero from memfill)
                   ;[48h].7 unused (always zero from memfill)
                ;---
0049      [49h]      db 0      ;PSone: 20, or 71 when disk inserted
                   ;[49h].0     ;use SUB-Q (toc,play,seekp,pause)
                   ;[49h].1
                   ;[49h].2     ;some timeout ?
                   ;[49h].3 unused (always zero from memfill)
                   ;[49h].4 unused (always zero from memfill)
                   ;[49h].5 unused (always zero from memfill)
                   ;[49h].6 unused (always zero from memfill)
                   ;[49h].7 unused (always zero from memfill)
                ;---
004A            gain_flag  db 0  ;00  ;or 0F when disk inserted
                   ;[gain_flag].0   COUT, blah, cleared, BUT never tested, and SET ONLY in UNUSED function
                   ;[gain_flag].1   COUT, blah, used ONLY in UNUSED function
                   ;[gain_flag].2  <--  gain_adjusted (0=notyet, 1=already ok)
                   ;[gain_flag].3 unused (always zero from memfill)
                   ;[gain_flag].4 unused (always zero from memfill)
                   ;[gain_flag].5 unused (always zero from memfill)
                   ;[gain_flag].6 unused (always zero from memfill)
                   ;[gain_flag].7 unused (always zero from memfill)
                ;---
004B            timer2_irq_flag db 0  ;bit7=timer2irq  ;<-- PSone: BFh when disc inserted? PSX: Only bit7 used!
                ;---
004C            toc_flags       db 0    ;Zero (or C0h)
                   ;[toc_flags].0 unused (always zero from memfill)
                   ;[toc_flags].1 unused (always zero from memfill)
                   ;[toc_flags].2 unused (always zero from memfill)
                   ;[toc_flags].3 lead_out_reached (0=normal, 1=leadout)
                   ;[toc_flags].4    prev-subq was non-lead-in ?
                   ;[toc_flags].5    wrong session (or session needs loading?)
                   ;[toc_flags].6 session_is_loaded (0=need loading, 1=okay)
                   ;[toc_flags].7 toc_has_session_info (0=none, 1=yes)
                ;--- --- ---
004D            wanted_data_msf: defs 3   ;seek target, or increasing current addr (or stuck begin of current track MM:SS:00h in AUDIO mode)
004D             wanted_data_mm equ wanted_data_msf+0
004E             wanted_data_ss equ wanted_data_msf+1
004F             wanted_data_ff equ wanted_data_msf+2
                ;---
0050..005B      subq_rx_buf: defs 12  ;Subchannel Q (raw RX values, but possibly with errors, some bytes eventually ADJUSTED after receiving (see 1694h), last 2 bytes are peak level or so)
                ;---
005C            leadout_timeout_timer  db 0  ;(decreasing 100..0)
                ;---
005D            wanted_subq_msf: defs 3   ;wanted_SUBQ_msf? MM:SS:FF (current read address) (sticky address during pause)
005D             wanted_subq_mm equ wanted_subq_msf+0
005E             wanted_subq_ss equ wanted_subq_msf+1
005F             wanted_subq_ff equ wanted_subq_msf+2
                ;---
0060            main_1000hz_eventtimer db 0  ;increments at circa 1000Hz (or less when CPU is too busy)
0061            mech_offhold  db 0  ;decreasing, pre-timer for mech_task
0062      [62h]      db 0   ;decreasing  seek/sled/cout related
0063      [63h]      db 0   ;decreasing  for fast forward/backward ! (or 0=normal read/play)
0064            useless_timer db 0  ;decreasing 50..0  (but NOT actually USED for anything)
0065             defs 1  ;unused (always 00h from memfill)
0066      [66h]      db 0   ;decreasing      seek_timeout_2 ?
0067            toc_timeout   db 0   ;decreasing (set_session, get_q, lead_in related)
0068      [68h]      db 0   ;decreasing   cout/sled/spindle ?
0069      [69h]      db 0   ;decrements (100..0, or 200..0)  sled/gfs/adj ?
                ;---
006A            datamode_flag  db 0
                  ;[datamode_flag].0    read/play  (0=play/audio, 1=read/data)
                  ;[datamode_flag].1-7  unused (always 0 from memfill & fill_toc)
                ;---
006B            seek_task    db 0   ;... seek_phase? ... some task/phase value?  0=normal, 1=seek, 2...
                  ;00h skt_none ;-not seeking
                  ;01h          ;-begin seek
                  ;02h          ;-
                  ;03h          ;-begin seek pos0 or seek index<>1 ?
                  ;04h          ;\
                  ;05h          ;
                  ;06h          ; used with "@@seek_dist_xlat_list"
                  ;07h          ;
                  ;08h          ;
                  ;09h          ;
                  ;0Ah          ;
                  ;0Bh          ;/
                  ;0Ch          ;-close to target ...?
                  ;0Dh          ;-
                  ;0Eh          ;-
                ;---
006C            mech_task    db 0   ;mt_xxx_values
                  ;mt_00h_stopped                       ;-drive inactive
                  ;mt_01h_1st_autofocus_on   ;\try      ;\
                  ;mt_02h_1st_autofocus_off  ;/         ;
                  ;mt_03h_2nd_autofocus_on   ;\retry    ; initial focusing
                  ;mt_04h_2nd_autofocus_off  ;/         ;
                  ;mt_05h_autofocus_failed   ;-fail     ;
                  ;mt_06h_autofocus_okay     ;-okay     ;/
                  ;mt_07h_already_adjusted              ;\
                  ;mt_08h_adj_balance                   ; initial adjusting
                  ;mt_09h_adj_gain                      ;/
                  ;mt_0Ah_normal_speed_ok    ;\core, when disc is spinning
                  ;mt_0Bh_double_speed_entry ; (loops through these tasks when
                  ;mt_0Ch_double_speed_ok    ; speed changes, otherwise stays
                  ;mt_0Dh_normal_speed_entry ;/in the "ok" proc for curr speed)
                  ;mt_0Eh_unused
                  ;mt_0Fh_unused
                  ;mt_10h_stop_part_1        ;\
                  ;mt_11h_stop_part_2        ; motor off
                  ;mt_12h_stop_part_3        ;/
                ;---
006D            disc_task       db 0
                  dt_0_nodisk   equ 0  ;bit0 no disk / door open
                  dt_1_stopped  equ 1  ;bit1 motor stopped
                  dt_2_whatever equ 2  ;bit2   ?
                  dt_3_whatever equ 3  ;bit3   ?
                  dt_4_fast     equ 4  ;bit4 fast forward/backward
                  dt_5_seek     equ 5  ;bit5 seek
                  dt_6_unused   equ 6  ;bit6 n/a (unused)
                  dt_7_unused   equ 7  ;bit7 n/a (unused)
                  dt_mask_value equ 3Ch  ;bit2,3,4,5 (active operations)
                  ;used combinations are:
                  ;  01h --> dt_0_nodisk                  ;no disk / door open
                  ;  02h --> dt_1_stopped                 ;motor stopped
                  ;  04h --> dt_2_whatever                ;
                  ;  0Ch --> dt_2_whatever+dt_3_whatever  ;
                  ;  14h --> dt_2_whatever+dt_4_fast      ;fast forward/backward
                  ;  20h --> dt_5_seek                    ;seek (seek command, or read/play with setloc)
                  ;  3Ch <-- dt_mask_value (active operations)
                ;---
006E            drv_filter_file    db 0   ;SetFilter setting (file)
006F            drv_filter_channel db 0   ;SetFilter setting (channel)
                ;---
0070            seek_timeout   db 0  ;decreasing  seek timeout (forced=max during speed change/spin-up)
0071            mech_timeout_1 db 0  ;decreasing  mech related
0072            focus_timeout  db 0  ;decreasing BBh..0
0073            focus_quality  db 0  ;inc/dec, focus_quality (0..32)
0074            mech_timeout_2 db 0  ;decreasing     ... some timeout
0075            boot_scex_timeout   db 0  ;decreasing 4Eh..0 ;for SCEx reading after loading a new disc
0076            near_target_offhold db 0  ;decreasing 0Bh..0 ;offhold some actions when ultranear target ...?
0077            focus_error_timer   db 0  ;decreasing 12..0  ;see also: [focus_error_count]
0078            test_timeout_1      db 0  ;decreasing 30..0  ;TEST2 pin related (maybe provoke unreliable operation in test mode, for testing stable cdrom-read-error-handling ???)
                ;---
0079            current_track   db 0  ;for auto_pause after current track
                ;---
007A            seek_dist_8bit      db 0  ;-byte, fine 1..9 (or 0=use use 16bit seek_dist_msb/lsb)
007B            seek_dist_16bit_msb db 0  ;\word, seek_dist_16bit (msb,lsb)
007C            seek_dist_16bit_lsb db 0  ;/
                ;---
007D            distance_msf: defs 3
007D             distance_mm equ distance_msf+0
007E             distance_ss equ distance_msf+1
007F             distance_ff equ distance_msf+2
                ;---
0080            rx_sect_header    db 0,0,0,0    ;see also: 0220h
0084            rx_sect_subheader db 0,0,0,0    ;see also: 0224h
                ;---
0088            scratch_values: defs 8
0088             scratch_msf_mm1    equ scratch_values+0  ;\
0089             scratch_msf_ss1    equ scratch_values+1  ; msf1
008A             scratch_msf_ff1    equ scratch_values+2  ;/
008B             scratch_msf_mm2    equ scratch_values+3  ;\
008C             scratch_msf_ss2    equ scratch_values+4  ; msf2
008D             scratch_msf_ff2    equ scratch_values+5  ;/
0088             scratch_cxd_mid    equ scratch_values+0  ;\
0089             scratch_cxd_lsb    equ scratch_values+1  ; cxd, ordered as MID,LSB,MSB (really as so)
008A             scratch_cxd_msb    equ scratch_values+2  ;/
0088             scratch_num_params equ scratch_values+0

0088      [88h]        ;<-- ...
0089      [89h]        ;<-- ...
008A      [8Ah]        ;<-- ... counter.msb / dividend.msb
          [8Bh]        ;<-- used for VARIOUS stuff ... counter.lsb / dividend.lsb
          [8Ch]        ;<-- rarely used: scratch_divider
          [8Dh]        ;<-- rarely used: temp
008E      [8Eh]        ;<--   ;01 (or other)  ;<-- rarely used: temp
008F      [8Fh]        ;<--   ;FF (or other)  ;<-- often used: temp/various
                ;---
0090            license_flags db 0   ;00h (or 91h when disk inserted + spinning)
                  ;[license_flags].0 SCEX:     scex read busy?
                  ;[license_flags].1 SCEX:     boot_scex_timeout counter is running
                  ;[license_flags].2 unused (always zero from memfill)
                  ;[license_flags].3 unused (always zero from memfill)
                  ;[license_flags].4 AUDIO:    audio exists ?  (1=AUDIO EXISTS)
                  ;[license_flags].5 unused (always zero from memfill)
                  ;[license_flags].6 SCEX:     disc bad  (1=DISC MISSING)
                  ;[license_flags].7 SCEX:     scex bad  (1=DISC UNLICENSED)
                ;---
0091            toc_disc_type   db 0  ;Disk Type (00h=CD-DA or CD-ROM, 10h=CD-I, 20h=CD-ROM-XA)
0092            toc_atip        db 0
                ;---
0093            debug_status_index   db 0 ;bit0-2=PacketIndex, bit7=TransferBusy
0094..009B      debug_status_packet: defs 8   ;(transferred via "ROMSEL" stuff)
009C            debug_status_reply   db 0 ;leading byte of the packet snippets
                ;---
009D            focus_error_count db 0  ;increasing 0..0Ah, timeout? max retries?
009E            test_timeout_2    db 0  ;decreasing 78h..0  ;(PSone: or 01h when disk inserted + spinning?)
009F            secret_unlock_flags db 0        ;for cmd_5xh
                ;---
00A0            curr_idx_04h_w_drv_maxaddr_lo     db 0  ;\ ;Always 23h
00A1            curr_idx_05h_w_drv_maxaddr_hi     db 0  ;  ;09h (5Dh when disk inserted)
00A2            curr_idx_06h_w_drv_maxaddr_bit16  db 0  ;/ ;Always 00h
00A3            curr_idx_10h_w_drv_address_lo     db 0  ;\ ;Always 00h ;\
00A4            curr_idx_11h_w_drv_address_hi     db 0  ;  ;Always 00h ; group
00A5            curr_idx_12h_w_drv_address_bit16  db 0  ;/ ;Always 00h ;/
00A6            curr_idx_0Eh_w_host_address_lo db 0            ;\group
00A7            curr_idx_0Fh_w_host_address_hi db 0            ;/
                ;---
00A8            curr_idx_0Ch_w_host_len_lo db 0              ;\
00A9            curr_idx_0Dh_w_host_len_hi db 0  ;40h or xx  ;/  ;<-- size.MSB, or 40h ??? upper bits = FLAGS !?!
                  ;[curr_idx_0Dh_w_host_len_hi].0-3  size.msb (usually 8 or 9)
                  ;[curr_idx_0Dh_w_host_len_hi].4    can get set... but usually overwritten by zero before actually sending it to hardware?
                  ;[curr_idx_0Dh_w_host_len_hi].5    unused (0)     ;\except: test command may use other values
                  ;[curr_idx_0Dh_w_host_len_hi].6    always set (1) ;/
                  ;[curr_idx_0Dh_w_host_len_hi].7    ... 1=intact, non-corrupt sector flag? ... what happens when this bit is zero?
                ;---
00AA            curr_idx_05h_r_drv_addr_base db 0  ;base address (in 1K-steps) of most recently decoded sector
                ;---
00AB             defs 1  ;unused (always 00h from memfill)
                ;---
00AC            temp_idx_07h_r_int_stat db 0  ;<--- TEMP alternate to "[curr_idx_07h_r_int_stat]"
                ;---
00AD             defs 1  ;unused (always 00h from memfill)
00AE             defs 1  ;unused (always 00h from memfill) ;<-- PSone version only: 01 when disk inserted ?
00AF             defs 1  ;unused (always 00h from memfill) ;<-- PSone version only: 06 when disk inserted ?
                ;---
00B0            curr_idx_00h_r_ecc_status   db 0  ;00 DC 00 02 00 E0 08   ;\or else when disk inserted
                  ;[curr_idx_00h_r_ecc_status].0 FORM (0=FORM1, 1=FORM2)
                  ;[curr_idx_00h_r_ecc_status].1 MODE (0=MODE1, 1=MODE2)
                  ;[curr_idx_00h_r_ecc_status].2 ECC Okay (0=Okay, 1=Bad)
                  ;[curr_idx_00h_r_ecc_status].3 EDC Okay (0=Okay, 1=Bad)
                  ;[curr_idx_00h_r_ecc_status].4 Correction Done (0=None, 1=Corrected) ;(unused by PSX bios)
                  ;[curr_idx_00h_r_ecc_status].5 Correction Inhibit (0=Okay, 1=Correction Failed)
                  ;[curr_idx_00h_r_ecc_status].6 Erasure in Block   (0=Okay, 1=Correction Failed)
                  ;[curr_idx_00h_r_ecc_status].7 EDC All Zero       (0=No/EDC exists, 1=Yes/EDC is blank)
                ;---
00B1            curr_idx_01h_r_decoder_status   db 0  ;read, but used only by UNUSED function
                  ;bit0 = no sync    (0=Okay, 1=sync mark missing)
                  ;bit1 = short sync (0=Okay, 1=sync mark occurred within data area)
                  ;bit5 = real-time adpcm busy (0=no, 1=yes/playing)
                ;---
00B2            curr_idx_02h_r_hdr_error_flgs db 0  ;nonzero = corrupt sector
                ;---
00B3            curr_idx_07h_r_int_stat   db 0   ;<-- see also: [temp_idx_07h_r_int_stat]
                  ;[curr_idx_07h_r_int_stat].0 HCRISD   Host Chip Reset Issued
                  ;[curr_idx_07h_r_int_stat].1 HSTCMND  Host Command
                  ;[curr_idx_07h_r_int_stat].2 DECINT   Decoder Interrupt
                  ;[curr_idx_07h_r_int_stat].3 HDMACMP  Host DMA Complete
                  ;[curr_idx_07h_r_int_stat].4 RTADPEND Real-time ADPCM end
                  ;[curr_idx_07h_r_int_stat].5 RSLTEMPT Result Empty
                  ;[curr_idx_07h_r_int_stat].6 DECTOUT  Decoder Time Out
                  ;[curr_idx_07h_r_int_stat].7 DRVOVRN  Drive Overrun
                ;---
00B4             defs 1  ;unused (always 00h from memfill)
                ;---
00B5            curr_idx_11h_r_psx_fifo_flags db 0
                  ;[curr_idx_11h_r_psx_fifo_flags].0-2 HINTSTS pending INT flags (0=none, all acknowledged)
                  ;[curr_idx_11h_r_psx_fifo_flags].3 XXX DMABUSY ;<-- changed (BUT OTHERWISE unused)!?!
                  ;[curr_idx_11h_r_psx_fifo_flags].4 XXX PRMRRDY ;<-- param_fifo (0=empty)
                  ;[curr_idx_11h_r_psx_fifo_flags].5   RSLEMPT  ;unused by PSX bios
                  ;[curr_idx_11h_r_psx_fifo_flags].6   RSLTWRDY ;unused by PSX bios
                  ;[curr_idx_11h_r_psx_fifo_flags].7 XXX BUSYSTS ;command_issued (0=none)
                ;---
00B6            curr_idx_03h_w_decoder_control            db 0
                  ;[curr_idx_03h_w_decoder_control]=08h --> used BEFORE writing below values
                  ;[curr_idx_03h_w_decoder_control]=0Dh --> cdrom/data ;real-time correction
                  ;[curr_idx_03h_w_decoder_control]=0Fh --> audio/cdda ;cd-da mode
                ;---
00B7            curr_idx_07h_w_chip_control db 0
                  ;[curr_idx_07h_w_chip_control].0 reserved          ;unused by PSX
                  ;[curr_idx_07h_w_chip_control].1 dblspeed          ;speed (0=normal, 1=double)
                  ;[curr_idx_07h_w_chip_control].2 repeat correction ;unused by PSX
                  ;[curr_idx_07h_w_chip_control].3 open sync window  ;unused by PSX
                  ;[curr_idx_07h_w_chip_control].4 cd-da play audio  ;mode (0=cdrom, 1=audio)
                  ;[curr_idx_07h_w_chip_control].5 cd-da mute (0=normal, 1=mute) ;<-- this is also manipulated independently of below bit6,7
                  ;[curr_idx_07h_w_chip_control].6 real-time adpcm mute (0=normal, 1=mute)
                  ;[curr_idx_07h_w_chip_control].7 sound-map adpcm mute (0=normal, 1=mute)
                ;---
00B8            curr_idx_09h_w_int_mask    db 0   ;always DEh
                  ;[curr_idx_09h_w_int_mask]=DEh ;always set to DEh
                  ;[curr_idx_09h_w_int_mask].0 HCRISD   Host Chip Reset Issued (=0=Off)
                  ;[curr_idx_09h_w_int_mask].1 HSTCMND  Host Command           (=1=On)
                  ;[curr_idx_09h_w_int_mask].2 DECINT   Decoder Interrupt      (=1=On)
                  ;[curr_idx_09h_w_int_mask].3 HDMACMP  Host DMA Complete      (=1=On)
                  ;[curr_idx_09h_w_int_mask].4 RTADPEND Real-time ADPCM end    (=1=On)
                  ;[curr_idx_09h_w_int_mask].5 RSLTEMPT Result Empty           (=0=Off)
                  ;[curr_idx_09h_w_int_mask].6 DECTOUT  Decoder Time Out       (=1=On)
                  ;[curr_idx_09h_w_int_mask].7 DRVOVRN  Drive Overrun          (=1=On)
                ;---
00B9            curr_idx_16h_w_irq_to_psx db 0
                  ;[curr_idx_16h_w_irq_to_psx].0-2 request INT0..7
                  ;[curr_idx_16h_w_irq_to_psx].3-7 unused (always 0)
                ;---
00BA            curr_idx_0Ah_w_clrctl     db 0
                  ;[curr_idx_0Ah_w_clrctl]=00h,01h,70h,71h ... direct writes
                  ;[curr_idx_0Ah_w_clrctl].0 ... resync  ;strobed after speed changes
                  ;[curr_idx_0Ah_w_clrctl].4 ... ack/clear real-time adpcm ?
                  ;[curr_idx_0Ah_w_clrctl].5 ... ack parameter fifo
                  ;[curr_idx_0Ah_w_clrctl].6 ... ack command
                ;---
00BB            drv_mode        db 0   ;SetMode setting (mode)
                  ;[drv_mode].0 cdda (0=off, 1=allow reading edc-less cdda sectors)
                  ;[drv_mode].1 auto_pause (0=off, 1=pause on end of track)
                  ;[drv_mode].2 report    (0=off, 1=report)
                  ;[drv_mode].3 xa_filter (0=off, 1=filter)
                  ;[drv_mode].4  xxx?
                  ;[drv_mode].5 sector_size (0=800h, 1=924h)
                  ;[drv_mode].6 xa_adpcm (0=off, 1=play adpcm audio)
                  ;[drv_mode].7 speed (0=normal, 1=double)
                ;---
00BC            drv_stat        db 0   ;GetStat setting (stat)
                  ;[drv_stat].0 cmd_error
                  ;[drv_stat].1 spindle_motor
                  ;[drv_stat].2 seek_error
                  ;[drv_stat].3 id_error
                  ;[drv_stat].4 shell_open
                  ;[drv_stat].5 read_active
                  ;[drv_stat].6 seek_active
                  ;[drv_stat].7 play_active
                ;---
00BD            err_code_for_id   db 0  ;\
00BE            err_code_for_seek db 0  ; three error codes
00BF            err_code_for_cmd  db 0  ;/
                ;---
00C0..00FF      stack: defs 40h         ;\stack, unused/uninitialized entries
                stacktop equ $-1        ;/tend to be FFh (or sometimes DFh/FDh)
                ;---
                 ;C0h 6  FFh-filled            ;stack...                    ;\
                 ;C6h 1  Usually DFh           ;sometimes [0EBh and up] are non-FFh, too
                 ;C7h 15 FFh-filled            ;(depending on disk or commands or so)
                 ;D6h 1  Usually FDh (or FFh)  ;                            ;
                 ;D7h 24 FFh-filled                                         ; stack
                 ;EFh 4  on power-up FFh-filled, other once when disk read  ;
                 ;F3h 8  changes randomly (even when no disk inserted)      ;
                 ;FBh 5     3C 2A D6 10 95   ;<-- on PSone                  ;/
                ;---
0100..01C5      toc_track_list: defs 99*2  ;TOC Entries for Start of Track 1..99 (MM:SS)
01C6            toc_first_track_no   db 0  ;TOC First Track number (usually 01h)
01C7            toc_last_track_no    db 0  ;TOC Last Track number (usually 01h or higher)
01C8..01CA      toc_lead_out_msf db 0,0,0  ;TOC Entry for Start of Lead-Out (MM:SS:FF)
                toc_clear_end_addr:
                ;---
01CB            mismatch_msf: defs 3   ;difference_between_subq_and_data_msf     ;(MM:SS=00:00, FF=depends on disk, 01 or 02 or 06; or 00 when no disk)
                ;---
01CE             defs 1  ;unused (always 00h from memfill)
01CF             defs 1  ;unused (always 00h from memfill) ;<-- PSone: Depends on disk (NULL minus N*6) (or 00 when no disk) (maybe reflection level / laser intensity or so)
                ;---
01D0..01D3      scex_string        db 0,0,0,0  ;SCEx String
01D4            scex_rx_char       db 0        ;SCEx rx char shiftreg (with RX bits shifted in)
01D5            scex_rx_phase      db 0
01D6            scex_rx_prescaler  db 0  ;used as 2bit scex-prescaler (also 6bit scex-silence counter)
01D7            scex_rx_index      db 0  ;index in scex_string (0..3) (or 4=done)
01D8            scex_total_count   db 0  ;SCEx total counter   ;for command 19h,05h
01D9            scex_success_count db 0  ;SCEx success counter
                ;see also: scex_flags
                ;---
01DA..01DC       defs 3  ;unused (always 00h-filled from memfill)
                ;---
01DD            previous_msf: defs 3   ;00h-filled     (or ... SS:FF)
                ;---
01E0..01E5      cmd_param_buf: defs 6   ;Command Buffer (usually 19h,60h,E2h,01h = Read RAM Command)
01E6..01E8       defs 3  ;space for more params (usually unused, unless somebody sends more params than commonly needed) (in case of test commands with "len" byte, this would be actually allowed)
                ;UNSTABLE: below can be destroyed by commands with too-many-parameters!
                ;---
01E9            curr_cx30_balance_adj db 0 ;cx(30+n) ;CXA1782BR Servo Amplifier, BalanceAdjust
01EA            curr_cx38_gain_adj    db 0 ;cx(38+n) ;CXA1782BR Servo Amplifier, GainAdjust
01EB            adj_dec_offhold db 0  ;for cx(3X) ;\balance/gain adj offholds (initially 01h, aka no offhold, thereafter wrapping to (1)00h, aka offhold 256 times?)
01EC            adj_inc_offhold db 0  ;for cx(3X) ;/
                ;---
01ED..01EF      drv_setloc_setting db 0,0,0  ;Setloc setting (MM:SS:FF)
                ;---
01F0..01F7      drv_response: defs 8      ;response buffer (some response are sent 'on-the-fly', but others are first stored temporarily in this buffer)
                ;---
01F8            rather_unused_value  db  00h     ;<-- used only for UNUSED "cmd_19h_8xh"
                ;---
01F9            desired_track db 0  ;\Selected Target (parameter from Play command) (also SEEMS to be same to SetSession value on PSone, BUT maybe that's just because each session is equivalent to a new track)
01FA            desired_index db 0  ;/    ;<-- Index seeking seems to be only half-implemented
                ;---
01FB            misc_temp1    db 0   ;\temp values for a few functions
01FC            misc_temp2    db 0   ;/
                ;---
01FD            result_msf: defs 3
01FD             result_mm  equ result_msf+0  ;(MM=98..99=TOC ?)
01FE             result_ss  equ result_msf+1
01FF             result_ff  equ result_msf+2
                ;---
0200..020B      subq_rx_copy: defs 12  ;Subchannel Q (real unadjusted values)
                ;---
020C            cmd_2nd_response_type db 0
020D            drv_desired_session db 0  ;Desired Session (from SetSession command)
020E            drv_current_session db 0  ;Current Session (actual location of drive head)
020F            recent_sense_gfs_bits db 0  ;<-- new bits shifted in
                ;---
0210..0209      subq_position: defs 10 ;Subchannel Q (adjusted position values)
                ;---
021A            memorized_sense_balance_result: defs 5
                ;---
021F             defs 1  ;unused (always 00h from memfill)
                ;---
0220            sector_header:
0220..0223       db 0,0,0,0  ;Data Sector Header (MM:SS:FF:Mode)
0224..0227       db 0,0,0,0  ;Data Sector CD-XA Subheader (file,channel,sm,ci) (00h-filled on non-MODE2 discs)
                ;---
0228             defs 8  ;unused (always 00h from memfill)
                  ;above [228h..22Fh] are UNUSED by THIS BIOS version
                  ;but ARE used by later PSone version:
                  ;PSone: [228h]  00h
                  ;PSone: [229h]  Usually 00h (shortly other value on power-up, and maybe on seek)
                  ;PSone: [22Ah]  10h (or 00h when no disk)
                  ;PSone: [22Bh]  00h
                  ;PSone: [22Ch]  00h
                  ;PSone: [22Dh]  00h
                  ;PSone: [22Eh]  01h or 0Ah or 03h (or else for other disk)
                  ;PSone: [22Fh]  03h or 00h or 01h (or else for other disk)
                ;---
0230            secret_string_buffer: defs 10h
                 ;and, PSone seems to use [230h..232h] during spin-up/read-toc?
                ;---
0240             .errif $<>0240h
                ;------------------
0240..02FF       defs 0c0h  ;Unused (00h-filled) (no ROM, RAM, or I/O mapped here)
0300..0FFF       defs 0d00h ;Unused (probably 00h-filled, too)
                ;------------------
;:              ;:----------------- Reset/Main
                ;------------------
                .code
                .pack_org 0
                org 1000h  ;begin of 16Kbyte ROM area
                ;------------------
                sony_reset_entrypoint:
                sony_soft_reset:
1000 9B          di
1001 A6 02       mov  a,2h                      ;\
1003 B7 3E       mov  [io_misc],a               ;
1005 0F 3E FD    jz   [io_misc].7,$     ;wait   ;/
1008 9C          mov  sp,stacktop
1009 CD 10 98    call init_onchip_timers
100C CD 10 D4    call init_onchip_port_data
100F CD 10 B1    call init_onchip_port_directions
1012 A6 2E       mov  a,2Eh                     ;\init reserved LCD control?
1014 B7 20       mov  [io_lcdcr],a  ;??         ;/(or some other custom port?)
1016 CD 10 E9    call zerofill_all_ram_except_stack
1019 A6 71       mov  a,71h                     ;\
101B B7 0A       mov  [io_spcr1],a              ;/
101D 9A          ei
101E AE 64       mov  x,64h ;100 decimal        ;\delay 100ms
1020 CD 41 C5    call delay_x_timer2_steps      ;/
1023 9B          di
1024 AE 0A       mov  x,idx_0Ah_w_clrctl        ;\
1026 BF 04       mov  [io_porte_idx],x          ;
1028 A6 71       mov  a,71h                     ;
102A CD 40 FB    call write_data_bus            ;/
102D A6 0C       mov  a,0Ch                     ;\
102F B7 08       mov  [io_intcr],a              ;/
1031 16 09       set  [io_intsr].3      ;ack latched SCOR bit
1033 14 09       set  [io_intsr].2      ;ack latched XINT bit
1035 9A          ei
1036 CD 29 C6    call init_various_idx_stuff    ;-
1039 10 48       set  [48h].0                   ;-
103B CD 42 22    call mute_cd_da                ;-
103E CD 41 D0    call cancel_auto_sequence      ;-
1041 CD 42 05    call stop_spindle_motor        ;-motor off
1044 A6 89       mov  a,89h   ;cx(8980)    ;msb ;\
1046 AE 80       mov  x,80h                ;mid ; CXD2510Q Signal Processor
1048 BF 88       mov  [scratch_cxd_mid],x  ;mid ; MODE = CDROM (Data)
104A CD 43 2B    call send_16bit_to_cxd2510q    ;/
104D A6 A0       mov  a,0A0h  ;cx(A040)    ;msb ;\
104F AE 40       mov  x,40h                ;mid ; CXD2510Q Signal Processor
1051 BF 88       mov  [scratch_cxd_mid],x  ;mid ; Attentuation Off
1053 CD 43 2B    call send_16bit_to_cxd2510q    ;/
1056 A6 9B       mov  a,9Bh   ;cx(9B00)    ;msb ;\
1058 AE 00       mov  x,00h                ;mid ; CXD2510Q Signal Processor
105A BF 88       mov  [scratch_cxd_mid],x  ;mid ; NormalSpeed
105C CD 43 2B    call send_16bit_to_cxd2510q    ;/
105F CD 41 F9    call init_clv_and_servo_coeff  ;-
1062 A6 01       mov  a,(1 shl dt_0_nodisk)     ;\initially no disc
1064 B7 6D       mov  [disc_task],a             ;/
1066 18 BC       set  [drv_stat].4 ;shell_open  ;-initially door open (new disc)
1068 A6 20       mov  a,20h                     ;\
106A B7 BB       mov  [drv_mode],a              ;/
106C CD 29 16    call mark_read_seek_play_off   ;-
106F A6 01       mov  a,1h                      ;\
1071 C7 02 0E    mov  [drv_current_session],a   ; initially session=1
1074 C7 02 0D    mov  [drv_desired_session],a   ;/
                ;- - - - - -
1077 0B 01 17    jz   [io_portb].5,@@to_sony_test_mode    ;TEST1 pin (CL316)
                ;- - - - - -
                @@mainloop:
107A CD 11 39    call main_func_cxa1782br        ;... POS0 ?
107D CD 13 9A    call main_func_receive_subq
1080 CD 1C C9    call main_func_timed_events
1083 CD 2A 58    call main_func_cmd_params_sector ;cmd/param... sector header...
1086 CD 45 B8    call main_func_2nd_response     ;INT2 or INT5
1089 CD 46 97    call main_func_deliver_int5     ;INT5
108C CD 46 6F    call main_func_check_data_end   ;INT4
                 ;and, "sony_timer2_vector" gets called every 1000hz
108F 20 E9       jr   @@mainloop
                ;---
                @@to_sony_test_mode:
1091 CC 49 B8    jmp  sony_test_mode
                ;------------------
;:              ;:-----------------
                ;------------------
                bcd_date_version:
1094             db 095h,007h,024h,0C1h   ;24th July 1995, version C1h
                ;------------------
                init_onchip_timers:
                 ;sets Timer2 to approximately 1000 Hz rate:
                 ;OSC is 4.000 MHz (as so on older PSX mainboards)
                 ;SysClk is 2.000 MHz (OSC/2)
                 ;Timer2 Prescaler is 62.5 kHz (SysClk/32)
                 ;Timer2 Compare Rate is 1008 Hz (Prescaler/62)   ;(?)
                 ;Timer2 is used for 250bps SCEx transfer and mainloop events
1098 A6 82       mov  a,82h             ;\bit0-1: Timer2 Prescaler = SysClk/32
109A B7 10       mov  [io_tbcr1],a      ;/bit7: "timebase"=OSC/128
109C A6 08       mov  a,08h             ;\bit3: reset/ack "timebase" irq
109E B7 11       mov  [io_tbcr2],a      ;/bit6: disable "timebase" irq
10A0 A6 00       mov  a,00h             ;\timer 1: (unused)
10A2 B7 12       mov  [io_tcr],a        ;/
10A4 A6 40       mov  a,40h             ;\timer 2: output_compare irq enable
10A6 B7 1C       mov  [io_tcr2],a       ;/
10A8 A6 3E       mov  a,3Eh ;62 decimal ;\timer 2: output_compare
10AA B7 1E       mov  [io_oc2],a        ;/(counter range=01h..3Dh or ..3Eh ?)
10AC A6 01       mov  a,01h             ;\timer 2: initial counter value (blah)
10AE B7 1F       mov  [io_tcnt2],a      ;/
10B0 81          ret
                ;------------------
                init_onchip_port_directions:
10B1 10 3E       set  [io_misc].0       ;<-- is that INDEX for below [2..E] ??
10B3 A6 3C       mov  a,3Ch
10B5 B7 02       mov  [io_hi_ddrc],a       ;...direction...
10B7 A6 0F       mov  a,0Fh
10B9 B7 08       mov  [io_hi_rcr1],a
10BB A6 40       mov  a,40h
10BD B7 09       mov  [io_hi_rcr2],a
10BF A6 00       mov  a,00h                     ;\
10C1 B7 0A       mov  [io_hi_wom1],a            ;
10C3 A6 00       mov  a,00h                     ;
10C5 B7 0B       mov  [io_hi_wom2],a            ;/
10C7 A6 00       mov  a,00h                     ;\
10C9 B7 0E       mov  [io_hi_kwien],a           ;/
10CB A6 FF       mov  a,0FFh ;direction=OUT
10CD B7 03       mov  [io_hi_ddrd],a   ;       direction=OUT
10CF B7 04       mov  [io_hi_ddre],a   ;index: direction=OUT
10D1 11 3E       res  [io_misc].0       ;<-- is that INDEX for above [2..E] ??
                 ;default direction [io_hi_ddra]=00h (INPUT) isn't
                 ;initialized here (though it's so on /RESET anyways,
                 ;as well as on jumps to "sony_soft_reset") (and it's
                 ;also "initialized" on first call to "write_data_bus")
10D3 81          ret
                ;------------------
                init_onchip_port_data:
10D4 A6 00       mov  a,0h
10D6 B7 00       mov  [io_porta_dta],a
10D8 A6 00       mov  a,0h
10DA B7 01       mov  [io_portb],a
10DC A6 C5       mov  a,0C5h
10DE B7 02       mov  [io_portc],a
10E0 A6 FF       mov  a,0FFh
10E2 B7 03       mov  [io_portd],a
10E4 A6 00       mov  a,idx_00h_dummy
10E6 B7 04       mov  [io_porte_idx],a
10E8 81          ret
                ;------------------
                zerofill_all_ram_except_stack:
10E9 4F          mov  a,00h,slow        ;-fillvalue
10EA AE 80       mov  x,80h             ;\
                @@lop1:                 ;
10EC 5A          dec  x                 ;
10ED 2B 04       js   @@done1           ; zerofill [00BFh..0040h]
10EF E7 40       mov  [0040h+x],a       ;
10F1 20 F9       jr   @@lop1            ;
                @@done1:                ;/
10F3 AE FF       mov  x,0FFh
10F5 D7 01 00    mov  [0100h+x],a       ;-zerofill [01FFh]
                @@lop2:                 ;\
10F8 5A          dec  x                 ;
10F9 27 05       jz   @@done2           ; zerofill [01FEh..0101h]
10FB D7 01 00    mov  [0100h+x],a       ;
10FE 20 F8       jr   @@lop2            ;
                @@done2:                ;/
1100 C7 01 00    mov  [0100h],a         ;-zerofill [0100h]
1103 AE 3F       mov  x,3Fh
1105 D7 02 00    mov  [0200h+x],a       ;-zerofill [023Fh]
                @@lop3:                 ;\
1108 5A          dec  x                 ;
1109 2B 05       js   @@done3           ; zerofill [023Eh..0200h]
110B D7 02 00    mov  [0200h+x],a       ;
110E 20 F8       jr   @@lop3            ;
                @@done3:                ;/
1110 81          ret
                ;------------------
                zerofill_all_ram_except_stack_and_except_230h_thru_23Fh:
                ;UNUSED! (same as above, but excluding 230h..23Fh)
1111 4F          mov  a,00h,slow        ;-fillvalue
1112 AE 80       mov  x,80h             ;\
                @@lop1:                 ;
1114 5A          dec  x                 ;
1115 2B 04       js   @@done1           ; zerofill [00BFh..0040h]
1117 E7 40       mov  [0040h+x],a       ;
1119 20 F9       jr   @@lop1            ;
                @@done1:                ;/
111B AE FF       mov  x,0FFh
111D D7 01 00    mov  [0100h+x],a       ;-zerofill [01FFh]
                @@lop2:                 ;\
1120 5A          dec  x                 ;
1121 27 05       jz   @@done2           ; zerofill [01FEh..0101h]
1123 D7 01 00    mov  [0100h+x],a       ;
1126 20 F8       jr   @@lop2            ;
                @@done2:                ;/
1128 C7 01 00    mov  [0100h],a         ;-zerofill [0100h]
112B AE 2F       mov  x,2Fh     ;<---
112D D7 02 00    mov  [0200h+x],a       ;-zerofill [022Fh]
                @@lop3:                 ;\
1130 5A          dec  x                 ;
1131 2B 05       js   @@done3           ; zerofill [022Eh..0200h]
1133 D7 02 00    mov  [0200h+x],a       ;
1136 20 F8       jr   @@lop3            ;
                @@done3:                ;/
1138 81          ret
                ;------------------
                main_func_cxa1782br:        ;... POS0 ?
1139 00 40 01    jnz  [40h].0,seek_pos0         ;-check seek_pos0 flag
113C 81          ret
                ;------------------
                seek_pos0:
113D A6 12       mov  a,12h  ;cx(12)            ;\CXA1782BR Servo Amplifier
113F CD 43 33    call send_8bit_to_cxa1782br    ;/SledKickHeightInvalid ;??
                ;- - - -
1142 04 01 1A    jnz  [io_portb].2,@@not_yet_at_pos0    ;-check POS0 pin
                ;- - - -
1145 11 40       res  [40h].0 ;seek_pos0        ;-mark seek pos0 done
1147 A6 20       mov  a,20h  ;cx(20)            ;\CXA1782BR Servo Amplifier
1149 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
114C 00 6D 0F    jnz  [disc_task].dt_0_nodisk,@@done
114F 03 6D 09    jz   [disc_task].dt_1_stopped,@@cont
1152 0E 40 09    jnz  [40h].7,@@done
1155 04 49 06    jnz  [49h].2,@@done
1158 0C 40 03    jnz  [40h].6,@@done
                @@cont:
115B CC 42 98    jmp  whatever_XXX_4298h            ;--------->
                ;---
                @@done:
115E 81          ret
                ;---
                @@not_yet_at_pos0:
115F 10 40       set  [40h].0 ;seek_pos0        ;-mark seeking pos0
1161 A6 23       mov  a,23h  ;cx(23)            ;\CXA1782BR Servo Amplifier
1163 CC 43 33    jmp  send_8bit_to_cxa1782br    ;/SledFastReverse
                ;------------------
                event_500hz_watch_GFS_good_spindle_speed:
1166 B6 6C       mov  a,[mech_task]             ;\exit if stopped
1168 27 27       jz   @@exit  ;mt_00h_stopped   ;/
116A A6 A0       mov  a,0A0h ;sense(A0) gfs     ;\CXD2510Q Signal Processor
116C CD 43 41    call cxd_send_8bit_fragment_a  ;/select SENSE=GFS
116F 10 41       set  [41h].0                   ;\
1171 0E 01 02    jnz  [io_portb].7,@@this_sense ;   <---SENSE=GFS (high=good)
1174 11 41       res  [41h].0                   ;
                @@this_sense:                   ;/
1176 0A 4C 18    jnz  [toc_flags].5,@@exit      ;\
1179 04 41 15    jnz  [41h].2,@@exit            ;/
117C 03 41 0B    jz   [41h].1,@@cont            ;\
117F 01 41 08    jz   [41h].0,@@cont  ;GFS      ;/
1182 14 41       set  [41h].2                   ;-
1184 12 BC       set  [drv_stat].1 ;spindle_motor
1186 1F 43       res  [43h].7                   ;-
1188 3F 69       mov  [69h],00h                 ;-
                @@cont:
118A 12 41       set  [41h].1                   ;\
118C 00 41 02    jnz  [41h].0,@@exit            ;   ... copy to OLD GFS ...?
118F 13 41       res  [41h].1                   ;/
                @@exit:
1191 81          ret
                ;------------------
                eventually_seek_1st_track:   ;<-- ONLY if in Lead-In
1192 06 41 20    jnz  [41h].3,@@exit            ;-
1195 B6 51       mov  a,[subq_rx_buf+1] ;Track  ;\
1197 26 1C       jnz  @@exit                    ;/
1199 B6 6B       mov  a,[seek_task]             ;\
119B 26 18       jnz  @@exit                    ;/
119D B6 6D       mov  a,[disc_task]             ;\
119F A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)
11A1 27 04       jz   @@cont                    ;/
11A3 05 6D 0F    jz   [disc_task].dt_2_whatever,@@exit  ;<-- blah, does "ret" either way
11A6 81          ret
                ;---
                @@cont:
11A7 00 6A 0B    jnz  [datamode_flag].0,@@non_audio
11AA CD 46 6C    call request_int4_data_end             ;-INT4 data end (?!?!)
11AD CD 44 56    call get_first_track_or_01h_if_unknown ;\
11B0 AE 00       mov  x,0h                              ; seek 1st track
11B2 CC 29 58    jmp  seek_track_a                      ;/
                ;---
                @@non_audio:
                @@exit:
11B5 81          ret
                ;------------------
                eventually_update_current_position:
11B6 05 6D 1C    jz   [disc_task].dt_2_whatever,@@exit  ;-
11B9 06 6D 19    jnz  [disc_task].dt_3_whatever,@@exit  ;-
11BC B6 6B       mov  a,[seek_task]                     ;\
11BE 26 15       jnz  @@exit                            ;/
                ;- - - -
11C0 CD 11 D6    call calc_subq_plus_00_00_02   ;-SUBQ position + 00:00:02
                ;- - - -
11C3 0D 50 0F    jz   [subq_rx_buf+0].6,@@exit  ;ADR/Control Bit6=Data
                ;- - - -
11C6 C6 02 20    mov  a,[sector_header+0]   ;MM ;\
11C9 B7 4D       mov  [wanted_data_mm],a        ;
11CB C6 02 21    mov  a,[sector_header+1]   ;SS ; DATA position (if any)
11CE B7 4E       mov  [wanted_data_ss],a        ;
11D0 C6 02 22    mov  a,[sector_header+2]   ;FF ;
11D3 B7 4F       mov  [wanted_data_ff],a        ;/
                @@exit:
11D5 81          ret
                ;--- --- ---
                calc_subq_plus_00_00_02:  ;add subq + 00:00:02
11D6 C6 02 17    mov  a,[subq_position+7]   ;MM ;\
11D9 B7 88       mov  [scratch_msf_mm1],a       ;
11DB C6 02 18    mov  a,[subq_position+8]   ;SS ; curr
11DE B7 89       mov  [scratch_msf_ss1],a       ;
11E0 C6 02 19    mov  a,[subq_position+9]   ;FF ;
11E3 B7 8A       mov  [scratch_msf_ff1],a       ;/
11E5 4F          mov  a,00h,slow                ;\
11E6 B7 8B       mov  [scratch_msf_mm2],a   ;MM ;
11E8 B7 8C       mov  [scratch_msf_ss2],a   ;SS ; disp = 00:00:02
11EA A6 02       mov  a,02h                     ;
11EC B7 8D       mov  [scratch_msf_ff2],a   ;FF ;/
11EE 98          clc                            ;\add
11EF CD 43 8E    call bcd_addition_msf_plus_msf ;/;[result_msf]=[msf1]+[msf2]+cy
11F2 C6 01 FD    mov  a,[result_mm]         ;MM ;\
11F5 B7 5D       mov  [wanted_subq_mm],a        ;
11F7 C6 01 FE    mov  a,[result_ss]         ;SS ;
11FA B7 5E       mov  [wanted_subq_ss],a        ;
11FC C6 01 FF    mov  a,[result_ff]         ;FF ;
11FF B7 5F       mov  [wanted_subq_ff],a        ;/
1201 81          ret
                ;------------------
                whatever_XXX_1202h:
1202 B6 6B       mov  a,[seek_task]                     ;\
1204 26 16       jnz  @@to_act_like_closer_than_30      ;/
1206 06 41 13    jnz  [41h].3,@@to_act_like_closer_than_30    ;--> test mode?
1209 B6 6D       mov  a,[disc_task]                     ;\
120B A1 04       cmp  a,(1 shl dt_2_whatever)           ;
120D 26 0D       jnz  @@to_act_like_closer_than_30      ;/
120F 08 42 0A    jnz  [42h].4,@@to_act_like_closer_than_30
1212 B6 6C       mov  a,[mech_task]                     ;\
1214 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
1216 27 07       jz   @@speed_shall_be_stable           ;
1218 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ;
121A 27 03       jz   @@speed_shall_be_stable           ;/
                @@to_act_like_closer_than_30:
121C CC 12 BB    jmp  @@act_like_closer_than_30
                ;---
                @@speed_shall_be_stable:
121F B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
1221 B7 88       mov  [scratch_msf_mm1],a       ;
1223 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
1225 B7 89       mov  [scratch_msf_ss1],a       ;
1227 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
1229 B7 8A       mov  [scratch_msf_ff1],a       ;/
122B C6 02 17    mov  a,[subq_position+7]   ;MM ;\
122E B7 8B       mov  [scratch_msf_mm2],a       ;
1230 C6 02 18    mov  a,[subq_position+8]   ;SS ;
1233 B7 8C       mov  [scratch_msf_ss2],a       ;
1235 C6 02 19    mov  a,[subq_position+9]   ;FF ;
1238 B7 8D       mov  [scratch_msf_ff2],a       ;/
123A CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
123D 25 15       jc   @@negative                ;/
123F 98          clc                            ;\
1240 CD 43 54    call bcd_subtract_msf_minus_msf;/ ;[result_msf]=[msf1]-[msf2]-cy
1243 C6 01 FD    mov  a,[result_mm]         ;MM ;\
1246 26 0C       jnz  @@not_nearby              ;
1248 C6 01 FE    mov  a,[result_ss]         ;SS ; check if close distance
124B 26 07       jnz  @@not_nearby              ; (+0..+30)
124D C6 01 FF    mov  a,[result_ff]         ;FF ;
1250 A1 30       cmp  a,30h                     ;
1252 25 67       jc   @@closer_than_30  ;-->    ;
                @@not_nearby:                   ;/
                @@negative:
1254 A6 01       mov  a,1h                      ;\
1256 B7 6B       mov  [seek_task],a             ;/
1258 14 42       set  [42h].2                   ;-
125A A6 20       mov  a,(1 shl dt_5_seek)       ;\
125C B7 6D       mov  [disc_task],a             ;/
125E A6 7D       mov  a,7Dh ;125 decimal        ;\
1260 B7 70       mov  [seek_timeout],a          ;/
                ;- - - -
1262 4F          mov  a,00h,slow                ;\
1263 B7 88       mov  [scratch_msf_mm1],a   ;MM ;
1265 B7 89       mov  [scratch_msf_ss1],a   ;SS ; disp = 00:00:30
1267 A6 30       mov  a,30h                     ;
1269 B7 8A       mov  [scratch_msf_ff1],a   ;FF ;/
126B C6 02 17    mov  a,[subq_position+7]   ;MM ;\
126E B7 8B       mov  [scratch_msf_mm2],a       ;
1270 C6 02 18    mov  a,[subq_position+8]   ;SS ;
1273 B7 8C       mov  [scratch_msf_ss2],a       ;
1275 C6 02 19    mov  a,[subq_position+9]   ;FF ;
1278 B7 8D       mov  [scratch_msf_ff2],a       ;/
127A 98          clc                            ;\add
127B CD 43 8E    call bcd_addition_msf_plus_msf ;/;[result_msf]=[msf1]+[msf2]+cy
127E C6 01 FD    mov  a,[result_mm]         ;MM ;\
1281 B7 5D       mov  [wanted_subq_mm],a        ;
1283 C6 01 FE    mov  a,[result_ss]         ;SS ;
1286 B7 5E       mov  [wanted_subq_ss],a        ;
1288 C6 01 FF    mov  a,[result_ff]         ;FF ;
128B B7 5F       mov  [wanted_subq_ff],a        ;/
                ;- - - -
128D 4F          mov  a,00h,slow            ;MM ;\
128E B7 88       mov  [scratch_msf_mm1],a       ;
1290 B7 89       mov  [scratch_msf_ss1],a   ;SS ; disp = 00:00:30
1292 A6 30       mov  a,30h                     ;
1294 B7 8A       mov  [scratch_msf_ff1],a   ;FF ;/
1296 C6 02 20    mov  a,[sector_header+0]   ;MM ;\
1299 B7 8B       mov  [scratch_msf_mm2],a       ;
129B C6 02 21    mov  a,[sector_header+1]   ;SS ;
129E B7 8C       mov  [scratch_msf_ss2],a       ;
12A0 C6 02 22    mov  a,[sector_header+2]   ;FF ;
12A3 B7 8D       mov  [scratch_msf_ff2],a       ;/
12A5 98          clc                            ;\add
12A6 CD 43 8E    call bcd_addition_msf_plus_msf ;/;[result_msf]=[msf1]+[msf2]+cy
12A9 C6 01 FD    mov  a,[result_mm]         ;MM ;\
12AC B7 4D       mov  [wanted_data_mm],a        ;
12AE C6 01 FE    mov  a,[result_ss]         ;SS ;
12B1 B7 4E       mov  [wanted_data_ss],a        ;
12B3 C6 01 FF    mov  a,[result_ff]         ;FF ;
12B6 B7 4F       mov  [wanted_data_ff],a        ;/
                ;- - - -
12B8 CD 42 22    call mute_cd_da                ;-
                ;- - - - - - - - - - - -
                @@act_like_closer_than_30:
                @@closer_than_30:
12BB C6 02 11    mov  a,[subq_position+1] ;Track
12BE B1 51       cmp  a,[subq_rx_buf+1]   ;Track  ;zf,cy
12C0 27 08       jz   @@same_track                ;---> same track
12C2 CD 12 FD    call process_new_track  ;in: cy  ;---> new track
12C5 CD 12 F2    call copy_subq_rx_buf_to_subq_position
12C8 20 27       jr   @@done
                ;---
                @@same_track:
12CA C6 02 11    mov  a,[subq_position+1] ;Track
12CD B1 51       cmp  a,[subq_rx_buf+1]   ;Track
12CF 26 1D       jnz  @@to_copy_subq_rx_buf_to_subq_position
12D1 C6 02 12    mov  a,[subq_position+2] ;Index
12D4 B1 52       cmp  a,[subq_rx_buf+2]   ;Index
12D6 26 16       jnz  @@to_copy_subq_rx_buf_to_subq_position
12D8 C6 02 13    mov  a,[subq_position+3]
12DB B1 53       cmp  a,[subq_rx_buf+3]
12DD 26 0F       jnz  @@to_copy_subq_rx_buf_to_subq_position
12DF C6 02 14    mov  a,[subq_position+4]
12E2 B1 54       cmp  a,[subq_rx_buf+4]
12E4 26 08       jnz  @@to_copy_subq_rx_buf_to_subq_position
12E6 C6 02 15    mov  a,[subq_position+5]
12E9 B1 55       cmp  a,[subq_rx_buf+5]
12EB 26 01       jnz  @@to_copy_subq_rx_buf_to_subq_position
12ED 81          ret
                ;---
                @@to_copy_subq_rx_buf_to_subq_position:
12EE CD 12 F2    call copy_subq_rx_buf_to_subq_position
                @@done:
12F1 81          ret
                ;------------------
                copy_subq_rx_buf_to_subq_position:
12F2 AE 09       mov  x,9h                              ;\
                @@lop:                                  ; copy index 1..9.
12F4 E6 50       mov  a,[subq_rx_buf+x]                 ; (excluding index 0,
12F6 D7 02 10    mov  [subq_position+x],a               ; which is copied else-
12F9 5A          dec  x                                 ; where, see "@@not_same_adr_ctrl")
12FA 26 F8       jnz  @@lop                             ;/
12FC 81          ret
                ;------------------
                process_new_track:      ;in: cy = higher/lower track
12FD 24 78       jnc  @@backwards               ;-  cy ?
                ;- - - -
12FF B6 51       mov  a,[subq_rx_buf+1] ;Track          ;\
1301 A1 AA       cmp  a,0AAh    ;AAh=Lead-Out           ; check if lead-out
1303 26 40       jnz  @@not_lead_out                    ;/
1305 C6 02 0E    mov  a,[drv_current_session]           ;\
1308 C1 02 0D    cmp  a,[drv_desired_session]           ;
130B 27 0F       jz   @@lead_out_of_desired_session     ;/
130D C6 02 0E    mov  a,[drv_current_session]           ;\
1310 4C          inc  a                                 ;
1311 C7 02 0E    mov  [drv_current_session],a           ;
1314 C1 02 0D    cmp  a,[drv_desired_session]           ;
1317 26 02       jnz  @@exit                            ;/
1319 1C 4C       set  [toc_flags].6 ;session_is_loaded (1=okay)
                @@exit:
131B 81          ret
                ;---
                @@lead_out_of_desired_session:
131C 0D 50 03    jz   [subq_rx_buf+0].6,@@audio         ;\  ;ADR/Control Bit6=Data
131F 00 6A 0C    jnz  [datamode_flag].0,@@non_audio     ;
                @@audio:                                ;
1322 08 6D 0F    jnz  [disc_task].dt_4_fast,@@lead_out_stop_or_pause
1325 05 6D 4E    jz   [disc_task].dt_2_whatever,@@exit2 ;
1328 07 6D 09    jz   [disc_task].dt_3_whatever,@@lead_out_stop_or_pause
132B CD 42 8C    call whatever_XXX_428Ch                ;
                @@non_audio:                            ;/
132E A6 AA       mov  a,0AAh    ;AAh=Lead-Out           ;\
1330 C7 02 11    mov  [subq_position+1],a               ;/
1333 81          ret
                ;---
                @@lead_out_stop_or_pause:
1334 CD 46 6C    call request_int4_data_end
1337 03 BB 07    jz   [drv_mode].1,@@lead_out_stop  ;auto_pause (0=off, 1=pause on end of track)
133A 06 6D 39    jnz  [disc_task].dt_3_whatever,@@exit2     ;?
133D CD 28 B3    call enter_pause_state         ;PAUSE (when auto_pause=ON)
1340 81          ret
                ;---
                @@lead_out_stop:
1341 CD 28 E0    call force_motor_off           ;STOP  (when auto_pause=OFF)
1344 81          ret
                ;--- --- ---
                @@not_lead_out:
1345 0A 6D 2E    jnz  [disc_task].dt_5_seek,@@exit2
1348 03 BB 12    jz   [drv_mode].1,@@auto_pause_off  ;auto_pause (0=off, 1=pause on end of track)
134B 06 6D 28    jnz  [disc_task].dt_3_whatever,@@exit2
134E 05 43 11    jz   [43h].2,@@do_auto_pause  ;--> pause and apply new as curr track?
1351 B6 79       mov  a,[current_track]          ;... track
1353 B1 51       cmp  a,[subq_rx_buf+1] ;Track         ;new track?
1355 26 1F       jnz  @@exit2
1357 15 43       res  [43h].2            ;<-- request pause on NEXT track change?
                @@mute_or_demute_cd_da_and_exit:
1359 CD 42 33    call mute_or_demute_cd_da
135C 81          ret
                ;---
                @@auto_pause_off:
135D 02 43 16    jnz  [43h].1,@@exit2
1360 20 F7       jr   @@mute_or_demute_cd_da_and_exit
                ;---
                @@do_auto_pause:
1362 C6 02 11    mov  a,[subq_position+1]       ;\old track?
1365 27 0F       jz   @@exit2   ;00h=Lead-In    ;/omit pause for lead-in ?
1367 0A 41 0C    jnz  [41h].5,@@exit2    ;near_target_flag... offhold 11/15 seconds ??
136A 14 43       set  [43h].2      ;<-- PREVENT auto_pause on next track change?
136C B6 51       mov  a,[subq_rx_buf+1] ;Track  ;\     ;new track?
136E B7 79       mov  [current_track],a         ;/
1370 CD 28 B3    call enter_pause_state         ;-pause
1373 CD 46 6C    call request_int4_data_end     ;-INT4
                @@exit2:
1376 81          ret
                ;--- --- ---
                @@backwards:   ;come here on SMALLER track (ie. backwards) ?
1377 0A 6D FC    jnz  [disc_task].dt_5_seek,@@exit2
137A 03 BB F9    jz   [drv_mode].1,@@exit2  ;auto_pause (0=off, 1=pause on end of track)
137D 06 6D F6    jnz  [disc_task].dt_3_whatever,@@exit2
1380 05 43 09    jz   [43h].2,@@backwards_auto_pause
                ;- - - -
1383 B6 79       mov  a,[current_track]         ;\
1385 B1 51       cmp  a,[subq_rx_buf+1] ;Track  ;      ;new track?
1387 26 ED       jnz  @@exit2                   ;/
1389 15 43       res  [43h].2           ;-want auto pause on NEXT track change
138B 81          ret
                ;---
                @@backwards_auto_pause:
138C 14 43       set  [43h].2      ;<-- PREVENT auto_pause on next track change?
138E C6 02 11    mov  a,[subq_position+1]       ;\      ;old track?
1391 B7 79       mov  [current_track],a         ;/
1393 CD 28 B3    call enter_pause_state         ;-
1396 CD 46 6C    call request_int4_data_end     ;-INT4
1399 81          ret
                ;------------------
                main_func_receive_subq:
139A 0F 09 23    jz   [io_intsr].7,@@exit       ;SCOR   ;-exit if no SUBQ data
139D 16 09       set  [io_intsr].3 ;ack latched SCOR bit;-ack
139F B6 6C       mov  a,[mech_task]
13A1 A1 10       cmp  a,10h  ;mt_10h (or above)
13A3 24 1B       jnc  @@exit
13A5 0A 42 18    jnz  [42h].5,@@exit
13A8 01 02 15    jz   [io_portc].0,@@exit        ;SUBQ pin
13AB B6 50       mov  a,[subq_rx_buf+0]  ;ADR/Control   ;\memorize old
13AD B7 89       mov  [89h],a                           ;/ADR/Control
13AF AE 00       mov  x,0h                              ;\
                @@rx_lop:                               ;
13B1 CD 41 AD    call receive_subq_bus_via_spi_bus      ; receive 12 bytes
13B4 E7 50       mov  [subq_rx_buf+x],a                 ;
13B6 5C          inc  x                                 ;
13B7 A3 0C       cmp  x,0Ch                             ;
13B9 26 F6       jnz  @@rx_lop                          ;/
13BB 0F 09 03    jz   [io_intsr].7,@@got_subq_without_collision  ;SCOR
13BE 16 09       set  [io_intsr].3 ;ack latched SCOR bit;-ack (collision)
                @@exit:
13C0 81          ret
                ;--- --- ---
                @@got_subq_without_collision:
                 ;come here if there has been no collision (ie. if there's
                 ;has been no further subq packet during above receive loop)
13C1 B6 89       mov  a,[89h]                           ;\memorized old
13C3 B7 88       mov  [88h],a                           ;/ADR/Control
13C5 AE 0B       mov  x,0Bh                             ;\
13C7 BF 8F       mov  [8Fh],x        ;<--- ???          ;
                @@apply_subq_copy_lop:                  ;
13C9 E6 50       mov  a,[subq_rx_buf+x]                 ; copy 12 bytes
13CB D7 02 00    mov  [subq_rx_copy+x],a                ;
13CE 5A          dec  x                                 ;
13CF 2A F8       jns  @@apply_subq_copy_lop             ;/
13D1 B6 89       mov  a,[89h]                           ;\blah
13D3 B7 88       mov  [88h],a                           ;/(already done above)
13D5 B6 50       mov  a,[subq_rx_buf+0]  ;ADR/Control   ;\
13D7 A4 0B       and  a,0Bh     ;strip bit2 ?????       ;
13D9 A1 01       cmp  a,01h  ;ADR=1/5 (Position, or TOC in Lead-in, or 5=Session)
13DB 26 E3       jnz  @@exit                            ;/
13DD B6 50       mov  a,[subq_rx_buf+0]  ;ADR/Control   ;\
13DF B1 88       cmp  a,[88h]   ;old ADR/Control        ; copy ADR/Control ONLY
13E1 26 05       jnz  @@not_same_adr_ctrl               ; if it was twice same
13E3 B6 50       mov  a,[subq_rx_buf+0]  ;ADR/Control   ;
13E5 C7 02 10    mov  [subq_position+0],a               ;
                @@not_same_adr_ctrl:                    ;/
13E8 B6 51       mov  a,[subq_rx_buf+1] ;Track          ;\reject track>AAh
13EA A1 AB       cmp  a,0ABh  ;above AAh                ; (max would be
13EC 24 D2       jnc  @@exit                            ;/AAh=lead-out)
13EE B6 52       mov  a,[subq_rx_buf+2]  ;Index/Point   ;\
13F0 A1 D1       cmp  a,0D1h             ;\             ; for certain Point
13F2 24 CC       jnc  @@exit       ;-->  ;/             ; values, skip below
13F4 A1 C0       cmp  a,0C0h             ;\Point=C0h    ; verifications
13F6 27 27       jz   @@verify_bcd_skip  ;/             ;
13F8 A4 F0       and  a,0F0h             ;\             ;
13FA A1 B0       cmp  a,0B0h             ; Point=B0h-BFh;
13FC 27 21       jz   @@verify_bcd_skip  ;/             ;/
13FE B6 56       mov  a,[subq_rx_buf+6]  ;Reserved      ;\verify Reserved
1400 26 BE       jnz  @@exit                            ;/(unless special Point)
1402 AE 06       mov  x,6h                              ;\
1404 BF 8F       mov  [8Fh],x                           ;
                @@verify_bcd_lop:                       ;
1406 BE 8F       mov  x,[8Fh]                           ;
1408 E6 53       mov  a,[subq_rx_buf+3+x]               ; verify BCD values
140A A4 0F       and  a,0Fh                             ; (unless special Point)
140C A1 0A       cmp  a,0Ah                             ;
140E 24 B0       jnc  @@exit                            ;
1410 E6 53       mov  a,[subq_rx_buf+3+x]               ;
1412 A4 F0       and  a,0F0h                            ;
1414 A1 A0       cmp  a,0A0h                            ;
1416 24 A8       jnc  @@exit                            ;
1418 CD 2F 5E    call verify_packed_bcd_a  ;<-- blah, resulting CY is ignored, and BCD was already checked above some opcodes anyways
141B 3A 8F       dec  [8Fh]                             ;
141D 2A E7       jns  @@verify_bcd_lop                  ;/
                @@verify_bcd_skip:
                ;- - - - - REPORT - - - - -
141F 05 BB 57    jz   [drv_mode].2,@@skip_report  ;report
1422 02 43 54    jnz  [43h].1,@@skip_report
1425 0A 41 51    jnz  [41h].5,@@skip_report  ;near_target_flag
1428 08 6D 12    jnz  [disc_task].dt_4_fast,@@report_on_all_sectors  ;--> report on EVERY sector (done so during fast-forward & fast-backward)
142B C6 02 19    mov  a,[subq_position+9]               ;\
142E A4 F0       and  a,0F0h                            ; skip report if MSBs
1430 B7 88       mov  [88h],a                           ; of frame=same
1432 B6 59       mov  a,[subq_rx_buf+9]                 ; (report only on each
1434 A4 F0       and  a,0F0h                            ; 10'th sector)
1436 B1 88       cmp  a,[88h]                           ;
1438 27 3F       jz   @@skip_report                     ;/
143A 0F BC 3C    jz   [drv_stat].7,@@skip_report ;play_active
                @@report_on_all_sectors:
143D AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
143F BF 04       mov  [io_porte_idx],x                  ;
1441 CD 40 EF    call read_data_bus                     ; skip report if
1444 B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a ; other INT pending
1446 A4 07       and  a,7h                              ;
1448 26 2F       jnz  @@skip_report                     ;/
144A B6 6D       mov  a,[disc_task]                            ;\check if play,
144C A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever); or fast fwd/bak
144E 26 05       jnz  @@generate_normal_play_report            ;/
1450 CD 15 24    call generate_report_for_fast_forward_fast_backward_with_report
1453 20 03       jr   @@generate_report_done
                ;---
                @@generate_normal_play_report:          ;\normal PLAY report,
1455 CD 14 F5    call generate_report_for_play_report   ;/TOGGLE each 10 sectors
                @@generate_report_done:
1458 B6 5A       mov  a,[subq_rx_buf+0Ah]         ;XXX or peak level ?!
145A C7 01 F6    mov  [drv_response+6],a
145D B6 5B       mov  a,[subq_rx_buf+0Bh]         ;XXX or peak level ?!
145F C7 01 F7    mov  [drv_response+7],a
1462 CD 3B FB    call cmd_response_begin                ;-begin response
1465 AE 17       mov  x,idx_17h_w_reply_to_psx          ;\
1467 BF 04       mov  [io_porte_idx],x                  ;
1469 AE 00       mov  x,0h                              ; send above generated
                @@reply_lop:                            ; report bytes as
146B D6 01 F0    mov  a,[drv_response+x]                ; response
146E CD 40 FB    call write_data_bus                    ;
1471 5C          inc  x                                 ;
1472 A3 08       cmp  x,8h                              ;
1474 25 F5       jc   @@reply_lop                       ;/
1476 CD 40 B4    call fire_irq_1   ;(for play+report)   ;-INT1 (report)
                @@skip_report:       ;<-- jump here when skipping report
                ;- - - - - check if LEAD_IN or LEAD_OUT - - - - -
1479 11 46       res  [46h].0                           ;-
147B A6 FA       mov  a,0FAh  ;250 decimal              ;\
147D B7 74       mov  [mech_timeout_2],a                ;/
147F 06 41 5D    jnz  [41h].3,@@normal_operation     ;--> test mode?
1482 04 45 09    jnz  [45h].2,@@want_lead_in         ;--> ReadTOC or GetQ
1485 0E 40 57    jnz  [40h].7,@@normal_operation     ;toc_loaded ?
1488 04 49 54    jnz  [49h].2,@@normal_operation     ;some timeout ?
148B 0A 4C 0B    jnz  [toc_flags].5,@@wrong_session  ;... (or session needs loading?)
                ;- - - -
                @@want_lead_in:
148E B6 51       mov  a,[subq_rx_buf+1] ;Track          ;\check if Lead-in
1490 27 38       jz   @@lead_in ;Track=00h=Lead-in      ;/(when WANTING to get it, ie. during TOC or GetQ reading)
1492 17 42       res  [42h].3 ;sled direction           ;\
1494 A6 80       mov  a,80h   ;A=80h=max/fastest        ;
1496 CC 1B A2    jmp  seek_dist_A                       ;/
                ;--- --- ---
                @@wrong_session:
1499 B6 51       mov  a,[subq_rx_buf+1] ;Track
149B 08 4C 0D    jnz  [toc_flags].4,@@wrong_session_and_was_not_lead_in  ;<-- prev-subq was non-lead-in ?
149E A1 00       cmp  a,00h     ;Track=00h=Lead-in
14A0 27 1A       jz   @@wrong_session_and_still_in_lead_in  ;-> STILL in lead-in
14A2 18 4C       set  [toc_flags].4 ;memorize: prev-subq was non-lead-in
14A4 17 4C       res  [toc_flags].3 ;lead_out_reached=0 ;\back to non-leadout
14A6 A6 64       mov  a,64h ;100 decimal                ; (in case leadout was
14A8 B7 5C       mov  [leadout_timeout_timer],a         ;/flagged by mistake)
14AA 81          ret
                ;---
                @@wrong_session_and_was_not_lead_in:
14AB A1 00       cmp  a,00h     ;Track=00h=Lead-in          ;\check if reached
14AD 27 14       jz   @@wrong_session_reached_lead_in_now   ;/new Lead-in NOW
14AF 06 4C 0A    jnz  [toc_flags].3,@@wrong_session_and_was_lead_out ;lead_out_reached
14B2 A1 AA       cmp  a,0AAh    ;AAh=Lead-Out               ;\check if reached
14B4 26 06       jnz  @@wrong_session_and_not_yet_lead_out  ;/new Lead-out NOW
14B6 16 4C       set  [toc_flags].3 ;lead_out_reached=1 ;\lead out,
14B8 A6 64       mov  a,64h ;100 decimal                ; will be handled after
14BA B7 5C       mov  [leadout_timeout_timer],a         ;/100 CONTINOUS leadouts
                @@wrong_session_and_not_yet_lead_out:
                @@wrong_session_and_was_lead_out:
                @@wrong_session_and_still_in_lead_in:
14BC 16 42       set  [42h].3 ;sled direction           ;\
14BE A6 80       mov  a,80h   ;A=80h=max/fastest        ;
14C0 CC 1B A2    jmp  seek_dist_A                       ;/
                ;---
                @@wrong_session_reached_lead_in_now:
14C3 19 4C       res  [toc_flags].4
14C5 1B 4C       res  [toc_flags].5
14C7 17 4C       res  [toc_flags].3 ;lead_out_reached=false
14C9 81          ret
                ;--- --- ---
                @@lead_in:
14CA 02 49 0C    jnz  [49h].1,@@lead_in_cont
14CD 06 45 1B    jnz  [45h].3,@@lead_in_gain_adj
14D0 08 45 1F    jnz  [45h].4,@@to_handle_get_q ;get_q_command
14D3 12 49       set  [49h].1                           ;-
14D5 A6 9C       mov  a,9Ch  ;156 decimal               ;\reload timeout ?
14D7 B7 67       mov  [toc_timeout],a                   ;/
                @@lead_in_cont:
14D9 CD 15 53    call process_subq_for_lead_in
14DC CC 16 0A    jmp  check_if_toc_loading_completed
                ;--- --- ---
                @@normal_operation:  ;(normal reading, when TOC already loaded)
14DF CD 11 92    call eventually_seek_1st_track
14E2 CD 11 B6    call eventually_update_current_position
14E5 CD 16 86    call whatever_XXX_1686h     ;... process seek
14E8 CC 12 02    jmp  whatever_XXX_1202h
                ;--- --- ---
                @@lead_in_gain_adj:
14EB 02 90 03    jnz  [license_flags].1,@@exit2
14EE CC 21 2B    jmp  mech_kick_adj_gain_inj
                ;---
                @@exit2:
14F1 81          ret
                ;---
                @@to_handle_get_q:
14F2 CC 1E 98    jmp  handle_get_q
                ;------------------
                generate_report_for_play_report:
14F5 B6 BC       mov  a,[drv_stat]              ;\stat
14F7 C7 01 F0    mov  [drv_response+0],a        ;/
14FA B6 51       mov  a,[subq_rx_buf+1] ;Track  ;\track
14FC C7 01 F1    mov  [drv_response+1],a        ;/
14FF B6 52       mov  a,[subq_rx_buf+2] ;Index  ;\index
1501 C7 01 F2    mov  [drv_response+2],a        ;/
1504 AE 02       mov  x,2h
1506 08 59 0A    jnz  [subq_rx_buf+9].4,@@use_relative_time   ;<--BIT4
                ;- - -
                @@copy_absolute_lop:            ;\
1509 E6 57       mov  a,[subq_rx_buf+7+x]       ;
150B D7 01 F3    mov  [drv_response+3+x],a      ; absolute MM:SS:FF
150E 5A          dec  x                         ;
150F 2A F8       jns  @@copy_absolute_lop       ;/
1511 20 10       jr   @@done
                ;---
                @@use_relative_time:
                @@copy_relative_lop:            ;\
1513 E6 53       mov  a,[subq_rx_buf+3+x]       ;
1515 D7 01 F3    mov  [drv_response+3+x],a      ; relative MM:SS:FF
1518 5A          dec  x                         ;
1519 2A F8       jns  @@copy_relative_lop       ;/
151B C6 01 F4    mov  a,[drv_response+4]        ;\make MM:(SS+80h):FF
151E AA 80       or   a,80h  ;(seconds OR 80h)  ; (seconds.bit7 = relative time)
1520 C7 01 F4    mov  [drv_response+4],a        ;/
                @@done:
1523 81          ret
                ;------------------
                generate_report_for_fast_forward_fast_backward_with_report:
                 ;same as for above "play", but done on ANY sector
                 ;that, because fast forward/backward are skipping so many
                 ;sectors (so once whenever they <do> read a sector, then
                 ;they will report it; if report is enabled)
                 ;- - -
                 ;XXX below toggle on [subq_rx_buf+9].0 does what exactly...?
                 ;is that just random, or is it somehow ensured that
                 ;fast forward/backward are reading two continous sectors?
                 ;(so they would be ensured to send reports for both cases?)
                 ;- - -
1524 B6 BC       mov  a,[drv_stat]              ;\stat
1526 C7 01 F0    mov  [drv_response+0],a        ;/
1529 B6 51       mov  a,[subq_rx_buf+1] ;Track  ;\track
152B C7 01 F1    mov  [drv_response+1],a        ;/
152E B6 52       mov  a,[subq_rx_buf+2] ;Index  ;\index
1530 C7 01 F2    mov  [drv_response+2],a        ;/
1533 AE 02       mov  x,2h
1535 00 59 0A    jnz  [subq_rx_buf+9].0,@@use_relative_time   ;<--BIT0 (unlike as for "play")
                ;- - -
                @@copy_absolute_lop:            ;\
1538 E6 57       mov  a,[subq_rx_buf+7+x]       ;
153A D7 01 F3    mov  [drv_response+3+x],a      ; absolute MM:SS:FF
153D 5A          dec  x                         ;
153E 2A F8       jns  @@copy_absolute_lop       ;/
1540 20 10       jr   @@done
                ;---
                @@use_relative_time:
                @@copy_relative_lop:            ;\
1542 E6 53       mov  a,[subq_rx_buf+3+x]       ;
1544 D7 01 F3    mov  [drv_response+3+x],a      ; relative MM:SS:FF
1547 5A          dec  x                         ;
1548 2A F8       jns  @@copy_relative_lop       ;/
154A C6 01 F4    mov  a,[drv_response+4]        ;\make MM:(SS+80h):FF
154D AA 80       or   a,80h  ;(seconds OR 80h)  ; (seconds.bit7 = relative time)
154F C7 01 F4    mov  [drv_response+4],a        ;/
                @@done:
1552 81          ret
                ;------------------
                process_subq_for_lead_in:
1553 0D 50 00    jz   [subq_rx_buf+0].6,@@cont   ;ADR/Control Bit6=Data ;\blah
                @@cont:                                                 ;/
1556 B6 50       mov  a,[subq_rx_buf+0]     ;ADR/Control
1558 A4 0F       and  a,0Fh
155A A1 01       cmp  a,01h  ;ADR=1 (Position, or TOC in Lead-in)
155C 27 05       jz   @@adr_1_toc
155E A1 05       cmp  a,05h  ;ADR=5 (Session)
1560 27 1D       jz   @@adr_5_session
1562 81          ret
                ;--- --- ---
                @@adr_1_toc:
1563 B6 52       mov  a,[subq_rx_buf+2]  ;Point
1565 A1 A0       cmp  a,0A0h
1567 25 2E       jc   @@adr_1_point_00h_thru_9Fh_toc_info
1569 27 45       jz   @@adr_1_point_A0h_first_track_no
156B A1 A1       cmp  a,0A1h
156D 27 61       jz   @@adr_1_point_A1h_last_track_no
                ;- - - point_A2h_lead_out (BUG: also accepts A3h..FFh=reserved)
156F B6 57       mov  a,[subq_rx_buf+7]         ;MM     ;\
1571 C7 01 C8    mov  [toc_lead_out_msf+0h],a           ; copy MM:SS:FF of
1574 B6 58       mov  a,[subq_rx_buf+8]         ;SS     ; lead-out (aka end
1576 C7 01 C9    mov  [toc_lead_out_msf+1h],a           ; of last track)
1579 B6 59       mov  a,[subq_rx_buf+9]         ;FF     ;
157B C7 01 CA    mov  [toc_lead_out_msf+2h],a           ;/
157E 81          ret
                ;--- --- ---
                @@adr_5_session:
157F B6 52       mov  a,[subq_rx_buf+2]
1581 A1 B0       cmp  a,0B0h
1583 27 65       jz   @@adr_5_point_B0h_ptr_to_next_session
1585 A1 C0       cmp  a,0C0h
1587 27 07       jz   @@adr_5_point_C0h_session_atip
1589 A4 F0       and  a,0F0h
158B A1 B0       cmp  a,0B0h
158D 27 05       jz   @@adr_5_point_B1h_thru_BFh_cdr_cdrw_skip_info
158F 81          ret
                ;--- --- ---
                @@adr_5_point_C0h_session_atip:
1590 B6 54       mov  a,[subq_rx_buf+4]    ;<-- middle-byte of 3-byte ATIP ???
1592 B7 92       mov  [toc_atip],a
                @@adr_5_point_B1h_thru_BFh_cdr_cdrw_skip_info:
1594 1E 4C       set  [toc_flags].7 ;toc_has_session_info (0=none, 1=yes)
1596 81          ret
                ;--- --- ---
                @@adr_1_point_00h_thru_9Fh_toc_info:
1597 0C 50 04    jnz  [subq_rx_buf+0].6,@@adr_1_type_data   ;\  ;ADR/Control Bit6=Data
159A 18 90       set  [license_flags].4     ;AUDIO EXISTS   ;
159C 20 02       jr   @@adr_1_type_this                     ; data/audio track
                ;---                                        ; exist flags
                @@adr_1_type_data:                          ;
159E 12 45       set  [45h].1               ;DATA EXISTS    ;
                @@adr_1_type_this:                          ;/
15A0 B6 52       mov  a,[subq_rx_buf+2] ;Point   ;UNSTABLE accepts track 9Ah..9Fh (thereby can write to 0100h..01D1h, which is ALMOST reaching the interesting scex_xxx variables)
15A2 CD 43 0B    call track_a_to_toc_index_x
15A5 B6 57       mov  a,[subq_rx_buf+7]
15A7 D7 01 00    mov  [toc_track_list+0+x],a
15AA B6 58       mov  a,[subq_rx_buf+8]
15AC D7 01 01    mov  [toc_track_list+1+x],a
15AF 81          ret
                ;--- --- ---
                @@adr_1_point_A0h_first_track_no:
15B0 15 46       res  [46h].2 ;is_data_disc=0 (audio)   ;\
15B2 B6 58       mov  a,[subq_rx_buf+8] ;Disk Type (00h=CD-DA or CD-ROM, 10h=CD-I, 20h=CD-ROM-XA)
15B4 B7 91       mov  [toc_disc_type],a
15B6 27 02       jz   @@is_audio_disc ;00h=CD-DA        ;
15B8 14 46       set  [46h].2 ;is_data_disc=1 (cdrom)   ;
                @@is_audio_disc:                        ;/
15BA B6 57       mov  a,[subq_rx_buf+7]
15BC C7 01 C6    mov  [toc_first_track_no],a
15BF A1 01       cmp  a,1h
15C1 27 0C       jz   @@erase_first_tracks_done
15C3 CD 43 0B    call track_a_to_toc_index_x
15C6 5A          dec  x         ;... ??? does this erase all preceeding tracks?
15C7 A6 00       mov  a,0h
                @@erase_first_tracks_lop:
15C9 D7 01 00    mov  [toc_track_list+x],a
15CC 5A          dec  x
15CD 2A FA       jns  @@erase_first_tracks_lop  ;<-- BUG: tracks 64..98 (index 64*2..98*2)
                @@erase_first_tracks_done:      ;         would be "signed" !!! (though very unlikely that a disc has first track > 63)
15CF 81          ret
                ;--- --- ---
                @@adr_1_point_A1h_last_track_no:
15D0 B6 57       mov  a,[subq_rx_buf+7]
15D2 C7 01 C7    mov  [toc_last_track_no],a
15D5 A1 99       cmp  a,99h
15D7 27 10       jz   @@erase_last_tracks_done
15D9 CD 43 DC    call increment_packed_bcd_a   ;UNSTABLE? does this handle TR=9Ah..FFh ?
15DC CD 43 0B    call track_a_to_toc_index_x
15DF A6 00       mov  a,0h
                @@erase_last_tracks_lop:    ;erase track entries "(last+1)..99"
15E1 D7 01 00    mov  [toc_track_list+x],a
15E4 5C          inc  x
15E5 A3 C6       cmp  x,0C6h
15E7 26 F8       jnz  @@erase_last_tracks_lop
                @@erase_last_tracks_done:
15E9 81          ret
                ;--- --- ---
                @@adr_5_point_B0h_ptr_to_next_session:
15EA 1E 4C       set  [toc_flags].7 ;toc_has_session_info (0=none, 1=yes)
15EC C6 02 0D    mov  a,[drv_desired_session]
15EF C1 02 0E    cmp  a,[drv_current_session]
15F2 26 03       jnz  @@not_yet_desired_session
15F4 1C 4C       set  [toc_flags].6 ;session_is_loaded (1=okay)
15F6 81          ret
                ;---
                @@not_yet_desired_session:
15F7 C6 02 0E    mov  a,[drv_current_session]           ;\
15FA CD 43 DC    call increment_packed_bcd_a            ; increment session
15FD C7 02 0E    mov  [drv_current_session],a           ;/
1600 CD 41 9B    call fill_toc_info_by_FFh              ;-erase TOC
1603 1A 4C       set  [toc_flags].5
1605 19 4C       res  [toc_flags].4
1607 17 4C       res  [toc_flags].3 ;lead_out_reached=false
1609 81          ret
                ;------------------
                check_if_toc_loading_completed:
160A C6 02 0D    mov  a,[drv_desired_session]           ;\check if
160D C1 02 0E    cmp  a,[drv_current_session]           ; correct session
1610 26 5E       jnz  @@exit ;--> still wrong session   ;/
1612 AE 00       mov  x,0h                              ;\
1614 A6 FF       mov  a,0FFh                            ;
                @@check_known_entry_lop:                ; check if all track
1616 D1 01 00    cmp  a,[toc_track_list+x]              ; entries are known
1619 27 55       jz   @@exit ;--> still unknown/missing ;
161B 5C          inc  x                                 ;
161C A3 CB       cmp  x,0CBh                            ;
161E 26 F6       jnz  @@check_known_entry_lop           ;/
1620 B6 6C       mov  a,[mech_task]                     ;\
1622 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
1624 27 04       jz   @@speed_shall_be_stable           ; check if speed stable
1626 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ;
1628 26 46       jnz  @@exit                            ;
                @@speed_shall_be_stable:                ;/
162A 03 45 07    jz   [45h].1,@@force_scex_timeout
162D 00 90 08    jnz  [license_flags].0,@@keep_scex_timeout
1630 B6 75       mov  a,[boot_scex_timeout]             ;\exit if notyet timeout
1632 26 3C       jnz  @@exit                            ;/on scex reading
                @@force_scex_timeout:
1634 A6 01       mov  a,1h                      ;\force SOON scex timeout
1636 B7 75       mov  [boot_scex_timeout],a     ;/
                @@keep_scex_timeout:
                ;- - - -
1638 C6 01 C8    mov  a,[toc_lead_out_msf+0h]   ;MM     ;\check if lead out MM
163B CD 43 E9    call packed_bcd_to_binary              ; indicates a Mini CD
163E 1D 41       res  [41h].6  ;<-- Normal CD, 12cm     ; (with 8cm diameter)
1640 A1 16       cmp  a,16h    ;22 decimal      ;MM     ; (those discs can have
1642 24 02       jnc  @@not_mini_cd                     ; max 18..24 minutes,
1644 1C 41       set  [41h].6  ;<-- Mini CD, 8cm        ; but here using 22 as
                @@not_mini_cd:                          ;/boundary)
                ;above Mini CD detection is used for calculating motor-stop
                ;time (though that doesn't seem to be handled properly,
                ;see the corresponding code for details).
                ;above Mini CD detection may go wrong: if 12cm CDs or CD-Rs
                ;aren't padded with blank sectors then may be mistaken as 8cm.
                ;- - - -
1646 1E 40       set  [40h].7
1648 13 49       res  [49h].1
164A 15 49       res  [49h].2
164C 3F 67       mov  [toc_timeout],00h                         ;-
164E A6 03       mov  a,3h ;for cmp a,[cmd_2nd_response_type]   ;\
1650 CD 45 A9    call discard_response_type_A                   ;/
1653 00 43 07    jnz  [43h].0,@@do_not_fallback                 ;-  ?
1656 CD 16 78    call fallback_to_session_1                     ;-  ?
1659 CD 42 BE    call whatever_XXX_42BEh                        ;-
165C 81          ret
                ;---
                @@do_not_fallback:
165D 02 43 05    jnz  [43h].1,@@enter_pause
1660 11 43       res  [43h].0
1662 CC 28 6D    jmp  whatever_XXX_286Dh             ;------>
                ;---
                @@enter_pause:
1665 13 43       res  [43h].1
1667 11 43       res  [43h].0
1669 A6 02       mov  a,(1 shl dt_1_stopped)    ;\
166B B7 6D       mov  [disc_task],a             ;/
166D CC 28 B3    jmp  enter_pause_state         ;-
                ;---
                @@exit:
1670 81          ret
                ;------------------
                force_loading_session_1:
1671 1F 4C       res  [toc_flags].7 ;toc_has_session_info (0=none, 1=yes)
1673 A6 01       mov  a,1h                      ;\force session 1
1675 C7 02 0D    mov  [drv_desired_session],a   ;/
                ;- - - - - ---------
                fallback_to_session_1:
1678 A6 01       mov  a,1h                      ;\
167A C7 02 0E    mov  [drv_current_session],a   ;/
167D 1B 4C       res  [toc_flags].5             ;-
167F 19 4C       res  [toc_flags].4             ;-
1681 1D 4C       res  [toc_flags].6 ;session_is_loaded (0=need loading)
1683 17 4C       res  [toc_flags].3 ;lead_out_reached=false
1685 81          ret
                ;------------------
;:              ;:----------------- Seek related stuff
                ;------------------
                whatever_XXX_1686h:
1686 B6 50       mov  a,[subq_rx_buf+0]     ;ADR/Control
1688 A4 0F       and  a,0Fh
168A A1 01       cmp  a,01h  ;ADR=1 (Position, or TOC in Lead-in)
168C 26 33       jnz  @@exit
168E B6 51       mov  a,[subq_rx_buf+1] ;Track          ;\
1690 26 0C       jnz  @@not_lead_in                     ;
1692 B6 53       mov  a,[subq_rx_buf+3]                 ;
1694 B7 57       mov  [subq_rx_buf+7],a           ;!!!  ;
1696 B6 54       mov  a,[subq_rx_buf+4]                 ;
1698 B7 58       mov  [subq_rx_buf+8],a           ;!!!  ;
169A B6 55       mov  a,[subq_rx_buf+5]                 ;
169C B7 59       mov  [subq_rx_buf+9],a           ;!!!  ;
                @@not_lead_in:                          ;/
169E B6 6B       mov  a,[seek_task]                     ;\
16A0 27 1F       jz   @@exit                            ;/
16A2 1D BC       res  [drv_stat].6 ;seek_active = false ;\
16A4 0B 6D 02    jz   [disc_task].dt_5_seek,@@seek_off  ; update seek flag
16A7 1C BC       set  [drv_stat].6 ;seek_active = true  ;
                @@seek_off:                             ;/
16A9 1B BC       res  [drv_stat].5 ;read_active = false ;\no read/play
16AB 1F BC       res  [drv_stat].7 ;play_active = false ;/
16AD 0A 42 11    jnz  [42h].5,@@exit
16B0 0C 42 0E    jnz  [42h].6,@@exit
16B3 B6 6C       mov  a,[mech_task]                     ;\
16B5 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
16B7 27 05       jz   @@speed_shall_be_stable           ;
16B9 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ; exit if speed
16BB 27 01       jz   @@speed_shall_be_stable           ; isn't stable
16BD 81          ret                                    ;
                ;---                                    ;
                @@speed_shall_be_stable:                ;/
16BE 00 41 01    jnz  [41h].0,@@cont                    ;\
                @@exit:                                 ;
16C1 81          ret                                    ;
                ;---                                    ;
                @@cont:                                 ;/
16C2 B6 51       mov  a,[subq_rx_buf+1] ;Track          ;\
16C4 26 12       jnz  @@not_lead_in_of_session_1        ;/
16C6 0F 4C 07    jz   [toc_flags].7,@@need_session_info ;toc_has_session_info (0=none, 1=yes)
16C9 C6 02 0E    mov  a,[drv_current_session]           ;\
16CC A1 01       cmp  a,1h                              ;
16CE 26 08       jnz  @@not_lead_in_of_session_1        ;/
                @@need_session_info:
16D0 04 45 EE    jnz  [45h].2,@@exit
16D3 0C 44 EB    jnz  [scex_flags].6,@@exit
16D6 20 06       jr   @@to_seek_dist_0032h
                ;---
                @@not_lead_in_of_session_1:
16D8 05 42 06    jz   [42h].2,@@notyet_fine_search      ;\
16DB CC 17 DD    jmp  try_doing_fine_search             ;/
                ;---
                @@to_seek_dist_0032h:
16DE CC 17 65    jmp  seek_dist_0032h
                ;---
                @@notyet_fine_search:
16E1 B6 6B       mov  a,[seek_task]                     ;\
16E3 A1 0D       cmp  a,0Dh                             ;
16E5 25 03       jc   @@really_notyet_fine_search       ;/
16E7 CC 18 17    jmp  do_medium_fine_search             ;-
                ;---
                @@really_notyet_fine_search:
16EA C6 01 F9    mov  a,[desired_track]          ;Track ;\
16ED B1 51       cmp  a,[subq_rx_buf+1]          ;Track ;
16EF 26 17       jnz  @@seek_different_track            ;/
16F1 CD 18 F3    call calc_begin_of_current_track       ;\
16F4 C6 01 FD    mov  a,[result_mm]                 ;MM ;  this is FINE search
16F7 B7 5D       mov  [wanted_subq_mm],a                ;  with full MM:SS:FF
16F9 C6 01 FE    mov  a,[result_ss]                 ;SS ;  precision
16FC B7 5E       mov  [wanted_subq_ss],a                ;  (instead MM:SS) !!!
16FE C6 01 FF    mov  a,[result_ff]                 ;FF ;  XXX... is that done ALWAYS, after having reached the average MM:SS location ???
1701 B7 5F       mov  [wanted_subq_ff],a                ;/
1703 14 42       set  [42h].2                           ;-mark fine search
1705 CC 17 DD    jmp  try_doing_fine_search             ;-
                ;---
                @@seek_different_track:
1708 C6 01 F9    mov  a,[desired_track]          ;Track ;\
170B CD 42 F5    call get_toc_entry_for_track_a_to_ax   ;
170E B7 5D       mov  [wanted_subq_mm],a            ;MM ;
1710 B7 4D       mov  [wanted_data_mm],a            ;MM ;
1712 BF 5E       mov  [wanted_subq_ss],x            ;SS ;
1714 BF 4E       mov  [wanted_data_ss],x            ;SS ;
1716 A6 00       mov  a,0h                              ;
1718 B7 5F       mov  [wanted_subq_ff],a          ;FF=0 ;
171A B7 4F       mov  [wanted_data_ff],a          ;FF=0 ;/
171C CD 1B 00    call calc_distance                     ;-
                ;- - - - ----------
                do_rough_search_by_msf_distance:
171F CD 19 2F    call xlat_msf_distance_to_16bit_origin_curr_subq
                ;- - - - ----------
                whatever_XXX_1722h:
1722 B6 6B       mov  a,[seek_task]                     ;\
1724 A1 02       cmp  a,2h                              ;   ?
1726 24 33       jnc  @@near_desired_location           ;/
1728 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb      ;\
172A A1 03       cmp  a,3h                              ;
172C 25 2D       jc   @@near_desired_location           ;/
                ;- - -
172E C6 01 C8    mov  a,[toc_lead_out_msf+0h] ;MM       ;\
1731 CD 43 E9    call packed_bcd_to_binary              ;
1734 97          mov  x,a                 ;lead_out_MM  ;
1735 B6 5D       mov  a,[wanted_subq_mm]  ;current_MM   ;
1737 CD 43 E9    call packed_bcd_to_binary              ;
173A B7 88       mov  [88h],a  ;current_MM              ;
173C 9F          mov  a,x      ;lead_out_MM             ;
173D B0 88       sub  a,[88h]  ;sub current_MM          ;
173F A1 03       cmp  a,3h     ;<-- check if last some minutes BEFORE lead-out?
1741 25 0C       jc   @@near_lead_out                   ;/
                ;- - -
1743 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb      ;\
1745 A0 01       sub  a,1h                              ;
1747 B7 7B       mov  [seek_dist_16bit_msb],a ;msb      ;/
                @@this_fast_sled:
1749 3C 6B       inc  [seek_task]                       ;-
174B CC 1B 4E    jmp  set_fast_sled_and_spindle_direction
                ;---
                ;UNUSED!
174E 81          ret
                ;---
                @@near_lead_out:
174F B6 7B       mov  a,[seek_dist_16bit_msb] ;msb
1751 A1 05       cmp  a,5h
1753 25 06       jc   @@near_desired_location
1755 A0 02       sub  a,2h      ;<-- force SMALLER step (due to NEAR lead-out)
1757 B7 7B       mov  [seek_dist_16bit_msb],a ;msb
1759 20 EE       jr   @@this_fast_sled
                ;--- --- ---
                @@near_desired_location:
175B 05 42 11    jz   [42h].2,seek_via_dist_xlat        ;-
175E A6 0C       mov  a,0Ch                             ;\
1760 B7 6B       mov  [seek_task],a                     ;
1762 CC 1B 96    jmp  seek_dist_16bit  ;in: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb] ;/
                ;------------------
                seek_dist_0032h:
1765 16 42       set  [42h].3 ;sled direction           ;\
1767 A6 32       mov  a,32h   ;A=50=medium              ;
1769 CC 1B A2    jmp  seek_dist_A                       ;/
                ;------------------
                to_do_medium_fine_search:
176C CC 18 17    jmp  do_medium_fine_search
                ;------------------
                seek_via_dist_xlat:
176F B6 6B       mov  a,[seek_task]             ;\
1771 A1 04       cmp  a,4h                      ;
1773 24 04       jnc  @@min_inrange             ; set to min 4
1775 A6 04       mov  a,4h                      ;
1777 B7 6B       mov  [seek_task],a             ;
                @@min_inrange:                  ;/
1779 CD 19 16    call calc_direction_for_desired_track_index ;out: [42h].3
177C B6 6B       mov  a,[seek_task]     ;\      ;\
177E A4 01       and  a,1h              ; bit0  ;
1780 27 05       jz   @@this_bit0       ;/      ; skip increment based on
1782 06 42 0D    jnz  [42h].3,@@skip       ;dir ; bit0 versus sled direction
1785 20 03       jr   @@done_bit0               ;
                ;---                            ;
                @@this_bit0:                    ;
1787 07 42 08    jz   [42h].3,@@skip       ;dir ;
                @@done_bit0:                    ;/
178A 3C 6B       inc  [seek_task]               ;-increment
178C B6 6B       mov  a,[seek_task]             ;\
178E A1 0C       cmp  a,0Ch                     ;
1790 27 DA       jz   to_do_medium_fine_search  ;/
                ;- - - -
                @@skip:   ;(come here when skipping above increment)
1792 03 42 31    jz   [42h].1,@@xlat_seek_dist
1795 07 42 05    jz   [42h].3,@@keep_FF ;dir            ;\
1798 B6 52       mov  a,[subq_rx_buf+2] ;Index?         ;  ;\    ;<-- ???
179A C7 02 19    mov  [subq_position+9],a ;FF=Index ??  ;  ;/    ;<-- ???
                @@keep_FF:                              ;/
179D B6 6B       mov  a,[seek_task]                     ;\
179F A1 0B       cmp  a,0Bh                             ;
17A1 26 23       jnz  @@xlat_seek_dist                  ;/
17A3 C6 01 F9    mov  a,[desired_track]      ;Track     ;\
17A6 B1 51       cmp  a,[subq_rx_buf+1]      ;Track     ;
17A8 24 1C       jnc  @@xlat_seek_dist                  ;/
17AA C6 02 19    mov  a,[subq_position+9]    ;FF/Index  ;\copy
17AD C7 01 FA    mov  [desired_index],a      ;FF/Index  ;/
17B0 A6 01       mov  a,1h              ;\01h           ;\
17B2 B7 6B       mov  [seek_task],a     ;/              ;
17B4 C6 01 FA    mov  a,[desired_index] ;\   ;FF/Index  ;
17B7 A1 01       cmp  a,1h              ;               ; set to 01h or 03h
17B9 27 04       jz   @@use_val_1       ;/              ;
17BB A6 03       mov  a,3h              ;\03h           ;
17BD B7 6B       mov  [seek_task],a     ;/              ;
                @@use_val_1:                            ;/
17BF C6 01 FA    mov  a,[desired_index]      ;FF/Index  ;\
17C2 C7 02 12    mov  [subq_position+2],a ;Index or FF? ;/   ;<--- ???
17C5 81          ret
                ;--- --- ---
                @@xlat_seek_dist:
17C6 B6 6B       mov  a,[seek_task]
17C8 A0 04       sub  a,4h    ;04h..0Bh --> 00h..07h
17CA 97          mov  x,a
17CB D6 17 D5    mov  a,[@@seek_dist_xlat_list+x]       ;\
17CE 3F 7B       mov  [seek_dist_16bit_msb],00h ;msb    ;
17D0 B7 7C       mov  [seek_dist_16bit_lsb],a   ;lsb    ;
17D2 CC 1B 96    jmp  seek_dist_16bit                   ;/  ;in: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb]
                ;---
                @@seek_dist_xlat_list:
17D5             db 080h,080h,040h,020h,00Ah,003h,002h,001h
                ;------------------
                try_doing_fine_search:
                 ;this is doing fine-search in so far, that full MM:SS:FF
                 ;precision is known.
                 ;however, on big distances, it may switch back to rough search.
                 ;- - -
17DD 01 6A 0C    jz   [datamode_flag].0,@@audio
17E0 00 49 09    jnz  [49h].0,@@cont
17E3 01 BB 03    jz   [drv_mode].0,@@to_whatever_XXX_3C88h  ;cdda (0=off, 1=allow reading edc-less cdda sectors)
17E6 0D 50 03    jz   [50h].6,@@cont
                @@to_whatever_XXX_3C88h:
17E9 CC 3C 88    jmp  whatever_XXX_3C88h        ;... stuff (and possibly back to whatever_XXX_1722h) ?
                ;---
                @@audio:
                @@cont:
17EC CD 1B 00    call calc_distance             ;-
17EF B6 6B       mov  a,[seek_task]             ;\
17F1 A1 0D       cmp  a,0Dh                     ;
17F3 24 22       jnc  do_medium_fine_search     ;/
17F5 B6 7D       mov  a,[distance_mm]                      ;MM  ;\
17F7 26 1A       jnz  @@to_do_rough_search_by_msf_distance      ;
17F9 B6 7E       mov  a,[distance_ss]                      ;SS  ;
17FB 26 16       jnz  @@to_do_rough_search_by_msf_distance      ;/
17FD 07 42 13    jz   [42h].3,@@to_do_rough_search_by_msf_distance  ;-sled direction
1800 B6 7F       mov  a,[distance_ff]                      ;FF  ;\
1802 A1 31       cmp  a,31h                                ;FF  ;
1804 24 0D       jnc  @@to_do_rough_search_by_msf_distance      ;  ;-> rough
1806 A1 02       cmp  a,02h                                ;FF  ;
1808 24 0D       jnc  do_medium_fine_search                     ;/ ;-> medium
                ;- - - do SUPER-FINE stepping...
180A 17 42       res  [42h].3 ;sled direction           ;-
180C A6 01       mov  a,1h                              ;\
180E B7 7A       mov  [seek_dist_8bit],a                ;/
1810 CC 1C 70    jmp  seek_one_step_ahead_or_back       ;-
                ;---
                @@to_do_rough_search_by_msf_distance:
1813 CC 17 1F    jmp  do_rough_search_by_msf_distance
                ;------------------
                ;UNUSED!
1816 81          ret
                ;------------------
                do_medium_fine_search:
1817 01 42 03    jz   [42h].0,@@keep_direction                             ;\
181A CD 19 16    call calc_direction_for_desired_track_index ;out: [42h].3 ;
                @@keep_direction:                                          ;/
181D 07 42 0B    jz   [42h].3,@@act_as_near_distance    ;-sled direction
1820 05 42 4D    jz   [42h].2,@@ignore_target           ;-
1823 B6 7D       mov  a,[distance_mm]               ;MM ;\
1825 26 47       jnz  @@to_@@finish1                    ; still FAR distance
1827 B6 7E       mov  a,[distance_ss]               ;SS ;
1829 26 43       jnz  @@to_@@finish1                    ;/
                @@act_as_near_distance:
182B 0F BB 02    jz   [drv_mode].7,@@this_speed ;speed  ;\
182E 16 02       set  [io_portc].3      ;SPEED pin      ; speed
                @@this_speed:                           ;/
1830 B6 6B       mov  a,[seek_task]                             ;\
1832 A1 0E       cmp  a,0Eh                                     ;
1834 24 1A       jnc  @@act_as_ultranear_distance2              ;/
1836 07 42 06    jz   [42h].3,@@act_as_ultranear_distance1 ;dir ;-
1839 B6 7F       mov  a,[distance_ff]               ;FF ;\
183B A1 03       cmp  a,3h                              ;
183D 24 31       jnc  @@notyet_ultranear_target         ;/
                @@act_as_ultranear_distance1:
183F 02 43 35    jnz  [43h].1,@@abort_seek_play_read    ;-
1842 C6 02 11    mov  a,[subq_position+1]               ;\
1845 A1 AA       cmp  a,0AAh    ;AAh=Lead-Out           ; check if lead-out
1847 27 43       jz   @@lead_out                        ;/
1849 A6 0E       mov  a,0Eh                             ;\
184B B7 6B       mov  [seek_task],a                     ;/
184D CD 42 33    call mute_or_demute_cd_da              ;-
                @@act_as_ultranear_distance2:
1850 06 42 23    jnz  [42h].3,@@exit ;sled direction    ;-
1853 3F 6B       mov  [seek_task],00h                   ;-
1855 A6 04       mov  a,(1 shl dt_2_whatever)           ;\change task !
1857 B7 6D       mov  [disc_task],a                     ;/
1859 A6 0B       mov  a,0Bh   ;11 decimal               ;\offhold some actions
185B B7 76       mov  [near_target_offhold],a           ;/(while near target)
185D 1A 41       set  [41h].5  ;near_target_flag        ;-
                ;- - - below is similar as in "whatever_XXX_3CACh" - - -
185F 1D BC       res  [drv_stat].6 ;seek_active = false ;\
1861 00 6A 05    jnz  [datamode_flag].0,@@non_audio     ;
1864 1E BC       set  [drv_stat].7 ;play_active = true  ;
1866 1B BC       res  [drv_stat].5 ;read_active = false ; switch to read or play
1868 81          ret                                    ; and exit
                ;---                                    ;
                @@non_audio:                            ;
1869 1A BC       set  [drv_stat].5 ;read_active = true  ;
186B 1F BC       res  [drv_stat].7 ;play_active = false ;
186D 81          ret                                    ;/
                ;---
                @@to_@@finish1:
186E 20 3F       jr   @@finish1
                ;---
                @@ignore_target:
                @@notyet_ultranear_target:
1870 A6 0D       mov  a,0Dh                             ;\
1872 B7 6B       mov  [seek_task],a                     ;/
1874 14 42       set  [42h].2                           ;-
                @@exit:
1876 81          ret
                ;---
                @@abort_seek_play_read:
1877 1D BC       res  [drv_stat].6 ;seek_active = false         ;\
1879 1F BC       res  [drv_stat].7 ;play_active = false         ;
187B 1B BC       res  [drv_stat].5 ;read_active = false         ;/
187D A6 01       mov  a,1h ;for cmp a,[cmd_2nd_response_type]   ;\
187F CD 45 A9    call discard_response_type_A                   ;
1882 A6 05       mov  a,5h ;for cmp a,[cmd_2nd_response_type]   ;
1884 CD 45 A9    call discard_response_type_A                   ;
1887 A6 04       mov  a,4h ;for cmp a,[cmd_2nd_response_type]   ;
1889 CD 45 A9    call discard_response_type_A                   ;/
                @@lead_out:
188C A6 0C       mov  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;\
188E B7 6D       mov  [disc_task],a                                 ;
1890 04 42 18    jnz  [42h].2,@@finish2                             ;/
1893 B6 57       mov  a,[subq_rx_buf+7]             ;MM ;\
1895 B7 5D       mov  [wanted_subq_mm],a                ;
1897 B6 58       mov  a,[subq_rx_buf+8]             ;SS ;  <-- SUB-Q position
1899 B7 5E       mov  [wanted_subq_ss],a                ;
189B B6 59       mov  a,[subq_rx_buf+9]             ;FF ;
189D B7 5F       mov  [wanted_subq_ff],a                ;/
189F B6 53       mov  a,[subq_rx_buf+3]             ;MM ;\
18A1 C7 02 13    mov  [subq_position+3],a               ;
18A4 B6 54       mov  a,[subq_rx_buf+4]             ;SS ;
18A6 C7 02 14    mov  [subq_position+4],a               ;
N/A             ;N/A  a,[subq_rx_buf+5]   ;N/A      ;-- ;
N/A             ;N/A  [subq_position+5],a ;N/A          ;/
18A9 14 42       set  [42h].2                           ;-
                @@finish2:
18AB A6 7D       mov  a,7Dh ;125 decimal                ;\
18AD B7 70       mov  [seek_timeout],a                  ;/
                @@finish1:
18AF A6 01       mov  a,1h                              ;\
18B1 B7 6B       mov  [seek_task],a                     ;/
18B3 CC 42 22    jmp  mute_cd_da                        ;-
                ;------------------
                whatever_unused_18B6h:  ;UNUSED! (similar to whatever_XXX_3D82h, see there)
18B6 B6 5D       mov  a,[wanted_subq_mm]            ;MM ;\
18B8 CD 43 E9    call packed_bcd_to_binary              ;
18BB 97          mov  x,a      ;minute                  ;/
18BC CD 19 91    call get_x_from_minute_table  ;in/out: X
18BF B7 8C       mov  [8Ch],a  ;divider
18C1 A6 08       mov  a,8h              ;\
18C3 B7 8A       mov  [8Ah],a           ; 8CAh = 2250 = 30*75   ...?
18C5 A6 CA       mov  a,0CAh            ;
18C7 B7 8B       mov  [8Bh],a           ;/
18C9 CD 1C A0    call maths_divide_16bit_by_8bit
18CC B6 8B       mov  a,[8Bh]
18CE B7 89       mov  [89h],a
18D0 B6 7F       mov  a,[distance_ff]
18D2 CD 43 E9    call packed_bcd_to_binary
18D5 5F          mov  x,00h,slow                        ;\
                @@divide_lop:                           ;
18D6 5C          inc  x        ;result                  ;
18D7 B0 89       sub  a,[89h]  ;remainder               ;
18D9 24 FB       jnc  @@divide_lop                      ;
18DB 5A          dec  x        ;result                  ;/
18DC 07 42 07    jz   [42h].3,@@round_up ;sled direction;\
18DF A3 01       cmp  x,1h                              ;
18E1 25 0B       jc   @@too_small                       ;
18E3 06 42 01    jnz  [42h].3,@@do_not_round_up ;dir    ;
                @@round_up:                             ;
18E6 5C          inc  x                                 ;
                @@do_not_round_up:                      ;/
N/A             ;N/A  ;<-- slightly different as in similar function
18E7 BF 7C       mov  [seek_dist_16bit_lsb],x   ;lsb=x  ;\
18E9 3F 7B       mov  [seek_dist_16bit_msb],00h ;msb=00 ;
18EB CC 1B 96    jmp  seek_dist_16bit                   ;/  ;in: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb]
                ;---
                @@too_small:
18EE BE 7F       mov  x,[distance_ff]
18F0 CC 18 17    jmp  do_medium_fine_search     ;------------>
                ;------------------
                calc_begin_of_current_track:
18F3 B6 57       mov  a,[subq_rx_buf+7] ;AbsMM  ;\
18F5 B7 88       mov  [scratch_msf_mm1],a       ;
18F7 B6 58       mov  a,[subq_rx_buf+8] ;AbsSS  ; MM:SS:FF (absolute)
18F9 B7 89       mov  [scratch_msf_ss1],a       ;
18FB B6 59       mov  a,[subq_rx_buf+9] ;AbsFF  ;
18FD B7 8A       mov  [scratch_msf_ff1],a       ;/
18FF B6 53       mov  a,[subq_rx_buf+3] ;RelMM  ;\
1901 B7 8B       mov  [scratch_msf_mm2],a       ;
1903 B6 54       mov  a,[subq_rx_buf+4] ;RelSS  ; MM:SS:FF (within track)
1905 B7 8C       mov  [scratch_msf_ss2],a       ;
1907 B6 55       mov  a,[subq_rx_buf+5] ;RelFF  ;
1909 B7 8D       mov  [scratch_msf_ff2],a       ;/
190B 98          clc
190C B6 52       mov  a,[subq_rx_buf+2] ;Index
190E 27 03       jz   @@index0
1910 CC 43 54    jmp  bcd_subtract_msf_minus_msf  ;Abs-Rel (subtract ellapsed time)  ;[result_msf]=[msf1]-[msf2]-cy
                ;---
                @@index0:
1913 CC 43 8E    jmp  bcd_addition_msf_plus_msf   ;Abs+Rel (add pre-gap time) ;[result_msf]=[msf1]+[msf2]+cy
                ;------------------
                calc_direction_for_desired_track_index:  ;out: [42h].3
1916 B6 51       mov  a,[subq_rx_buf+1] ;Track
1918 C1 01 F9    cmp  a,[desired_track]         ;--> cy (on msb)
191B 26 05       jnz  @@this_cy
191D B6 52       mov  a,[subq_rx_buf+2] ;Index?
191F C1 01 FA    cmp  a,[desired_index]         ;--> cy (on lsb) (when msb1=msb2)
                @@this_cy:
                ;- - - - - --------
                set_direction_to_cy:  ;set [42h].3 = cy
1922 24 03       jnc  @@this
1924 16 42       set  [42h].3 ;sled direction
1926 81          ret
                ;---
                @@this:
1927 17 42       res  [42h].3 ;sled direction
1929 81          ret
                ;------------------
                xlat_msf_distance_to_16bit_origin_curr_data:   ;UNUSED!
192A C6 02 20    mov  a,[sector_header+0]   ;AbsMM (origin)
192D 20 02       jr   xlat_msf_distance_to_16bit_with_origin_minute_A
                ;------------------
                xlat_msf_distance_to_16bit_origin_curr_subq:
192F B6 57       mov  a,[subq_rx_buf+7]     ;AbsMM (origin)
                ;- - - - - --------
                xlat_msf_distance_to_16bit_with_origin_minute_A:
                 ;in: A       = MM (origin) (BCD)
                 ;in: [42h].3 = direction
                 ;in: [distance_mm]   = num MM's distance (BCD)
                 ;in: [distance_ss]   = num SS's distance (BCD)
                 ;in: [distance_ff]   = num FF's distance (BCD)
                 ;out: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb] = distance (16bit)
                ;- - - - -
1931 3F 7B       mov  [seek_dist_16bit_msb],00h ;msb            ;\init sum=0
1933 3F 7C       mov  [seek_dist_16bit_lsb],00h ;lsb            ;/
1935 CD 43 E9    call packed_bcd_to_binary  ;AbsMM (origin)     ;\
1938 97          mov  x,a                   ;AbsMM (origin)     ;
1939 B6 7D       mov  a,[distance_mm]    ;lopcount (BCD)    ;MM ;
193B 27 19       jz   @@minute_sum_skip  ;lopcount=0            ;
193D CD 43 E9    call packed_bcd_to_binary                      ; MM
1940 B7 88       mov  [88h],a   ;lopcount               ;\      ;
                @@minute_sum_lop:                       ;       ;
1942 CD 19 91    call get_x_from_minute_table  ;... get distance ?  ;in/out: X
1945 CD 19 83    call @@sum_up     ;sum up ;*1          ;       ;
1948 CD 19 83    call @@sum_up     ;sum up ;*2          ;       ;
194B 07 42 03    jz   [42h].3,@@minute_sum_prev  ;direction     ;
194E 5C          inc  x        ;<-- next minute         ;       ;
194F 20 01       jr   @@minute_sum_next                 ;       ;
                ;---                                    ;       ;
                @@minute_sum_prev:                      ;       ;
1951 5A          dec  x        ;<-- prev minute         ;       ;
                @@minute_sum_next:                      ;       ;
1952 3A 88       dec  [88h]    ;lopcount                ;       ;
1954 26 EC       jnz  @@minute_sum_lop                  ;/      ;
                @@minute_sum_skip:                              ;/
                ;- - - - -
1956 B6 7E       mov  a,[distance_ss]      ;lopcount (BCD)      ;\
1958 27 1C       jz   @@second_sum_skip    ;lopcount=0          ;
195A CD 43 E9    call packed_bcd_to_binary                      ; SS
195D B7 8F       mov  [8Fh],a  ;lopcount                        ;
195F CD 19 91    call get_x_from_minute_table     ;in/out: X    ;
1962 B7 8B       mov  [8Bh],a           ;\16bit value = 00xxh   ;
1964 3F 8A       mov  [8Ah],00h         ;/                      ;
1966 A6 1E       mov  a,1Eh   ;30 decimal ... ?                 ;
1968 B7 8C       mov  [8Ch],a  ;divider                         ;
196A CD 1C A0    call maths_divide_16bit_by_8bit                ;
196D B6 8B       mov  a,[8Bh]                                   ;
                @@second_sum_lop:               ;\              ;
196F CD 19 83    call @@sum_up                  ;               ;
1972 3A 8F       dec  [8Fh]    ;lopcount        ;               ;
1974 26 F9       jnz  @@second_sum_lop          ;/              ;
                @@second_sum_skip:                              ;/
                ;- - - - -
1976 B6 7F       mov  a,[distance_ff]                           ;\
1978 44          shr  a  ;div1                                  ;
1979 44          shr  a  ;div2                                  ;
197A 44          shr  a  ;div4                                  ; FF
197B 44          shr  a  ;div16                                 ;
197C A4 0F       and  a,0Fh  ;blah                              ;
197E 44          shr  a  ;div32                      ;\         ;
197F 06 42 01    jnz  [42h].3,@@do_not_round_up ;dir ; round    ;
1982 4C          inc  a                              ;          ;
                @@do_not_round_up:                   ;/         ;/
                ;- - - - - -
                @@sum_up:       ;... sum up (total sled distance?)
1983 B7 8E       mov  [8Eh],a                           ;-"push a"
1985 98          clc                                    ;\
1986 B9 7C       adc  a,[seek_dist_16bit_lsb]  ;lsb     ;
1988 B7 7C       mov  [seek_dist_16bit_lsb],a  ;lsb     ; total=total+A
198A 24 02       jnc  @@no_carry                        ;
198C 3C 7B       inc  [seek_dist_16bit_msb]    ;msb     ;
                @@no_carry:                             ;/
198E B6 8E       mov  a,[8Eh]                           ;-"pop a"
1990 81          ret
                ;------------------
                get_x_from_minute_table:
                        ;... MAYBE get sled-distance for minute X ... ?
                        ;... or opposite thereof: sectors per spiral winding ?
                 ;this should probably redirect to the NN-minute disc tables
                 ;for discs with NN-minutes, accordingly.
                 ;in practice, the PSX doesn't detect the disc capacity
                 ;(which would be difficult as one would need to detect the
                 ;'tightness' of the spiral windings),
                 ;and does always use the 77-minute table (although supports
                 ;only the first 71 minutes of the table due to a BUG).
1991 CC 19 E6    jmp  get_x_from_77_minute_table     ;in: X=minute
                ;--- --- ----------
                get_x_from_71_minute_table:   ;UNUSED!
1994 A3 47       cmp  x,47h  ;aka 71 decimal
1996 24 04       jnc  @@index_47h_thru_FFh
1998 D6 19 9F    mov  a,[@@table_71_minutes+x]
199B 81          ret
                ;---
                @@index_47h_thru_FFh:
199C A6 1E       mov  a,1Eh
199E 81          ret
                ;---
                @@table_71_minutes:      ;71 entries
199F             db 0D4h,0CEh,0C8h,0C3h,0BFh,0BBh,0B7h,0B3h ;\00h..0Fh
19A7             db 0AFh,0ADh,0AAh,0A7h,0A3h,0A1h,09Eh,09Ch ;/
19AF             db 099h,097h,095h,093h,091h,08Fh,08Dh,08Bh ;\10h..1Fh
19B7             db 089h,088h,086h,085h,084h,082h,081h,080h ;/
19BF             db 07Eh,07Dh,07Bh,07Ah,079h,078h,077h,076h ;\20h..2Fh
19C7             db 074h,073h,073h,071h,070h,06Fh,06Eh,06Dh ;/
19CF             db 06Dh,06Dh,06Ch,06Bh,06Ah,069h,069h,068h ;\30h..3Fh
19D7             db 067h,066h,066h,065h,064h,063h,063h,062h ;/
19DF             db 062h,061h,060h,060h,05Fh,05Fh,05Fh      ;-40h..46h
                ;--- --- ----------
                get_x_from_77_minute_table:   ;<-- THIS one is USED!
19E6 A3 47       cmp  x,47h  ;aka 71 decimal     ;<-- BUG: should be 77 decimal
19E8 24 04       jnc  @@index_47h_thru_FFh
19EA D6 19 F1    mov  a,[@@table_77_minutes+x]
19ED 81          ret
                ;---
                @@index_47h_thru_FFh:
19EE A6 1E       mov  a,1Eh
19F0 81          ret
                ;---
                @@table_77_minutes:    ;77 entries (BUG: only 71 entries used)
19F1             db 0F3h,0EBh,0E3h,0DDh,0D6h,0D1h,0CCh,0C7h ;\00h..0Fh
19F9             db 0C2h,0BEh,0BAh,0B6h,0B3h,0AFh,0ACh,0A9h ;/
1A01             db 0A6h,0A4h,0A1h,09Fh,09Ch,09Ah,098h,096h ;\10h..1Fh
1A09             db 094h,092h,090h,08Eh,08Dh,08Bh,08Ah,088h ;/
1A11             db 087h,085h,084h,082h,081h,080h,07Fh,07Dh ;\20h..2Fh
1A19             db 07Ch,07Bh,07Ah,079h,078h,077h,076h,075h ;/
1A21             db 074h,073h,072h,071h,070h,070h,06Fh,06Eh ;\30h..3Fh
1A29             db 06Dh,06Ch,06Ch,06Bh,06Ah,069h,069h,068h ;/
1A31             db 067h,067h,066h,065h,065h,064h,064h,063h ;\40h..4Ch
1A39             db 062h,062h,061h,061h,060h                ;/
                ;--- --- ----------
                get_x_from_85_minute_table:   ;UNUSED!
1A3E A3 47       cmp  x,47h  ;aka 71 decimal     ;<-- BUG: should be 85 decimal
1A40 24 04       jnc  @@index_47h_thru_FFh
1A42 D6 1A 49    mov  a,[@@table_85_minutes+x]
1A45 81          ret
                ;---
                @@index_47h_thru_FFh:
1A46 A6 1E       mov  a,1Eh
1A48 81          ret
                ;---
                @@table_85_minutes:   ;85 entries (BUG: only 71 entries used)
1A49             db 0FDh,0F6h,0EFh,0EAh,0E4h,0DFh,0DAh,0D6h ;\00h..0Fh
1A51             db 0D1h,0CDh,0CAh,0C6h,0C3h,0C0h,0BDh,0BAh ;/
1A59             db 0B7h,0B4h,0B2h,0AFh,0ADh,0ABh,0A8h,0A6h ;\10h..1Fh
1A61             db 0A4h,0A2h,0A0h,09Fh,09Dh,09Bh,09Ah,098h ;/
1A69             db 096h,095h,094h,092h,091h,08Fh,08Eh,08Dh ;\20h..2Fh
1A71             db 08Ch,08Ah,089h,088h,087h,086h,085h,084h ;/
1A79             db 083h,082h,081h,080h,07Fh,07Eh,07Dh,07Ch ;\30h..3Fh
1A81             db 07Ch,07Bh,07Ah,079h,078h,078h,077h,076h ;/
1A89             db 075h,075h,074h,073h,073h,072h,071h,071h ;\40h..4Fh
1A91             db 070h,06Fh,06Fh,06Eh,06Eh,06Dh,06Ch,06Ch ;/
1A99             db 06Bh,06Bh,06Ah,06Ah,069h                ;-50h..54h
                ;--- --- ----------
                get_x_from_95_minute_table:   ;UNUSED!
1A9E A3 47       cmp  x,47h  ;aka 71 decimal     ;<-- BUG: should be 95 decimal
1AA0 24 04       jnc  @@index_47h_thru_FFh
1AA2 D6 1A A9    mov  a,[@@table_95_minutes+x]
1AA5 81          ret
                ;---
                @@index_47h_thru_FFh:
1AA6 A6 1E       mov  a,1Eh
1AA8 81          ret
                ;---
                @@table_95_minutes:   ;95 entries (BUG: only 71 entries used)
1AA9             db 0F8h,0F0h,0E9h,0E3h,0DDh,0D8h,0D3h,0CEh ;\00h..0Fh
1AB1             db 0CAh,0C6h,0C2h,0BEh,0BBh,0B8h,0B4h,0B1h ;/
1AB9             db 0AFh,0ACh,0A9h,0A7h,0A5h,0A2h,0A0h,09Eh ;\10h..1Fh
1AC1             db 09Ch,09Ah,098h,097h,095h,093h,092h,090h ;/
1AC9             db 08Eh,08Dh,08Ch,08Ah,089h,088h,086h,085h ;\20h..2Fh
1AD1             db 084h,083h,082h,080h,07Fh,07Eh,07Dh,07Ch ;/
1AD9             db 07Bh,07Ah,079h,079h,078h,077h,076h,075h ;\30h..3Fh
1AE1             db 074h,073h,073h,072h,071h,070h,070h,06Fh ;/
1AE9             db 06Eh,06Eh,06Dh,06Ch,06Ch,06Bh,06Ah,06Ah ;\40h..4Fh
1AF1             db 069h,069h,068h,067h,067h,066h,066h,065h ;/
1AF9             db 065h,064h,064h,063h,063h,062h,062h      ;-50h..5Eh
                ;------------------
                calc_distance:
                 ;out: [distance_mm]:[distance_ss]:[distance_ff] = absolute distance
                 ;out: [42h].3 = sign.flag for distance (sled direction)
1B00 B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
1B02 B7 88       mov  [scratch_msf_mm1],a       ;
1B04 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
1B06 B7 89       mov  [scratch_msf_ss1],a       ;
1B08 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
1B0A B7 8A       mov  [scratch_msf_ff1],a       ;/
1B0C B6 5D       mov  a,[wanted_subq_mm]    ;MM ;\
1B0E B7 8B       mov  [scratch_msf_mm2],a       ;
1B10 B6 5E       mov  a,[wanted_subq_ss]    ;SS ;
1B12 B7 8C       mov  [scratch_msf_ss2],a       ;
1B14 B6 5F       mov  a,[wanted_subq_ff]    ;FF ;
1B16 B7 8D       mov  [scratch_msf_ff2],a       ;/
1B18 AE 03       mov  x,3h ;blah
1B1A CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
1B1D CD 19 22    call set_direction_to_cy       ;
1B20 24 18       jnc  @@positive                ;/
1B22 B6 5D       mov  a,[wanted_subq_mm]    ;MM ;\
1B24 B7 88       mov  [scratch_msf_mm1],a       ;
1B26 B6 5E       mov  a,[wanted_subq_ss]    ;SS ;
1B28 B7 89       mov  [scratch_msf_ss1],a       ;
1B2A B6 5F       mov  a,[wanted_subq_ff]    ;FF ;
1B2C B7 8A       mov  [scratch_msf_ff1],a       ;/
1B2E B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
1B30 B7 8B       mov  [scratch_msf_mm2],a       ;
1B32 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
1B34 B7 8C       mov  [scratch_msf_ss2],a       ;
1B36 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
1B38 B7 8D       mov  [scratch_msf_ff2],a       ;/
                @@positive:
1B3A 98          clc                            ;\
1B3B CD 43 54    call bcd_subtract_msf_minus_msf;/ ;[result_msf]=[msf1]-[msf2]-cy
1B3E C6 01 FD    mov  a,[result_mm]         ;MM ;\
1B41 B7 7D       mov  [distance_mm],a           ;
1B43 C6 01 FE    mov  a,[result_ss]         ;SS ;
1B46 B7 7E       mov  [distance_ss],a           ;
1B48 C6 01 FF    mov  a,[result_ff]         ;FF ;
1B4B B7 7F       mov  [distance_ff],a           ;/
1B4D 81          ret
                ;------------------
                set_fast_sled_and_spindle_direction:
1B4E 18 42       set  [42h].4
1B50 1C 42       set  [42h].6
1B52 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb              ;\
1B54 B7 7C       mov  [seek_dist_16bit_lsb],a ;lsb ;n/100h      ;  ?
1B56 34 7C       shr  [seek_dist_16bit_lsb]   ;lsb ;n/200h      ;
1B58 34 7C       shr  [seek_dist_16bit_lsb]   ;lsb ;n/400h      ;/
1B5A A6 1E       mov  a,1Eh   ;cx(1E)           ;\CXA1782BR Servo Amplifier
1B5C CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeightInvalid ;?
1B5F A6 22       mov  a,22h   ;cx(22)=forward   ;\CXA1782BR Servo Amplifier
1B61 06 42 01    jnz  [42h].3,@@this_sled_dir   ; SledFastForward
1B64 4C          inc  a ;=23h ;cx(23)=reverse   ; or
                @@this_sled_dir:                ; SledFastReverse
1B65 CD 43 33    call send_8bit_to_cxa1782br    ;/
1B68 A6 32       mov  a,32h                     ;\
1B6A B7 62       mov  [62h],a                   ;/
1B6C A6 E8       mov  a,0E8h ;cx(E8) ;forward   ;\CXD2510Q Signal Processor
1B6E 07 42 02    jz   [42h].3,@@this_spindle_dir; SpindleMotorForward
1B71 A6 EA       mov  a,0EAh ;cx(EA) ;reverse   ; or
                @@this_spindle_dir:             ; SpindleMotorReverse
1B73 CD 43 33    call send_8bit_to_cxd2510q     ;/
1B76 CD 44 AC    call whatever_XXX_44ACh  ;---> ;\
1B79 B7 68       mov  [68h],a                   ;/
1B7B A6 08       mov  a,08h  ;cx(08)            ;\CXA1782BR Servo Amplifier
1B7D CD 43 33    call send_8bit_to_cxa1782br    ;/FocusServoOn
1B80 A6 B0       mov  a,0B0h   ;cx(B01000) ;msb ;\
1B82 AE 10       mov  x,10h                ;mid ; CXD2510Q Signal Processor
1B84 BF 88       mov  [scratch_cxd_mid],x  ;mid ; TraverseMonitorCounterSetting
1B86 3F 89       mov  [scratch_cxd_lsb],00h;lsb ; (fixed)
1B88 CD 43 1D    call send_24bit_to_cxd2510q    ;/
1B8B 1E 42       set  [42h].7                   ;-recent sensed COUT
1B8D 17 02       res  [io_portc].3  ;SPEED pin  ;-
1B8F 81          ret
                ;------------------
                to_seek_dist_0080h_or_higher:
1B90 CC 1C 69    jmp  seek_dist_0080h_or_higher
                ;--- --- --- ------
                to_seek_dist_0009h_or_less:
1B93 CC 1C 6E    jmp  seek_dist_0009h_or_less
                ;------------------
                seek_dist_16bit:        ;in: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb]
1B96 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb
1B98 26 F6       jnz  to_seek_dist_0080h_or_higher
1B9A B6 7C       mov  a,[seek_dist_16bit_lsb] ;lsb
1B9C 2B F2       js   to_seek_dist_0080h_or_higher      ;sf=aka bit7
1B9E A1 0A       cmp  a,0Ah   ;lsb
1BA0 25 F1       jc   to_seek_dist_0009h_or_less
                ;- - - - - - ------
                seek_dist_A:   ;in: A=dist/speed
1BA2 17 02       res  [io_portc].3      ;SPEED pin
1BA4 08 43 0B    jnz  [43h].4,@@exit    ;... busy?
1BA7 97          mov  x,a       ;seek_dist
1BA8 B6 6C       mov  a,[mech_task]                     ;\
1BAA A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
1BAC 27 05       jz   @@speed_shall_be_stable           ;
1BAE A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ;
1BB0 27 01       jz   @@speed_shall_be_stable           ;/
                @@exit:
1BB2 81          ret
                ;---
                @@speed_shall_be_stable:
1BB3 9F          mov  a,x       ;seek_dist      ;-
1BB4 3F 7A       mov  [seek_dist_8bit],00h      ;-
1BB6 44          shr  a         ;dist=dist/2    ;-
1BB7 B7 8E       mov  [8Eh],a         ;lsb      ;-save dist.LSB
1BB9 44          shr  a  ;\           ;dist/2   ;\
1BBA 44          shr  a  ; div        ;dist/4   ;
1BBB 44          shr  a  ; 10h        ;dist/8   ; isolate dist.MSB
1BBC 44          shr  a  ;/           ;dist/10h ;
1BBD A4 0F       and  a,0Fh ;blah               ;
1BBF B7 8D       mov  [8Dh],a         ;msb      ;/
1BC1 B6 7C       mov  a,[seek_dist_16bit_lsb] ;lsb  ;\
1BC3 44          shr  a  ;\                         ;
1BC4 44          shr  a  ;                          ;
1BC5 44          shr  a  ; div 40h                  ;
1BC6 44          shr  a  ;                          ;
1BC7 44          shr  a  ;                          ;
1BC8 44          shr  a  ;/                         ;
1BC9 B7 66       mov  [66h],a   ;<--- busy timer ?  ;/  ;\
1BCB 27 02       jz   @@cont                            ;
1BCD 18 43       set  [43h].4    ;... mark busy?        ;
                @@cont:                                 ;/
1BCF A6 61       mov  a,61h    ;cx(6100)   ;msb ;\CXD2510Q Signal Processor
1BD1 3F 88       mov  [scratch_cxd_mid],00h;mid ; SledKickBrakeKickTimer
1BD3 CD 43 2B    call send_16bit_to_cxd2510q    ;/
1BD6 B6 8E       mov  a,[8Eh]         ;dist     ;\
1BD8 A4 0F       and  a,0Fh                     ;
1BDA 48          shl  a               ;dist*2   ; CXD2510Q Signal Processor
1BDB 48          shl  a               ;dist*4   ; TrackJumpCountSetting
1BDC 48          shl  a               ;dist*8   ; (xxx = variable = dist)
1BDD 48          shl  a               ;dist*10h ;
1BDE B7 89       mov  [scratch_cxd_lsb],a  ;lsb ;
1BE0 B6 8D       mov  a,[8Dh]         ;dist/10h ;
1BE2 B7 88       mov  [scratch_cxd_mid],a  ;mid ;
1BE4 A6 70       mov  a,70h   ;cx(70xxx0)  ;msb ;
1BE6 CD 43 1D    call send_24bit_to_cxd2510q    ;/
1BE9 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb ?    ;\
1BEB A1 20       cmp  a,20h                             ; blah
1BED 25 00       jc   @@blah                            ;
                @@blah:                                 ;/
1BEF A6 5A       mov  a,5Ah  ;cx(5A)            ;\CXD2510Q Signal Processor
1BF1 CD 43 33    call send_8bit_to_cxd2510q     ;/BlindBrakeOverflowTimer=A
1BF4 17 43       res  [43h].3                   ;-
1BF6 A6 4C       mov  a,4Ch       ;cx(4C00)     ;\
                ;- - - - - - ------             ; CXD2510Q Signal Processor
                seek_1_step_inj:  ;in: A=48h    ; cx(4800)=Forward1track
1BF8 06 42 01    jnz  [42h].3,@@forward ;dir    ; cx(4900)=Reverse1track
1BFB 4C          inc  a     ;cx(4900),cx(4D00)  ; cx(4C00)=Forward2Ntrack
                @@forward:                      ; cx(4D00)=Reverse2Ntrack
1BFC B7 8F       mov  [8Fh],a                   ;/
1BFE A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
1C00 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
1C03 B6 8F       mov  a,[8Fh]   ;cx(4x00)  ;msb ;\CXD2510Q Signal Processor
1C05 3F 88       mov  [scratch_cxd_mid],00h;mid ; cx(4x00) from above
1C07 CD 43 2B    call send_16bit_to_cxd2510q    ;/
1C0A 1A 42       set  [42h].5
1C0C 18 42       set  [42h].4
1C0E 10 46       set  [46h].0
1C10 A6 0C       mov  a,0Ch                     ;\
1C12 B7 62       mov  [62h],a                   ;/
1C14 A6 9B       mov  a,9Bh   ;cx(9B00) ;normal ;\
1C16 AE 00       mov  x,00h                     ;
1C18 BF 88       mov  [scratch_cxd_mid],x       ; CXD2510Q Signal Processor
1C1A 0F BB 06    jz   [drv_mode].7,@@this_speed ; NormalSpeed
1C1D A6 9F       mov  a,9Fh   ;cx(9F00) ;double ; or
1C1F AE 00       mov  x,00h                     ; DoubleSpeed
1C21 BF 88       mov  [scratch_cxd_mid],x       ;
                @@this_speed:                   ;
1C23 CD 43 2B    call send_16bit_to_cxd2510q    ;/
1C26 13 B7       res  [curr_idx_07h_w_chip_control].1   ;\  ;<--normal
1C28 0F BB 02    jz   [drv_mode].7,@@this_speed2 ;speed ;
1C2B 12 B7       set  [curr_idx_07h_w_chip_control].1   ;   ;<--double
                @@this_speed2:                          ;/
1C2D AE 03       mov  x,idx_03h_w_decoder_control       ;\
1C2F BF 04       mov  [io_porte_idx],x                  ; temporarily disable
1C31 A6 08       mov  a,8h                              ; decoder (undone below)
1C33 CD 40 FB    call write_data_bus                    ;/
1C36 A6 00       mov  a,0h                                              ;\
1C38 AE 10       mov  x,idx_10h_w_drv_address_lo                        ;
1C3A BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
1C3C CD 40 FB    call write_data_bus                                    ;
1C3F 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
1C41 CD 40 FB    call write_data_bus                                    ;
1C44 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
1C46 CD 40 FB    call write_data_bus                                    ;/
1C49 AE 07       mov  x,idx_07h_w_chip_control          ;\
1C4B BF 04       mov  [io_porte_idx],x                  ;
1C4D B6 B7       mov  a,[curr_idx_07h_w_chip_control]   ;
1C4F CD 40 FB    call write_data_bus                    ;/
1C52 AE 03       mov  x,idx_03h_w_decoder_control       ;\
1C54 BF 04       mov  [io_porte_idx],x                  ;
1C56 B6 B6       mov  a,[curr_idx_03h_w_decoder_control];
1C58 CD 40 FB    call write_data_bus                    ;/
1C5B 10 BA       set  [curr_idx_0Ah_w_clrctl].0         ;\
1C5D AE 0A       mov  x,idx_0Ah_w_clrctl                ;
1C5F BF 04       mov  [io_porte_idx],x                  ;
1C61 B6 BA       mov  a,[curr_idx_0Ah_w_clrctl]         ;
1C63 CD 40 FB    call write_data_bus                    ;
1C66 11 BA       res  [curr_idx_0Ah_w_clrctl].0         ;/
1C68 81          ret
                ;--- --- ---
                seek_dist_0080h_or_higher:
1C69 A6 80       mov  a,80h                     ;\
1C6B CC 1B A2    jmp  seek_dist_A               ;/
                ;--- --- ---
                seek_dist_0009h_or_less:
1C6E B7 7A       mov  [seek_dist_8bit],a        ;-
                ;- - - - - - ------
                seek_one_step_ahead_or_back:
1C70 A6 54       mov  a,54h  ;cx(54)            ;\CXD2510Q Signal Processor
1C72 CD 43 33    call send_8bit_to_cxd2510q     ;/BlindBrakeOverflowTimer=4
1C75 16 43       set  [43h].3
1C77 A6 48       mov  a,48h  ;cx(4800)=Forward1track, evtl. changed to cx(4900)=Reverse1track  ;CXD2510Q Signal Processor
1C79 CC 1B F8    jmp  seek_1_step_inj  ;in: A=48h
                ;------------------
                maths_divide_something:  ;(?)  ;UNUSED!
1C7C AE 08       mov  x,8h
1C7E 3F 8B       mov  [8Bh],00h ;remainder
                @@lop:
1C80 B6 88       mov  a,[88h]
1C82 B1 8A       cmp  a,[8Ah]   ;divider
1C84 2B 06       js   @@cont1
1C86 B0 8A       sub  a,[8Ah]   ;divider
1C88 B7 88       mov  [88h],a
1C8A 3C 8B       inc  [8Bh]
                @@cont1:
1C8C 38 8B       shl  [8Bh]     ;remainder
1C8E 38 88       shl  [88h]     ;\
1C90 38 89       shl  [89h]     ; weird "([88h]:[89h]) shl 1"
1C92 24 02       jnc  @@cont2   ; aka "shl [89h] + rcl [88h]"
1C94 10 88       set  [88h].0   ;/
                @@cont2:
1C96 5A          dec  x
1C97 26 E7       jnz  @@lop
1C99 B0 8A       sub  a,[8Ah]   ;divider
1C9B B7 88       mov  [88h],a
1C9D 3C 8B       inc  [8Bh]     ;remainder
1C9F 81          ret
                ;------------------
                maths_divide_16bit_by_8bit:   ;[8Ah]:[8Bh] / [8Ch]
1CA0 AE 10       mov  x,10h
1CA2 3F 88       mov  [88h],00h ;remainder.msb
1CA4 3F 89       mov  [89h],00h ;remainder.lsb
                @@lop:
1CA6 98          clc
1CA7 39 8B       rcl  [8Bh]
1CA9 39 8A       rcl  [8Ah]
1CAB 39 89       rcl  [89h]
1CAD 39 88       rcl  [88h]
1CAF B6 89       mov  a,[89h]   ;remainder.lsb
1CB1 B0 8C       sub  a,[8Ch]   ;divider
1CB3 24 0C       jnc  @@cont1
1CB5 B6 88       mov  a,[88h]   ;remainder.msb
1CB7 A0 01       sub  a,1h      ;carry
1CB9 25 0A       jc   @@cont2
1CBB B7 88       mov  [88h],a   ;remainder.msb
1CBD B6 89       mov  a,[89h]   ;remainder.lsb
1CBF B0 8C       sub  a,[8Ch]   ;divider
                @@cont1:
1CC1 B7 89       mov  [89h],a   ;remainder.lsb
1CC3 10 8B       set  [8Bh].0   ;result.lsb
                @@cont2:
1CC5 5A          dec  x
1CC6 26 DE       jnz  @@lop
1CC8 81          ret
                ;------------------
;:              ;:----------------- Timed Maintenance Events
                ;------------------
                main_func_timed_events:         ;maintenance stuff...
                 ;below Hertz-values are somewhat "nominal/intended" values,
                 ;in practice these frequencies are likely a good bit lower
                 ;(if the CPU is busy with below events or other mainloop stuff,
                 ;then this function will miss some timer2 IRQs, and thereby,
                 ;actually increment [main_1000hz_eventtimer] at a rate below
                 ;1000Hz)
                 ;(on the contrary, timer2 itself is a bit faster than 1000Hz:
                 ;running at around 1008Hz due to rounding)
                 ;- - -
1CC9 0F 4B 55    jz   [timer2_irq_flag].7,@@exit        ;-below only at 1000 Hz
1CCC 1F 4B       res  [timer2_irq_flag].7
1CCE 3C 60       inc  [main_1000hz_eventtimer]          ;-prescaler for events
                ;- - - -
1CD0 CD 25 6D    call event_1000hz_XXX_256Dh
1CD3 CD 26 3D    call event_1000hz_XXX_263Dh    ;... sense_GFS (speed)
1CD6 CD 27 66    call event_1000hz_XXX_2766h
1CD9 CD 27 71    call event_1000hz_test_timeout_1
                ;- - - -
1CDC 00 60 42    jnz  [main_1000hz_eventtimer].0,@@exit ;-below only at 500 Hz
                ;- - - -
1CDF CD 24 05    call event_500hz_sense_focus
1CE2 CD 24 86    call event_500hz_XXX_2486h
1CE5 CD 11 66    call event_500hz_watch_GFS_good_spindle_speed
1CE8 CD 1D 49    call event_500hz_test_timeout_2
1CEB CD 1D 22    call event_500hz_timeout_on_continous_leadout
                ;- - - -
1CEE 02 60 30    jnz  [main_1000hz_eventtimer].1,@@exit ;-below only at 250 Hz
                ;- - - -
1CF1 CD 1D 61    call event_250hz_decrease_useless_timer;-totally useless stuff
1CF4 CD 1D 79    call event_250hz_check_door            ;-door open/close
1CF7 CD 27 91    call event_250hz_XXX_2791h        ;... motor stop ?
                ;- - - -
1CFA 04 60 24    jnz  [main_1000hz_eventtimer].2,@@exit ;-below only at 125 Hz
                ;- - - -
1CFD CD 1E D2    call event_125hz_mech_tasks      ;... jump lists !!!
                ;- - - -
1D00 06 60 1E    jnz  [main_1000hz_eventtimer].3,@@exit ;-below only at 62.5 Hz
1D03 08 60 1B    jnz  [main_1000hz_eventtimer].4,@@exit ;-below only at 31.25 Hz
                ;- - - -
1D06 CD 23 97    call event_31hz_mech_timeouts
1D09 CD 25 BF    call event_31hz_transfer_debug_status  ;-debug/status info
                ;- - - -
1D0C 0A 60 12    jnz  [main_1000hz_eventtimer].5,@@exit ;-below only at 15.6 Hz
                ;- - - -
1D0F CD 23 62    call event_15hz_focus_timeout
1D12 CD 1E 0E    call event_15hz_seek_timeout
1D15 CD 1E 5D    call event_15hz_toc_timeout
1D18 CD 26 DE    call event_15hz_check_scex_timeout
1D1B CD 27 53    call event_15hz_near_target_period
1D1E CD 28 62    call event_15hz_focus_error_period
                ;- - - -
                @@exit:
1D21 81          ret
                ;------------------
                event_500hz_timeout_on_continous_leadout:
1D22 B6 5C       mov  a,[leadout_timeout_timer]
1D24 27 22       jz   @@exit  ;already zero
1D26 07 4C 1F    jz   [toc_flags].3,@@exit ;lead_out_reached
1D29 3A 5C       dec  [leadout_timeout_timer]
1D2B 26 1B       jnz  @@exit
                ;- - - -
                ;timer has decremented from 100 downto 0
                ;(ie. leadout was sensed for one hundred CONTINOUS 500hz units)
1D2D 17 4C       res  [toc_flags].3 ;lead_out_reached=false
1D2F 13 49       res  [49h].1
1D31 14 49       set  [49h].2
1D33 A6 01       mov  a,1h                                      ;\
1D35 C7 02 0D    mov  [drv_desired_session],a                   ;/
1D38 3F 67       mov  [toc_timeout],00h                         ;-
1D3A A6 05       mov  a,5h  ;bad num params ?                   ;\ERROR
1D3C CD 3C 33    call enqueue_int5_error_bit_a                  ;/
1D3F CD 29 12    call mark_read_seek_play_off_and_stopped       ;-
1D42 CD 42 BE    call whatever_XXX_42BEh                        ;-
1D45 CC 28 F7    jmp  fallback_to_session_1_and_manipulate_flags;-
                ;---
                @@exit:
1D48 81          ret
                ;------------------
                event_500hz_test_timeout_2:
1D49 B6 9E       mov  a,[test_timeout_2]        ;\
1D4B 27 13       jz   @@exit                    ;/
1D4D 0A 43 10    jnz  [43h].5,@@exit
1D50 0C 43 0D    jnz  [43h].6,@@exit
1D53 0E 43 0A    jnz  [43h].7,@@exit
1D56 3A 9E       dec  [test_timeout_2]          ;\
1D58 26 06       jnz  @@exit                    ;/
                ;- - - -
1D5A 18 46       set  [46h].4                   ;-
1D5C A6 1E       mov  a,1Eh  ;30 decimal        ;\
1D5E B7 78       mov  [test_timeout_1],a        ;/
                @@exit:
1D60 81          ret
                ;------------------
                event_250hz_decrease_useless_timer:
                 ;this decrements [useless_timer] down to zero, and does some
                 ;irrelevant stuff when reaching zero.
                 ;[useless_timer] isn't used anywhere outside of this function
                 ;so it is really totally useless.
1D61 B6 64       mov  a,[useless_timer]           ;exit if already zero
1D63 27 0D       jz   @@exit
1D65 3A 64       dec  [useless_timer]             ;decrement & exit if nonzero
1D67 26 09       jnz  @@exit
                ;- - - -
1D69 0C 40 04    jnz  [40h].6,@@blah   ;<--- test something, but no matter what, this part will just [useless_timer]=00h (which was already the case from above decrement anyways)
1D6C A6 32       mov  a,32h   ;50 decimal
1D6E B7 64       mov  [useless_timer],a   ;blah, will be overwritten below
                @@blah:
1D70 3F 64       mov  [useless_timer],00h
                ;- - - -
                @@exit:
1D72 81          ret
                ;------------------
                to_seek_next_track:  ;UNUSED!
1D73 CC 29 1D    jmp  seek_next_track
                ;---
                to_seek_prev_track_or_begin_of_curr_track:  ;UNUSED!
1D76 CC 29 2E    jmp  seek_prev_track_or_begin_of_curr_track
                ;------------------
                event_250hz_check_door:  ;check if door open/close
1D79 06 01 07    jnz  [io_portb].3,@@door_open     ;DOOR pin
1D7C B6 6D       mov  a,[disc_task]             ;\
1D7E A1 01       cmp  a,(1 shl dt_0_nodisk)     ; check if disc missing
1D80 27 6C       jz   erase_toc_and_seek_pos0   ;/
1D82 81          ret
                ;---
                @@door_open:
1D83 06 41 06    jnz  [41h].3,@@exit    ;--> test mode?
1D86 B6 6D       mov  a,[disc_task]             ;\
1D88 A1 01       cmp  a,(1 shl dt_0_nodisk)     ; check if disc missing
1D8A 26 01       jnz  @@do_mark_door_open       ;/  ;(mark open ONLY if
                @@exit:                             ;disc was present??)
1D8C 81          ret
                ;---
                @@do_mark_door_open:
1D8D 18 BC       set  [drv_stat].4 ;shell_open  ;-mark door open
1D8F B6 6D       mov  a,[disc_task]             ;\
1D91 A4 3C       and  a,dt_mask_value     ;XXX  ;
1D93 26 0C       jnz  @@cont1                   ;/
1D95 C6 02 0C    mov  a,[cmd_2nd_response_type] ;\
1D98 A1 00       cmp  a,0h                      ;
1D9A 26 05       jnz  @@cont1                   ;/
1D9C 0C 47 02    jnz  [47h].6,@@cont1 ;second response pending (INT2 or INT5)
1D9F 20 13       jr   @@cont_without_int5
                ;---
                @@cont1:
1DA1 07 45 08    jz   [45h].3,@@cont2
1DA4 1C 47       set  [47h].6      ;second response pending (INT2 or INT5)
1DA6 4F          mov  a,00h,slow                ;\
1DA7 C7 02 0C    mov  [cmd_2nd_response_type],a ;/
1DAA 20 08       jr   @@cont_without_int5
                ;---
                @@cont2:
1DAC 01 90 05    jz   [license_flags].0,@@cont_without_int5
1DAF A6 03       mov  a,3h  ;door become opened ;\INT5
1DB1 CD 3C 33    call enqueue_int5_error_bit_a  ;/
                ;- - - -
                @@cont_without_int5:
1DB4 A6 01       mov  a,(1 shl dt_0_nodisk)     ;\no disc
1DB6 B7 6D       mov  [disc_task],a             ;/
1DB8 CD 16 71    call force_loading_session_1   ;-
1DBB CD 42 BE    call whatever_XXX_42BEh        ;-
1DBE 17 41       res  [41h].3
1DC0 1F 40       res  [40h].7
1DC2 13 49       res  [49h].1
1DC4 15 49       res  [49h].2
1DC6 1D 40       res  [40h].6
1DC8 13 47       res  [47h].1
1DCA 11 47       res  [47h].0
1DCC 13 45       res  [45h].1
1DCE 1D 46       res  [46h].6  ;mark no_set_loc_pending
1DD0 15 4A       res  [gain_flag].2
1DD2 15 45       res  [45h].2
1DD4 17 45       res  [45h].3
1DD6 19 45       res  [45h].4 ;get_q_command = false
1DD8 4F          mov  a,00h,slow
1DD9 B7 90       mov  [license_flags],a         ;=00h
1DDB B7 91       mov  [toc_disc_type],a         ;=00h
1DDD B7 92       mov  [toc_atip],a              ;=00h
1DDF B7 63       mov  [63h],a                   ;=00h
1DE1 C7 02 0C    mov  [cmd_2nd_response_type],a ;=00h
1DE4 CD 28 F7    call fallback_to_session_1_and_manipulate_flags;-
1DE7 CD 29 16    call mark_read_seek_play_off                   ;-
1DEA CD 48 5D    call stop_scex_reading                         ;-
1DED 81          ret
                ;------------------
                erase_toc_and_seek_pos0:
1DEE 10 43       set  [43h].0
1DF0 12 43       set  [43h].1
1DF2 10 49       set  [49h].0
1DF4 17 41       res  [41h].3
1DF6 1D 44       res  [scex_flags].6
1DF8 A6 02       mov  a,(1 shl dt_1_stopped)    ;\
1DFA B7 6D       mov  [disc_task],a             ;/
1DFC CD 29 16    call mark_read_seek_play_off   ;-
1DFF CD 41 9B    call fill_toc_info_by_FFh      ;-
1E02 CD 41 F9    call init_clv_and_servo_coeff  ;-
1E05 CD 22 73    call select_normal_speed_mode  ;-
1E08 CD 11 3D    call seek_pos0                 ;-seek POS0
1E0B 3F 9D       mov  [focus_error_count],00h   ;-
1E0D 81          ret
                ;------------------
                event_15hz_seek_timeout:
1E0E 06 41 4B    jnz  [41h].3,@@exit                    ;-
1E11 B6 70       mov  a,[seek_timeout]                  ;\exit if already 0
1E13 27 47       jz   @@exit                            ;/
1E15 B6 6C       mov  a,[mech_task]                     ;\
1E17 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ; prevent seek timeout
1E19 27 04       jz   @@speed_shall_be_stable           ; during spin-up,
1E1B A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ; or during speed-change
1E1D 26 39       jnz  @@speed_not_stable                ;
                @@speed_shall_be_stable:                ;/
1E1F 3A 70       dec  [seek_timeout]                    ;\decrease timeout
1E21 26 39       jnz  @@exit                            ;/
                ;- - - timeout...
1E23 02 43 1D    jnz  [43h].1,@@error
1E26 0A 6D 03    jnz  [disc_task].dt_5_seek,@@seeking
1E29 07 6D 30    jz   [disc_task].dt_3_whatever,@@exit
                ;- - - -
                @@seeking:
1E2C 00 6A 1B    jnz  [datamode_flag].0,@@non_audio_err
1E2F A6 0E       mov  a,0Eh                     ;\
1E31 B7 6B       mov  [seek_task],a             ;/
1E33 3F 7D       mov  [distance_mm],00h     ;MM ;\
1E35 3F 7E       mov  [distance_ss],00h     ;SS ;
1E37 3F 7F       mov  [distance_ff],00h     ;FF ;/
1E39 11 42       res  [42h].0
1E3B 17 42       res  [42h].3 ;sled direction
1E3D CD 42 33    call mute_or_demute_cd_da      ;-
1E40 CC 18 17    jmp  do_medium_fine_search     ;-
                ;---
                @@error:
1E43 00 6A 04    jnz  [datamode_flag].0,@@non_audio_err ;\
1E46 A6 06       mov  a,6h  ;invalid command ?          ;
1E48 20 02       jr   @@this_error                      ;
                ;---                                    ; INT5
                @@non_audio_err:                        ;
1E4A A6 02       mov  a,2h  ;seek failed                ;
                @@this_error:                           ;
1E4C CD 3C 33    call enqueue_int5_error_bit_a          ;/
                ;- - - -
1E4F CD 29 12    call mark_read_seek_play_off_and_stopped       ;-
1E52 CD 42 BE    call whatever_XXX_42BEh                        ;-
1E55 CC 28 F7    jmp  fallback_to_session_1_and_manipulate_flags;-
                ;---
                @@speed_not_stable:
1E58 A6 7D       mov  a,7Dh ;125 decimal        ;\force reload=max during
1E5A B7 70       mov  [seek_timeout],a          ;/spin-up or speed-change
                @@exit:
1E5C 81          ret
                ;------------------
                event_15hz_toc_timeout:
1E5D B6 67       mov  a,[toc_timeout]           ;\
1E5F 27 36       jz   @@exit                    ;/
1E61 04 45 17    jnz  [45h].2,@@want_lead_in  ;--> ReadTOC or GetQ
                ;- - -
1E64 03 49 30    jz   [49h].1,@@exit            ;-
1E67 3A 67       dec  [toc_timeout]             ;\
1E69 26 2C       jnz  @@exit                    ;/
1E6B 14 49       set  [49h].2                   ;-
1E6D A6 06       mov  a,6h  ;invalid command ?                  ;\ERROR
1E6F CD 3C 33    call enqueue_int5_error_bit_a                  ;/
1E72 CD 29 12    call mark_read_seek_play_off_and_stopped       ;-
1E75 CD 42 BE    call whatever_XXX_42BEh                        ;-
1E78 CC 28 F7    jmp  fallback_to_session_1_and_manipulate_flags;-
                ;---
                @@want_lead_in:
1E7B B6 51       mov  a,[subq_rx_buf+1] ;Track                  ;\
1E7D 26 18       jnz  @@exit                                    ;/
1E7F 3A 67       dec  [toc_timeout]                             ;\
1E81 26 14       jnz  @@exit                                    ;/
1E83 4F          mov  a,00h,slow                                ;\
1E84 C7 02 0C    mov  [cmd_2nd_response_type],a                 ;/
1E87 15 45       res  [45h].2
1E89 19 45       res  [45h].4 ;get_q_command = false
1E8B A6 06       mov  a,6h  ;invalid command ?                  ;\ERROR
1E8D CD 3C 33    call enqueue_int5_error_bit_a                  ;/
1E90 C6 01 C6    mov  a,[toc_first_track_no]                    ;\
1E93 5F          mov  x,00h,slow                                ; seek 1st track
1E94 CD 29 58    call seek_track_a                              ;/
                @@exit:
1E97 81          ret
                ;------------------
                handle_get_q:
1E98 C6 02 00    mov  a,[subq_rx_copy+0]        ;\
1E9B A4 0F       and  a,0Fh  ;ADR               ; verify ADR (or ADR/Control)
1E9D C1 01 E1    cmp  a,[cmd_param_buf+1]       ;
1EA0 26 1C       jnz  @@exit                    ;/
1EA2 C6 02 02    mov  a,[subq_rx_copy+2]        ;\
1EA5 C1 01 E2    cmp  a,[cmd_param_buf+2]       ; verify Point
1EA8 26 14       jnz  @@exit                    ;/
1EAA 3F 67       mov  [toc_timeout],00h         ;-
1EAC 15 45       res  [45h].2                   ;-
1EAE CD 3B FB    call cmd_response_begin        ;-
1EB1 CD 1E BF    call @@send_sub_q_response     ;-
1EB4 CD 40 BD    call fire_irq_2                ;-
1EB7 C6 01 C6    mov  a,[toc_first_track_no]    ;\
1EBA 5F          mov  x,00h,slow                ;
1EBB CC 29 58    jmp  seek_track_a              ;/
                ;---
                @@exit:
1EBE 81          ret
                ;--- --- ----------
                @@send_sub_q_response:
1EBF 19 45       res  [45h].4 ;get_q_command = false (aka acknowledge it)
1EC1 AE 17       mov  x,idx_17h_w_reply_to_psx     ;... XXX subq to psx ??? !!!
1EC3 BF 04       mov  [io_porte_idx],x
1EC5 5F          mov  x,00h,slow
                @@lop:
1EC6 D6 02 00    mov  a,[subq_rx_copy+x]
1EC9 CD 40 FB    call write_data_bus
1ECC 5C          inc  x
1ECD A3 0B       cmp  x,0Bh           ;??? (writes index 0..0Ah), =11 bytes ?
1ECF 26 F5       jnz  @@lop           ;    ie including peak LSB (but excluding peak MSB)
1ED1 81          ret                  ;    BUT, how CAN there be peak in LEAD-IN at all ???
                ;------------------
;:              ;:----------------- Mech Tasks ...
                ;------------------
                event_125hz_mech_tasks:
1ED2 B6 6C       mov  a,[mech_task]
1ED4 27 4B       jz   @@exit  ;mt_00h_stopped
1ED6 B6 61       mov  a,[mech_offhold]
1ED8 27 0E       jz   @@to_mech_post   ;when [mech_offhold] already zero   POST
1EDA B6 6C       mov  a,[mech_task]  ;mt_xxx_value
1EDC 4A          dec  a
1EDD AE 03       mov  x,3h
1EDF 42          mul  x,a
1EE0 97          mov  x,a
1EE1 3A 61       dec  [mech_offhold]
1EE3 26 3D       jnz  @@mech_pre        ;when [mech_offhold] still nonzero  PRE
                ;- - -
1EE5 DC 1E EB    jmp  @@mech_kick_jump_list+x       ;when [mech_offhold] became zero    KICK
                ;---
                @@to_mech_post:
1EE8 CC 1F 5B    jmp  @@mech_post
                ;---                            ;KICK
                @@mech_kick_jump_list:          ;mt_00h_stopped
1EEB CC 1F 88    jmp  mech_kick_auto_focus_on   ;mt_01h_1st_autofocus_on  ;\try
1EEE CC 1F C3    jmp  mech_kick_auto_focus_off  ;mt_02h_1st_autofocus_off ;/
1EF1 CC 1F 88    jmp  mech_kick_auto_focus_on   ;mt_03h_2nd_autofocus_on  ;\re-
1EF4 CC 1F C3    jmp  mech_kick_auto_focus_off  ;mt_04h_2nd_autofocus_off ;/try
1EF7 CC 1F D2    jmp  mech_kick_auto_focus_fail ;mt_05h_autofocus_failed  ;-fail
1EFA CC 1F F2    jmp  mech_kick_auto_focus_okay ;mt_06h_autofocus_okay    ;-okay
1EFD CC 20 24    jmp  mech_kick_already_adjusted;mt_07h_already_adjusted
1F00 CC 20 CA    jmp  mech_kick_adj_balance     ;mt_08h_adj_balance
1F03 CC 21 2B    jmp  mech_kick_adj_gain        ;mt_09h_adj_gain
1F06 CC 1F 21    jmp  @@exit                    ;mt_0Ah_normal_speed_ok    ;\
1F09 CC 22 2A    jmp  mech_kick_double_spd_entry;mt_0Bh_double_speed_entry ; core
1F0C CC 1F 21    jmp  @@exit                    ;mt_0Ch_double_speed_ok    ;
1F0F CC 22 73    jmp  mech_kick_normal_spd_entry;mt_0Dh_normal_speed_entry ;/
1F12 CC 1F 21    jmp  @@exit                    ;mt_0Eh_unused
1F15 CC 1F 21    jmp  @@exit                    ;mt_0Fh_unused
1F18 CC 23 26    jmp  mech_kick_stop_part_1     ;mt_10h_stop_part_1  ;\
1F1B CC 23 3B    jmp  mech_kick_stop_part_2     ;mt_11h_stop_part_2  ; motor off
1F1E CC 23 4F    jmp  mech_kick_stop_part_3     ;mt_12h_stop_part_3  ;/
                ;---
                @@exit:
1F21 81          ret
                ;---
                @@mech_pre:
1F22 DC 1F 25    jmp  @@mech_pre_jump_list+x
                ;---                            ;PRE
                @@mech_pre_jump_list:           ;mt_00h_stopped
1F25 CC 1F 21    jmp  @@exit                    ;mt_01h_1st_autofocus_on  ;\try
1F28 CC 1F 99    jmp  mech_pre_auto_focus_off   ;mt_02h_1st_autofocus_off ;/
1F2B CC 1F 21    jmp  @@exit                    ;mt_03h_2nd_autofocus_on  ;\re-
1F2E CC 1F 99    jmp  mech_pre_auto_focus_off   ;mt_04h_2nd_autofocus_off ;/try
1F31 CC 1F 21    jmp  @@exit                    ;mt_05h_autofocus_failed  ;-fail
1F34 CC 1F 21    jmp  @@exit                    ;mt_06h_autofocus_okay
1F37 CC 20 26    jmp  mech_pre_already_adjusted ;mt_07h_already_adjusted
1F3A CC 20 7E    jmp  mech_pre_adj_balance      ;mt_08h_adj_balance
1F3D CC 20 EB    jmp  mech_pre_adj_gain         ;mt_09h_adj_gain
1F40 CC 1F 21    jmp  @@exit                    ;mt_0Ah_normal_speed_ok    ;\
1F43 CC 23 06    jmp  mech_pre_double_spd_entry ;mt_0Bh_double_speed_entry ; core
1F46 CC 1F 21    jmp  @@exit                    ;mt_0Ch_double_speed_ok    ;
1F49 CC 22 E8    jmp  mech_pre_normal_spd_entry ;mt_0Dh_normal_speed_entry ;/
1F4C CC 1F 21    jmp  @@exit                    ;mt_0Eh_unused
1F4F CC 1F 21    jmp  @@exit                    ;mt_0Fh_unused
1F52 CC 23 26    jmp  mech_pre_stop_part_1      ;mt_10h_stop_part_1  ;\
1F55 CC 23 32    jmp  mech_pre_stop_part_2      ;mt_11h_stop_part_2  ; motor off
1F58 CC 1F 21    jmp  @@exit                    ;mt_12h_stop_part_3  ;/
                ;---
                @@mech_post:
1F5B B6 6C       mov  a,[mech_task]                  ;POST
1F5D A1 07       cmp  a,7h                           ;\mt_07h_already_adjusted
1F5F 27 17       jz   @@to_mech_post_already_adjusted;/
1F61 A1 0A       cmp  a,0Ah                          ;\mt_0Ah_normal_speed_ok
1F63 27 16       jz   @@to_mech_post_normal_spd_ok   ;/
1F65 A1 0B       cmp  a,0Bh                          ;\mt_0Bh_double_speed_entry
1F67 27 18       jz   @@to_mech_post_double_spd_entry;/
1F69 A1 0C       cmp  a,0Ch                          ;\mt_0Ch_double_speed_ok
1F6B 27 11       jz   @@to_mech_post_double_spd_ok   ;/
1F6D A1 0D       cmp  a,0Dh                          ;\mt_0Dh_normal_speed_entry
1F6F 27 13       jz   @@to_mech_post_normal_spd_entry;/
1F71 A1 10       cmp  a,10h                          ;\mt_10h_stop_part_1
1F73 26 AC       jnz  @@exit   ;---> is other        ;
1F75 CC 23 26    jmp  mech_post_stop_part_1          ;/  ;---> is_10h
                ;---
1F78 CC 20 26   @@to_mech_post_already_adjusted: jmp  mech_post_already_adjusted
1F7B CC 22 D3   @@to_mech_post_normal_spd_ok:    jmp  mech_post_normal_spd_ok
1F7E CC 22 BE   @@to_mech_post_double_spd_ok:    jmp  mech_post_double_spd_ok
1F81 CC 23 06   @@to_mech_post_double_spd_entry: jmp  mech_post_double_spd_entry
1F84 CC 22 E8   @@to_mech_post_normal_spd_entry: jmp  mech_post_normal_spd_entry
                ;------------------
                ;UNUSED!
1F87 81          ret
                ;------------------
                mech_kick_auto_focus_on:
                 ;*** called on: mt_01h_1st_autofocus_on (try)
                 ;*** called on: mt_03h_2nd_autofocus_on (retry)
1F88 A6 96       mov  a,96h  ;150 decimal       ;\
1F8A B7 61       mov  [mech_offhold],a          ;/
1F8C CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
1F8F A6 47       mov  a,47h  ;cx(4700)     ;msb ;\CXD2510Q Signal Processor
1F91 3F 88       mov  [scratch_cxd_mid],00h;mid ; AutoSeqFocusOn
1F93 CD 43 2B    call send_16bit_to_cxd2510q    ;/
                 ;below increment [mech_task] results in:       ;\
                 ;mt_02h_1st_autofocus_off (try)                ; next task
                 ;mt_04h_2nd_autofocus_off (retry)              ;
1F96 3C 6C       inc  [mech_task]                               ;/
1F98 81          ret
                ;------------------
                mech_pre_auto_focus_off:
                 ;*** called on: mt_02h_1st_autofocus_off (try)
                 ;*** called on: mt_04h_2nd_autofocus_off (retry)
1F99 A6 40       mov  a,40h ;sense(40) xbusy    ;\
1F9B CD 43 41    call cxd_send_8bit_fragment_a  ; CXD2510Q Signal Processor
1F9E A6 7D       mov  a,7Dh ;125 decimal ;\delay; test if AutoSeqBusy (low)
1FA0 CD 46 E6    call delay_a            ;/     ; (via SENSE=XBUSY)
1FA3 0F 01 1C    jz   [io_portb].7,@@exit ;busy ;/
                ;- - - AutoSeqReady...
1FA6 CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
1FA9 A6 E8       mov  a,0E8h  ;cx(E8) ;forward  ;\CXD2510Q Signal Processor
1FAB CD 43 33    call send_8bit_to_cxd2510q     ;/SpindleMotorForward
1FAE A6 20       mov  a,20h                     ;\
1FB0 B7 73       mov  [focus_quality],a         ;/
1FB2 A6 14       mov  a,14h   ;20 decimal       ;\
1FB4 B7 61       mov  [mech_offhold],a          ;/
1FB6 A6 FA       mov  a,0FAh  ;250 decimal      ;\
1FB8 B7 74       mov  [mech_timeout_2],a        ;/
1FBA A6 7D       mov  a,7Dh   ;125 decimal      ;\
1FBC B7 71       mov  [mech_timeout_1],a        ;/
1FBE A6 06       mov  a,6h  ;mt_06h_autofocus_okay      ;\
1FC0 B7 6C       mov  [mech_task],a                     ;/
                @@exit:
1FC2 81          ret
                ;------------------
                mech_kick_auto_focus_off:
                 ;*** called on: mt_02h_1st_autofocus_off (try)
                 ;*** called on: mt_04h_2nd_autofocus_off (retry)
1FC3 CD 41 D0    call cancel_auto_sequence      ;-
1FC6 A6 50       mov  a,50h  ;80 decimal        ;\
1FC8 B7 61       mov  [mech_offhold],a          ;/
1FCA A6 02       mov  a,02h  ;cx(02)            ;\CXA1782BR Servo Amplifier
1FCC CD 43 33    call send_8bit_to_cxa1782br    ;/FocusSearchVoltageFalling
                 ;below increment [mech_task] results in:       ;\
                 ;mt_03h_2nd_autofocus_on (retry)               ; next task
                 ;mt_05h_autofocus_failed (give up)             ;
1FCF 3C 6C       inc  [mech_task]                               ;/
1FD1 81          ret
                ;------------------
                mech_kick_auto_focus_fail:
1FD2 04 48 03    jnz  [48h].2,@@cont                                    ;\
1FD5 03 BC 06    jz   [drv_stat].1,stop_and_motor_off ;spindle_motor    ;
                @@cont:                                                 ;/
1FD8 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
1FDB CC 28 E0    jmp  force_motor_off
                ;------------------
                stop_and_motor_off:
1FDE 3F 6C       mov  [mech_task],00h  ;mt_00h_stopped
1FE0 CD 42 05    call stop_spindle_motor
1FE3 1C 40       set  [40h].6
1FE5 A6 41       mov  a,41h
1FE7 B7 90       mov  [license_flags],a
1FE9 1F 40       res  [40h].7
1FEB 13 49       res  [49h].1
1FED 15 49       res  [49h].2
1FEF CC 28 E0    jmp  force_motor_off
                ;------------------
                mech_kick_auto_focus_okay:
                 ;*** called on: mt_06h_autofocus_okay
1FF2 A6 20       mov  a,20h  ;32 decimal        ;\
1FF4 B7 61       mov  [mech_offhold],a          ;/
1FF6 CD 42 18    call send_08h_to_cxa1782br  ;cx(08) ;FocusServoOn
1FF9 04 4A 25    jnz  [gain_flag].2,@@already_adjusted ;---> GAIN ALREADY ADJUSTED ---> STRAIGHT TO START READING ?
                ;- - - -
1FFC CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
1FFF A6 EE       mov  a,0EEh ;cx(EE)            ;\CXD2510Q Signal Processor
2001 CD 43 33    call send_8bit_to_cxd2510q     ;/RoughServo
2004 A6 20       mov  a,20h  ;cx(20)            ;\CXA1782BR Servo Amplifier
2006 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
2009 A6 19       mov  a,19h  ;cx(19)            ;\CXA1782BR Servo Amplifier
200B CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainAndSledKickHeight2
200E CD 41 E2    call set_initial_gain_balance_adj_inj
2011 A6 01       mov  a,1h                      ;\
2013 C7 01 EB    mov  [adj_dec_offhold],a       ;/
2016 A6 01       mov  a,1h                      ;\
2018 C7 01 EC    mov  [adj_inc_offhold],a       ;/
201B A6 96       mov  a,96h  ;150 decimal       ;\
201D B7 61       mov  [mech_offhold],a          ;/
201F 3C 6C       inc  [mech_task]               ;-twice (with       ;\
                @@already_adjusted:                    ;below)      ;
2021 3C 6C       inc  [mech_task]               ;-once              ;
                 ;above increment(s) will result in:                ;
                 ;mt_07h_already_adjusted (when incremented once)   ;
                 ;mt_08h_adj_balance      (when incremented twice)  ;/
2023 81          ret
                ;------------------
                mech_kick_already_adjusted:   ;start_reading...
                 ;*** called on: mt_07h_already_adjusted
2024 1D 41       res  [41h].6  ;initially Normal CD, 12cm
                ;- - - - - - ------
                mech_pre_already_adjusted:
                mech_post_already_adjusted:
                 ;*** called on: mt_07h_already_adjusted
2026 04 4A 01    jnz  [gain_flag].2,@@cont
2029 81          ret
                ;---
                @@cont:
202A 01 6A 07    jz   [datamode_flag].0,@@audio         ;\
202D 18 B7       set  [curr_idx_07h_w_chip_control].4   ;
202F CD 40 32    call enter_cdrom_data_mode             ;
2032 20 05       jr   @@this_mode                       ; enter data/audio mode
                ;---                                    ;
                @@audio:                                ;
2034 19 B7       res  [curr_idx_07h_w_chip_control].4   ;
2036 CD 40 73    call enter_cdda_audio_mode             ;
                @@this_mode:                            ;/
2039 A6 0A       mov  a,0Ah  ;mt_0Ah_normal_speed_ok    ;\
203B 0F BB 0E    jz   [drv_mode].7,@@this_speed  ;speed ;
203E 0C 42 3C    jnz  [42h].6,@@exit                    ;
2041 0A 42 39    jnz  [42h].5,@@exit                    ; speed
2044 01 90 36    jz   [license_flags].0,@@exit          ;
2047 CD 22 2A    call select_double_speed_mode          ;
204A A6 0B       mov  a,0Bh  ;mt_0Bh_double_speed_entry ;
                @@this_speed:                           ;
204C B7 6C       mov  [mech_task],a                     ;/
204E C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\CXA1782BR Servo Amplifier
2051 AB 30       add  a,30h  ;cx(30+n)          ; BalanceAdjust
2053 CD 43 33    call send_8bit_to_cxa1782br    ;/
2056 C6 01 EA    mov  a,[curr_cx38_gain_adj]    ;\CXA1782BR Servo Amplifier
2059 AB 38       add  a,38h  ;cx(38+n)          ; GainAdjust
205B CD 43 33    call send_8bit_to_cxa1782br    ;/
205E A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
2060 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
2063 1A 43       set  [43h].5                   ;-
2065 A6 64       mov  a,64h  ;100 decimal       ;\
2067 B7 69       mov  [69h],a                   ;/
2069 CD 43 12    call get_auto_or_rough ;cx(Ex) ;\CXD2510Q Signal Processor
206C CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal or RoughServo
206F A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
2071 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
2074 07 41 06    jz   [41h].3,@@exit
2077 0D 44 03    jz   [scex_flags].6,@@exit
207A CD 48 40    call start_scex_reading_and_reset_counters
                @@exit:
207D 81          ret
                ;------------------
                mech_pre_adj_balance:
                 ;*** called on: mt_08h_adj_balance
207E CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
2081 A6 19       mov  a,19h  ;cx(19)            ;\CXA1782BR Servo Amplifier
2083 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainAndSledKickHeight2
                @@lop:                                          ;\
2086 CD 21 AA    call sense_balance_adjust_2000h_of_4000h ;\    ;
2089 CD 27 9F    call memorize_sense_balance_result       ;     ;
208C 08 40 09    jnz  [40h].4,@@increase                  ;/    ;
208F C6 01 EB    mov  a,[adj_dec_offhold]       ;\              ;
2092 4A          dec  a                         ; pre-decrease  ;
2093 C7 01 EB    mov  [adj_dec_offhold],a       ; offhold ?     ;
2096 27 29       jz   @@decrement_balance       ;/  ;<-- DEC    ;
                @@increase:                                     ;
2098 C6 01 EC    mov  a,[adj_inc_offhold]       ;\              ;
209B 4A          dec  a                         ; pre-increase  ;
209C C7 01 EC    mov  [adj_inc_offhold],a       ; offhold ?     ;
209F 27 02       jz   @@increment_balance       ;/  ;<-- INC    ;
20A1 20 E3       jr   @@lop                                     ;/
                ;---
                @@increment_balance:
20A3 C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\
20A6 A1 08       cmp  a,8h  ;BUG: should be 7 (so below increment can't get bigger than 7)
20A8 24 20       jnc  @@already_max_balance     ;/
20AA C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\
20AD 4C          inc  a                         ; CXA1782BR Servo Amplifier
20AE C7 01 E9    mov  [curr_cx30_balance_adj],a ; BalanceAdjust+1
20B1 AB 30       add  a,30h  ;cx(30+n)          ;
20B3 CD 43 33    call send_8bit_to_cxa1782br    ;/
20B6 A6 01       mov  a,1h                      ;\
20B8 C7 01 EB    mov  [adj_dec_offhold],a       ;/
20BB A6 01       mov  a,1h                      ;\
20BD C7 01 EC    mov  [adj_inc_offhold],a       ;/
20C0 81          ret
                ;---
                @@decrement_balance:
20C1 C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\
20C4 27 04       jz   @@already_min_balance     ; decrease balance
20C6 4A          dec  a                         ; (unless already zero)
20C7 C7 01 E9    mov  [curr_cx30_balance_adj],a ;
                @@already_min_balance:          ;/
                @@already_max_balance:
                ;- - - - - --------
                mech_kick_adj_balance:
                 ;*** called on: mt_08h_adj_balance
20CA CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
20CD C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\CXA1782BR Servo Amplifier
20D0 AB 30       add  a,30h  ;cx(30+n)          ; BalanceAdjust
20D2 CD 43 33    call send_8bit_to_cxa1782br    ;/
20D5 3C 6C       inc  [mech_task]  ;=mt_09h_adj_gain
20D7 A6 96       mov  a,96h  ;150 decimal       ;\
20D9 B7 61       mov  [mech_offhold],a          ;/
20DB A6 00       mov  a,0h                      ;\
20DD C7 01 EA    mov  [curr_cx38_gain_adj],a    ;/
20E0 A6 01       mov  a,1h                      ;\
20E2 C7 01 EB    mov  [adj_dec_offhold],a       ;/
20E5 A6 01       mov  a,1h                      ;\
20E7 C7 01 EC    mov  [adj_inc_offhold],a       ;/
20EA 81          ret
                ;------------------
                mech_pre_adj_gain:
                 ;*** called on: mt_09h_adj_gain
20EB CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
20EE A6 19       mov  a,19h  ;cx(19)            ;\CXA1782BR Servo Amplifier
20F0 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainAndSledKickHeight2
                @@lop:                                          ;\
20F3 CD 21 E8    call sense_gain_adjust_80h_of_800h     ;\      ;
20F6 09 40 09    jz   [40h].4,@@increase                ;/      ;
20F9 C6 01 EB    mov  a,[adj_dec_offhold]       ;\              ;
20FC 4A          dec  a                         ; pre-keep      ;
20FD C7 01 EB    mov  [adj_dec_offhold],a       ; offhold       ;
2100 27 29       jz   mech_kick_adj_gain_inj    ;/  ;<-- KEEP   ;
                @@increase:                                     ;
2102 C6 01 EC    mov  a,[adj_inc_offhold]       ;\              ;
2105 4A          dec  a                         ; pre-increase  ;
2106 C7 01 EC    mov  [adj_inc_offhold],a       ; offhold       ;
2109 27 02       jz   @@increase_gain           ;/  ;<-- INC    ;
210B 20 E6       jr   @@lop                                     ;/
                ;---
                @@increase_gain:
210D C6 01 EA    mov  a,[curr_cx38_gain_adj]
2110 A1 08       cmp  a,8h  ;BUG: should be 7 (so below increment can't get bigger than 7)
2112 24 17       jnc  mech_kick_adj_gain_inj
2114 C6 01 EA    mov  a,[curr_cx38_gain_adj]    ;\
2117 4C          inc  a                         ; CXA1782BR Servo Amplifier
2118 C7 01 EA    mov  [curr_cx38_gain_adj],a    ; GainAdjust+1
211B AB 38       add  a,38h  ;cx(38+n)          ;
211D CD 43 33    call send_8bit_to_cxa1782br    ;/
2120 A6 01       mov  a,1h                      ;\
2122 C7 01 EB    mov  [adj_dec_offhold],a       ;/
2125 A6 01       mov  a,1h                      ;\
2127 C7 01 EC    mov  [adj_inc_offhold],a       ;/
212A 81          ret
                ;--- --- --- ------
                mech_kick_adj_gain:     ;<-- called on: mt_09h_adj_gain
                mech_kick_adj_gain_inj: ;<-- called from elsewhere, too
212B C6 01 EA    mov  a,[curr_cx38_gain_adj]    ;\CXA1782BR Servo Amplifier
212E AB 38       add  a,38h  ;cx(38+n)          ; GainAdjust
2130 CD 43 33    call send_8bit_to_cxa1782br    ;/
2133 14 4A       set  [gain_flag].2             ;-
2135 CD 43 12    call get_auto_or_rough ;cx(Ex) ;\CXD2510Q Signal Processor
2138 CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal or RoughServo
213B A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
213D CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
2140 1A 43       set  [43h].5                   ;-
2142 A6 64       mov  a,64h  ;100 decimal       ;\
2144 B7 69       mov  [69h],a                   ;/
2146 A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
2148 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
214B CD 42 18    call send_08h_to_cxa1782br  ;cx(08) ;FocusServoOn
214E A6 0A       mov  a,0Ah  ;mt_0Ah_normal_speed_ok    ;\
2150 B7 6C       mov  [mech_task],a                     ;/
2152 12 90       set  [license_flags].1     ;-  ;\
2154 A6 4E       mov  a,4Eh                 ;\  ; start SCEx reading
2156 B7 75       mov  [boot_scex_timeout],a ;/  ;
2158 CD 48 29    call start_scex_reading    ;-  ;/
215B 81          ret
                ;------------------
                whatever_unused_215Ch:  ;UNUSED!
215C 19 40       res  [40h].4
215E 11 4A       res  [gain_flag].0
2160 A6 7E       mov  a,7Eh   ;126 decimal, timeout for second wait
2162 B7 88       mov  [88h],a
2164 A6 FF       mov  a,0FFh  ;255 decimal, timeout for initial wait
2166 B7 8F       mov  [8Fh],a
                ;- - -
2168 0D 01 0B    jz   [io_portb].6,@@want_low_as_1st_transition ;COUT pin ;-initial level
                @@lop1:                         ;\              ;\
216B 3A 8F       dec  [8Fh]                     ;               ;
216D 27 2A       jz   @@timeout                 ;               ; wait until
216F 0C 01 F9    jnz  [io_portb].6,@@lop1       ;/    ;COUT pin ; initial level
2172 13 4A       res  [gain_flag].1                             ; changes
2174 20 09       jr   @@got_1st_transition                      ; (via EITHER
                ;---                                            ; one of the
                @@want_low_as_1st_transition:                   ; two loops)
                @@lop2:                         ;\              ;
2176 3A 8F       dec  [8Fh]                     ;               ;
2178 27 1F       jz   @@timeout                 ;               ;
217A 0D 01 F9    jz   [io_portb].6,@@lop2       ;/    ;COUT pin ;
217D 12 4A       set  [gain_flag].1                             ;
                @@got_1st_transition:                           ;/
                ;- - -
                @@lop3:
217F 03 4A 09    jz   [gain_flag].1,@@want_high_as_2nd_transition ;\
2182 0D 01 0F    jz   [io_portb].6,@@got_2nd_transition ;COUT pin ;
2185 3A 88       dec  [88h]                                       ; wait until
2187 27 10       jz   @@timeout                                   ; level
2189 20 F4       jr   @@lop3                                      ; changes
                ;---                                              ; again
                @@want_high_as_2nd_transition:                    ;
218B 0C 01 06    jnz  [io_portb].6,@@got_2nd_transition ;COUT pin ;
218E 3A 88       dec  [88h]                                       ;
2190 27 07       jz   @@timeout                                   ;
2192 20 EB       jr   @@lop3                                      ;/
                ;---
                @@got_2nd_transition:
2194 18 40       set  [40h].4
2196 10 4A       set  [gain_flag].0
                @@exit:
2198 81          ret
                ;---
                @@timeout:
2199 B6 61       mov  a,[mech_offhold]
219B A1 01       cmp  a,1h
219D 26 F9       jnz  @@exit
                ;- - -
219F A6 04       mov  a,4h
21A1 C7 01 E9    mov  [curr_cx30_balance_adj],a
21A4 C7 01 EA    mov  [curr_cx38_gain_adj],a
21A7 CC 21 2B    jmp  mech_kick_adj_gain_inj
                ;------------------
                sense_balance_adjust_2000h_of_4000h:
                 ;note: same as 21E8/27EC,
                 ;but with diff. cx(3) and diff. counters
21AA 19 40       res  [40h].4                   ;-initially result=0
21AC A6 40       mov  a,40h                     ;\
21AE B7 88       mov  [88h],a   ;timeout.msb    ; 4000h ;total/timeout
21B0 3F 89       mov  [89h],00h ;timeout.lsb    ;/
21B2 A6 20       mov  a,20h                     ;\
21B4 B7 8A       mov  [8Ah],a   ;counter.msb    ; 2000h ;wanted/boundary
21B6 3F 8B       mov  [8Bh],00h ;counter.lsb    ;/
21B8 C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\CXA1782BR Servo Amplifier
21BB AB 30       add  a,30h ;cx(30+n),sense(30) ; BalanceAdjust
21BD CD 43 33    call send_8bit_to_cxa1782br    ;/
                @@lop:                                          ;\
21C0 0F 01 10    jz   [io_portb].7,@@next  ;SENSE pin           ;
21C3 B6 8B       mov  a,[8Bh] ;counter.lsb      ;\              ;
21C5 26 0A       jnz  @@keep_counter_msb        ; when SENSE=1, ;
21C7 3A 8B       dec  [8Bh]   ;counter.lsb      ; decrease      ;
21C9 B6 8A       mov  a,[8Ah] ;counter.msb      ; counter until ;
21CB 27 18       jz   @@reached_boundary        ; reaching the  ;
21CD 3A 8A       dec  [8Ah]   ;counter.msb      ; wanted limit  ;
21CF 20 02       jr   @@next                    ;               ;
                ;---                            ;               ;
                @@keep_counter_msb:             ;               ;
21D1 3A 8B       dec  [8Bh]   ;counter.lsb      ;               ;
                @@next:                         ;/              ;
                ;- - - - - -                                    ;
21D3 B6 89       mov  a,[89h] ;timeout.lsb      ;\              ;
21D5 26 0A       jnz  @@keep_timeout_msb        ;               ;
21D7 3A 89       dec  [89h]   ;timeout.lsb      ; loop more,    ;
21D9 B6 88       mov  a,[88h] ;timeout.msb      ; until timeout ;
21DB 27 0A       jz   @@exit  ;--> timeout/exit ;               ;
21DD 3A 88       dec  [88h]   ;timeout.msb      ;               ;
21DF 20 DF       jr   @@lop           ;--> lop  ;               ;
                ;---                            ;               ;
                @@keep_timeout_msb:             ;               ;
21E1 3A 89       dec  [89h]   ;timeout.lsb      ;               ;
21E3 20 DB       jr   @@lop           ;--> lop  ;/              ;/
                ;---
                @@reached_boundary:
21E5 18 40       set  [40h].4                   ;-result=1 (reached boundary)
                @@exit:
21E7 81          ret
                ;------------------
                sense_gain_adjust_80h_of_800h:
                 ;note: same as 21AA/27EC,
                 ;but with diff. cx(3) and diff. counters
21E8 19 40       res  [40h].4                   ;-initially result=0
21EA A6 08       mov  a,8h                      ;\
21EC B7 88       mov  [88h],a ;timeout.msb      ; 0800h ;total/timeout
21EE A6 00       mov  a,00h                     ;
21F0 B7 89       mov  [89h],a ;timeout.lsb      ;/
21F2 A6 00       mov  a,0h                      ;\
21F4 B7 8A       mov  [8Ah],a ;counter.msb      ; 0080h ;wanted/boundary
21F6 A6 80       mov  a,80h                     ;
21F8 B7 8B       mov  [8Bh],a ;counter.lsb      ;/
21FA C6 01 EA    mov  a,[curr_cx38_gain_adj]    ;\CXA1782BR Servo Amplifier
21FD AB 38       add  a,38h ;cx(38+n),sense(38) ; GainAdjust
21FF CD 43 33    call send_8bit_to_cxa1782br    ;/
                @@lop:                                          ;\
2202 0F 01 10    jz   [io_portb].7,@@next  ;SENSE pin           ;
2205 B6 8B       mov  a,[8Bh] ;counter.lsb      ;\              ;
2207 26 0A       jnz  @@keep_counter_msb        ; when SENSE=1, ;
2209 3A 8B       dec  [8Bh]   ;counter.lsb      ; decrease      ;
220B B6 8A       mov  a,[8Ah] ;counter.msb      ; counter until ;
220D 27 18       jz   @@reached_boundary        ; reaching the  ;
220F 3A 8A       dec  [8Ah]   ;counter.msb      ; wanted limit  ;
2211 20 02       jr   @@next                    ;               ;
                ;---                            ;               ;
                @@keep_counter_msb:             ;               ;
2213 3A 8B       dec  [8Bh]   ;counter.lsb      ;               ;
                @@next:                         ;/              ;
                ;- - - - - -                                    ;
2215 B6 89       mov  a,[89h] ;timeout.lsb      ;\              ;
2217 26 0A       jnz  @@keep_timeout_msb        ;               ;
2219 3A 89       dec  [89h]   ;timeout.lsb      ; loop more,    ;
221B B6 88       mov  a,[88h] ;timeout.msb      ; until timeout ;
221D 27 0A       jz   @@exit  ;--> timeout/exit ;               ;
221F 3A 88       dec  [88h]   ;timeout.msb      ;               ;
2221 20 DF       jr   @@lop           ;--> lop  ;               ;
                ;---                            ;               ;
                @@keep_timeout_msb:             ;               ;
2223 3A 89       dec  [89h]   ;timeout.lsb      ;               ;
2225 20 DB       jr   @@lop           ;--> lop  ;/              ;/
                ;---
                @@reached_boundary:
2227 18 40       set  [40h].4                   ;-result=1 (reached boundary)
                @@exit:
2229 81          ret
                ;------------------
                mech_kick_double_spd_entry:
                 ;*** called on: mt_0Bh_double_speed_entry
                ;- - - - - --------
                select_double_speed_mode:
222A A6 9F       mov  a,9Fh   ;cx(9F00)    ;msb ;\
222C AE 00       mov  x,00h                ;mid ; CXD2510Q Signal Processor
222E BF 88       mov  [scratch_cxd_mid],x  ;mid ; DoubleSpeed
2230 CD 43 2B    call send_16bit_to_cxd2510q    ;/
2233 AE 03       mov  x,idx_03h_w_decoder_control       ;\
2235 BF 04       mov  [io_porte_idx],x                  ; temporarily disable
2237 A6 08       mov  a,8h                              ; decoder (undone below)
2239 CD 40 FB    call write_data_bus                    ;/
223C AE 10       mov  x,idx_10h_w_drv_address_lo                        ;\
223E BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
2240 A6 00       mov  a,0h                                              ;
2242 CD 40 FB    call write_data_bus                                    ;
2245 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
2247 CD 40 FB    call write_data_bus                                    ;
224A 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
224C CD 40 FB    call write_data_bus                                    ;/
224F 12 B7       set  [curr_idx_07h_w_chip_control].1  ;speed   ;\
2251 AE 07       mov  x,idx_07h_w_chip_control                  ; select
2253 BF 04       mov  [io_porte_idx],x                          ; double speed
2255 B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ; (bit1=1)
2257 CD 40 FB    call write_data_bus                            ;/
225A AE 03       mov  x,idx_03h_w_decoder_control       ;\
225C BF 04       mov  [io_porte_idx],x                  ;
225E B6 B6       mov  a,[curr_idx_03h_w_decoder_control];
2260 CD 40 FB    call write_data_bus                    ;/
2263 10 BA       set  [curr_idx_0Ah_w_clrctl].0         ;\
2265 AE 0A       mov  x,idx_0Ah_w_clrctl                ;
2267 BF 04       mov  [io_porte_idx],x                  ;
2269 B6 BA       mov  a,[curr_idx_0Ah_w_clrctl]         ;
226B CD 40 FB    call write_data_bus                    ;
226E 11 BA       res  [curr_idx_0Ah_w_clrctl].0         ;/
2270 19 02       res  [io_portc].4      ;... CG pin or AL/TE pin or MIRR ?
2272 81          ret
                ;------------------
                mech_kick_normal_spd_entry:
                 ;*** called on: mt_0Dh_normal_speed_entry
                ;- - - - - --------
                select_normal_speed_mode:
2273 A6 9B       mov  a,9Bh   ;cx(9B00)    ;msb ;\
2275 AE 00       mov  x,00h                ;mid ; CXD2510Q Signal Processor
2277 BF 88       mov  [scratch_cxd_mid],x  ;mid ; NormalSpeed
2279 CD 43 2B    call send_16bit_to_cxd2510q    ;/
227C AE 03       mov  x,idx_03h_w_decoder_control       ;\
227E BF 04       mov  [io_porte_idx],x                  ; temporarily disable
2280 A6 08       mov  a,8h                              ; decoder (undone below)
2282 CD 40 FB    call write_data_bus                    ;/
2285 17 02       res  [io_portc].3              ;-    ;SPEED pin
2287 AE 10       mov  x,idx_10h_w_drv_address_lo                        ;\
2289 BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
228B A6 00       mov  a,0h                                              ;
228D CD 40 FB    call write_data_bus                                    ;
2290 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
2292 CD 40 FB    call write_data_bus                                    ;
2295 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
2297 CD 40 FB    call write_data_bus                                    ;/
229A 13 B7       res  [curr_idx_07h_w_chip_control].1  ;speed   ;\
229C AE 07       mov  x,idx_07h_w_chip_control                  ; select normal speed
229E BF 04       mov  [io_porte_idx],x                          ; (bit1=0)
22A0 B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;
22A2 CD 40 FB    call write_data_bus                            ;/
22A5 AE 03       mov  x,idx_03h_w_decoder_control       ;\
22A7 BF 04       mov  [io_porte_idx],x                  ;
22A9 A6 B6       mov  a,0B6h                            ;
22AB CD 40 FB    call write_data_bus                    ;/
22AE 10 BA       set  [curr_idx_0Ah_w_clrctl].0         ;\
22B0 AE 0A       mov  x,idx_0Ah_w_clrctl                ;
22B2 BF 04       mov  [io_porte_idx],x                  ;
22B4 B6 BA       mov  a,[curr_idx_0Ah_w_clrctl]         ;
22B6 CD 40 FB    call write_data_bus                    ;
22B9 11 BA       res  [curr_idx_0Ah_w_clrctl].0         ;/
22BB 18 02       set  [io_portc].4      ;... CG pin or AL/TE pin or MIRR ?
22BD 81          ret
                ;------------------
                mech_post_double_spd_ok:
                 ;*** speed is OKAY, so normally, this will do NOTHING
                 ;    (unless the desired speed changes)
                 ;*** called on: mt_0Ch_double_speed_ok
22BE 0E BB 11    jnz  [drv_mode].7,@@exit ;speed (stay DOUBLE speed)
22C1 0C 42 0E    jnz  [42h].6,@@exit
22C4 0A 42 0B    jnz  [42h].5,@@exit
                ;- - - - invoke CHANGE to normal speed ...
22C7 A6 0D       mov  a,0Dh  ;mt_0Dh_normal_speed_entry ;\
22C9 B7 6C       mov  [mech_task],a                     ;/
22CB A6 96       mov  a,96h  ;150 decimal       ;\
22CD B7 61       mov  [mech_offhold],a          ;/
22CF CD 22 73    call select_normal_speed_mode  ;-
                @@exit:
22D2 81          ret
                ;------------------
                mech_post_normal_spd_ok:
                 ;*** speed is OKAY, so normally, this will do NOTHING
                 ;    (unless the desired speed changes)
                 ;*** called on: mt_0Ah_normal_speed_ok
22D3 0F BB 11    jz   [drv_mode].7,@@exit ;speed (stay NORMAL speed)
22D6 0C 42 0E    jnz  [42h].6,@@exit
22D9 0A 42 0B    jnz  [42h].5,@@exit
                ;- - - - invoke CHANGE to double speed ...
22DC A6 0B       mov  a,0Bh  ;mt_0Bh_double_speed_entry ;\
22DE B7 6C       mov  [mech_task],a                     ;/
22E0 A6 96       mov  a,96h  ;150 decimal       ;\
22E2 B7 61       mov  [mech_offhold],a          ;/
22E4 CD 22 2A    call select_double_speed_mode  ;-
                @@exit:
22E7 81          ret
                ;------------------
                mech_pre_normal_spd_entry:   ;\wait for REACHING normal speed
                mech_post_normal_spd_entry:  ;/
                 ;*** called on: mt_0Dh_normal_speed_entry
22E8 A6 A0       mov  a,0A0h ;sense(A0) gfs     ;\CXD2510Q Signal Processor
22EA CD 43 41    call cxd_send_8bit_fragment_a  ;/select SENSE=GFS
22ED 0F 01 15    jz   [io_portb].7,@@exit     ;SENSE=GFS (high=good)
                ;- - - -
22F0 01 6A 07    jz   [datamode_flag].0,@@audio         ;\
22F3 18 B7       set  [curr_idx_07h_w_chip_control].4   ;
22F5 CD 40 32    call enter_cdrom_data_mode             ;
22F8 20 05       jr   @@cont                            ; Audio or Data
                ;---                                    ;
                @@audio:                                ;
22FA 19 B7       res  [curr_idx_07h_w_chip_control].4   ;
22FC CD 40 73    call enter_cdda_audio_mode             ;
                @@cont:                                 ;/
22FF A6 0A       mov  a,0Ah  ;mt_0Ah_normal_speed_ok    ;\
2301 B7 6C       mov  [mech_task],a                     ;/
2303 3F 61       mov  [mech_offhold],00h                ;-
                @@exit:
2305 81          ret
                ;------------------
                mech_pre_double_spd_entry:   ;\wait for REACHING double speed
                mech_post_double_spd_entry:  ;/
                 ;*** called on: mt_0Bh_double_speed_entry
2306 A6 A0       mov  a,0A0h ;sense(A0) gfs     ;\CXD2510Q Signal Processor
2308 CD 43 41    call cxd_send_8bit_fragment_a  ;/select SENSE=GFS
230B 0F 01 17    jz   [io_portb].7,@@exit    ;SENSE=GFS (high=good)
230E 16 02       set  [io_portc].3      ;SPEED pin   ;<--------
2310 01 6A 07    jz   [datamode_flag].0,@@audio         ;\
2313 18 B7       set  [curr_idx_07h_w_chip_control].4   ;
2315 CD 40 32    call enter_cdrom_data_mode             ;
2318 20 05       jr   @@cont                            ;
                ;---                                    ;
                @@audio:                                ;
231A 19 B7       res  [curr_idx_07h_w_chip_control].4   ;
231C CD 40 73    call enter_cdda_audio_mode             ;
                @@cont:                                 ;/
231F A6 0C       mov  a,0Ch  ;mt_0Ch_double_speed_ok    ;\
2321 B7 6C       mov  [mech_task],a                     ;/
2323 3F 61       mov  [mech_offhold],00h                ;-
                @@exit:
2325 81          ret
                ;------------------
                mech_pre_stop_part_1:   ;\ie. this is called anytime,
                mech_kick_stop_part_1:  ; regardless of [mech_offhold]
                mech_post_stop_part_1:  ;/
                 ;*** called on: mt_10h_stop_part_1
2326 17 02       res  [io_portc].3    ;SPEED pin
2328 07 40 06    jz   [40h].3,@@exit
232B A6 7D       mov  a,7Dh ;125 decimal        ;\
232D B7 61       mov  [mech_offhold],a          ;/
232F 3C 6C       inc  [mech_task]  ;=mt_11h_stop_part_2
                @@exit:
2331 81          ret
                ;------------------
                mech_pre_stop_part_2:
                 ;*** called on: mt_11h_stop_part_2
2332 A6 EA       mov  a,0EAh ;cx(EA),sense(EA)  ;\CXD2510Q Signal Processor
2334 CD 43 33    call send_8bit_to_cxd2510q     ;/SpindleMotorReverse
2337 0F 01 01    jz   [io_portb].7,@@cont       ;SENSE=/OV64
233A 81          ret
                ;---
                @@cont:
                ;- - - - - - ------
                mech_kick_stop_part_2:
                 ;*** called on: mt_11h_stop_part_2
233B B6 61       mov  a,[mech_offhold]
233D A8 FF       xor  a,0FFh    ;somewhat negate
233F 99          stc            ;<--
2340 A2 82       sbc  a,82h     ;whoops ?    ;decimal 130 ?
2342 44          shr  a         ;div2                   ;\
2343 B7 61       mov  [mech_offhold],a                  ;
2345 26 02       jnz  @@is_nonzero                      ;
2347 3C 61       inc  [mech_offhold]     ;force nonzero ;
                @@is_nonzero:                           ;/
2349 CD 42 0A    call stop_spindle_motor_inj
234C 3C 6C       inc  [mech_task]  ;=mt_12h_stop_part_3
234E 81          ret
                ;------------------
                mech_kick_stop_part_3:     ;<-- called on: mt_12h_stop_part_3
                mech_kick_stop_part_3_inj: ;<-- called from elsewhere, too
234F 3F 6C       mov  [mech_task],00h  ;mt_00h_stopped
2351 CD 42 05    call stop_spindle_motor
2354 1D 45       res  [45h].6
2356 13 BC       res  [drv_stat].1 ;spindle_motor
2358 15 41       res  [41h].2
235A A6 02       mov  a,2h ;for cmp a,[cmd_2nd_response_type]   ;\
235C CD 45 A9    call discard_response_type_A                   ;/
235F CC 11 3D    jmp  seek_pos0                 ;-seek POS0
                ;------------------
;:              ;:----------------- Events...
                ;------------------
                event_15hz_focus_timeout:
2362 B6 72       mov  a,[focus_timeout]                 ;\
2364 27 12       jz   @@exit                            ;/
2366 3A 72       dec  [focus_timeout]                   ;\
2368 26 0E       jnz  @@exit                            ;/
                ;- - -
236A B6 6C       mov  a,[mech_task]                     ;\
236C 27 0A       jz   @@exit  ;mt_00h_stopped           ;
236E A1 08       cmp  a,8h    ;mt_08h_adj_balance       ;
2370 24 06       jnc  @@exit                            ;/
2372 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
2375 CC 28 E0    jmp  force_motor_off
                ;---
                @@exit:
2378 81          ret
                ;------------------
                unused_data_mode_related:  ;UNUSED!
2379 0F 40 1A    jz   [40h].7,@@exit
237C 0D 50 17    jz   [subq_rx_buf+0].6,@@exit    ;ADR/Control Bit6=Data
237F 01 B1 14    jz   [curr_idx_01h_r_decoder_status].0,@@exit  ;no sync
2382 B6 6C       mov  a,[mech_task]
2384 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok (or above)
2386 25 0E       jc   @@exit
2388 18 B7       set  [curr_idx_07h_w_chip_control].4   ;\set CDROM mode
238A CD 40 32    call enter_cdrom_data_mode             ;/
238D AE 0A       mov  x,idx_0Ah_w_clrctl                ;\
238F BF 04       mov  [io_porte_idx],x                  ;
2391 A6 01       mov  a,01h                             ;
2393 CD 40 FB    call write_data_bus                    ;/
                @@exit:
2396 81          ret
                ;------------------
                event_31hz_mech_timeouts:
2397 B6 6C       mov  a,[mech_task]                     ;\
2399 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
239B 27 04       jz   @@speed_shall_be_stable           ; blah, this does
239D A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ; ALWAYS continue
239F 26 03       jnz  @@cont_blah         ;<--blah      ; at "@@cont_blah"
                @@speed_shall_be_stable:                ;
23A1 08 42 00    jnz  [42h].4,@@cont_blah ;<--blah ;$+3 ;
                @@cont_blah:                            ;/
                ;- - - -
23A4 06 41 32    jnz  [41h].3,@@cont
23A7 B6 6C       mov  a,[mech_task]
23A9 A1 06       cmp  a,6h  ;mt_06h_autofocus_okay (or above)
23AB 25 2C       jc   @@cont
23AD A1 10       cmp  a,10h ;mt_10h_stop_part_1 (or above)
23AF 24 28       jnc  @@cont
23B1 08 42 21    jnz  [42h].4,@@cont_and_reload_timeout
23B4 00 41 1E    jnz  [41h].0,@@cont_and_reload_timeout
                ;- - -
23B7 B6 71       mov  a,[mech_timeout_1]                ;\
23B9 27 1E       jz   @@cont                            ;/
23BB 3A 71       dec  [mech_timeout_1]    ;... timeout  ;\
23BD 26 1A       jnz  @@cont                            ;/
                ;- - - -
23BF CD 42 05    call stop_spindle_motor                ;-stop (also below?)
23C2 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
23C5 C6 02 0D    mov  a,[drv_desired_session]           ;\
23C8 A1 01       cmp  a,1h                              ;
23CA 26 03       jnz  @@to_force_motor_off              ; stop
23CC 0F 40 03    jz   [40h].7,@@to_stop_and_motor_off   ; (this way, or
                @@to_force_motor_off:                   ; that way)
23CF CC 28 E0    jmp  force_motor_off                   ;
                ;---                                    ;
                @@to_stop_and_motor_off:                ;
23D2 CC 1F DE    jmp  stop_and_motor_off                ;/
                ;--- ---
                @@cont_and_reload_timeout:
23D5 A6 7D       mov  a,7Dh  ;125 decimal               ;\
23D7 B7 71       mov  [mech_timeout_1],a                ;/
                @@cont:
23D9 06 41 28    jnz  [41h].3,@@exit
23DC B6 6C       mov  a,[mech_task]                             ;\
23DE A1 06       cmp  a,6h  ;mt_06h_autofocus_okay (or above)   ;
23E0 25 22       jc   @@exit                                    ;
23E2 A1 10       cmp  a,10h ;mt_10h_stop_part_1 (or above)      ;
23E4 24 1E       jnc  @@exit                                    ;/
23E6 08 42 1B    jnz  [42h].4,@@exit                            ;-
23E9 B6 74       mov  a,[mech_timeout_2]                        ;\
23EB 27 17       jz   @@exit                                    ;/
23ED 3A 74       dec  [mech_timeout_2]   ;... another timeout   ;\
23EF 26 13       jnz  @@exit                                    ;/
                ;- - - -
23F1 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
23F4 C6 02 0D    mov  a,[drv_desired_session]           ;\
23F7 A1 01       cmp  a,1h                              ;
23F9 26 03       jnz  @@to_force_motor_off2             ; stop
23FB 0F 40 03    jz   [40h].7,@@to_stop_and_motor_off2  ; (this way,
                @@to_force_motor_off2:                  ; that way)
23FE CC 28 E0    jmp  force_motor_off                   ;
                ;---                                    ;
                @@to_stop_and_motor_off2:               ;
2401 CC 1F DE    jmp  stop_and_motor_off                ;/
                ;---
                @@exit:
2404 81          ret
                ;------------------
                event_500hz_sense_focus:
2405 B6 6C       mov  a,[mech_task]
2407 A1 06       cmp  a,6h  ;mt_06h_autofocus_okay (or above)
2409 25 57       jc   @@exit
240B A6 50       mov  a,50h ;sense(50) fok      ;\CXD2510Q Signal Processor
240D CD 43 41    call cxd_send_8bit_fragment_a  ; test if FokusOkay (high)
2410 0E 01 47    jnz  [io_portb].7,@@focus_okay ;/via SENSE=FOK
                ;- - - - - -
2413 B6 73       mov  a,[focus_quality]                 ;\
2415 27 4B       jz   @@exit                            ;/
2417 3A 73       dec  [focus_quality]                   ;\
2419 26 47       jnz  @@exit                            ;/
                 ;hmmm, below is called ONLY when [focus_quality] CHANGEs to
                 ;zero, but NOT when it was already ZERO...
241B CD 24 63    call handle_bad_focus_max_errors       ;\
241E 08 40 41    jnz  [40h].4,@@exit                    ;/
2421 B6 6C       mov  a,[mech_task]                     ;\
2423 A1 08       cmp  a,8h   ;mt_08h_adj_balance        ;
2425 27 04       jz   @@init_gain                       ; eventually
2427 A1 09       cmp  a,9h   ;mt_09h_adj_gain           ; init gain
2429 26 03       jnz  @@keep_gain                       ;
                @@init_gain:                            ;
242B CD 41 DF    call set_initial_gain_balance_adj      ;
                @@keep_gain:                            ;/
242E B6 6C       mov  a,[mech_task]                     ;\
2430 A1 11       cmp  a,11h  ;mt_11h_stop_part_2        ;
2432 27 1F       jz   @@next_mt   ;mt_11h_stop_part_2   ;
2434 24 2C       jnc  @@exit      ;mt_12h --> exit      ;/
                ;- - -
2436 A6 BB       mov  a,0BBh                    ;\BBh   ;\
2438 B7 8F       mov  [8Fh],a                   ;/      ;
243A B6 6C       mov  a,[mech_task]                     ;
243C A1 06       cmp  a,6h  ;mt_06h_autofocus_okay      ; either use 0BBh
243E 27 04       jz   @@do_not_use_0BBh                 ; or old [focus_timeout]
2440 A1 07       cmp  a,7h  ;mt_07h_already_adjusted    ; for something...?
2442 26 04       jnz  @@use_0BBh                        ;
                @@do_not_use_0BBh:                      ;
2444 B6 72       mov  a,[focus_timeout]         ;\old   ;
2446 B7 8F       mov  [8Fh],a                   ;/      ;
                @@use_0BBh:                             ;/
2448 0C 40 17    jnz  [40h].6,@@exit                    ;-
244B CD 42 98    call whatever_XXX_4298h                ;-
244E B6 8F       mov  a,[8Fh]              ;old or BBh  ;\
2450 B7 72       mov  [focus_timeout],a                 ;/
2452 81          ret
                ;---
                @@next_mt:
2453 A6 01       mov  a,1h                      ;\
2455 B7 61       mov  [mech_offhold],a          ;/
2457 3C 6C       inc  [mech_task]  ;=mt_12h_stop_part_3
2459 81          ret
                ;---
                @@focus_okay:
245A B6 73       mov  a,[focus_quality]
245C A1 20       cmp  a,20h   ;max 32 decimal
245E 27 02       jz   @@exit
2460 3C 73       inc  [focus_quality]   ;... raise focus_quality
                @@exit:
2462 81          ret
                ;------------------
                handle_bad_focus_max_errors:
2463 19 40       res  [40h].4                   ;-
2465 A6 0C       mov  a,0Ch   ;12 decimal       ;\launch a 12-step 15hz timer
2467 B7 77       mov  [focus_error_timer],a     ;/(aka circa one second)
2469 3C 9D       inc  [focus_error_count]       ;\
246B B6 9D       mov  a,[focus_error_count]     ; allow max 10 errors, UNLESS
246D A1 0A       cmp  a,0Ah   ;max 10 decimal   ; above time has expired (at that time [focus_error_counter] will be reset to zero, ie. BIOS will "forget" errors when there has been an error-free period of circa one second)
246F 24 01       jnc  @@timeout   ;aka give up  ;/
2471 81          ret
                ;---
                @@timeout:
2472 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
2475 0E 40 04    jnz  [40h].7,@@stop_motor      ;-->
2478 CD 1F DE    call stop_and_motor_off
247B 81          ret
                ;---
                @@stop_motor:
247C 18 40       set  [40h].4
247E 3F 6C       mov  [mech_task],00h  ;mt_00h_stopped
2480 CD 42 05    call stop_spindle_motor
2483 CC 28 E0    jmp  force_motor_off
                ;------------------
                event_500hz_XXX_2486h:
2486 B6 62       mov  a,[62h]                   ;\
2488 27 22       jz   @@exit                    ;/
248A 09 42 1F    jz   [42h].4,@@exit            ;-
248D 3A 62       dec  [62h]                     ;\
248F 26 0D       jnz  @@no_timeout              ;/
                ;- - - timeout
2491 0A 42 2A    jnz  [42h].5,@@auto_seq_abort          ;\abort stuff (if any)
2494 0C 42 60    jnz  [42h].6,@@sense_cout_abort        ;/
2497 19 42       res  [42h].4
2499 A6 11       mov  a,11h  ;cx(11)            ;\CXA1782BR Servo Amplifier
249B CC 43 33    jmp  send_8bit_to_cxa1782br    ;/SledKickHeight2
                ;--- --- ... --- ---
                @@no_timeout:
249E 0A 42 0F    jnz  [42h].5,@@check_if_auto_seq_busy
24A1 0C 42 09    jnz  [42h].6,@@to_sense_cout
24A4 05 41 05    jz   [41h].2,@@exit
24A7 A6 19       mov  a,19h  ;cx(19)            ;\CXA1782BR Servo Amplifier
24A9 CC 43 33    jmp  send_8bit_to_cxa1782br    ;/TrackingGainAndSledKickHeight2
                ;---
                @@exit:
24AC 81          ret
                ;---
                @@to_sense_cout:
24AD CC 25 1F    jmp  @@sense_cout
                ;---
                @@check_if_auto_seq_busy:
24B0 A6 40       mov  a,40h ;sense(40) xbusy        ;\
24B2 CD 43 41    call cxd_send_8bit_fragment_a      ; CXD2510Q Signal Processor
24B5 A6 7D       mov  a,7Dh ;125 decimal ;\delay    ; test if AutoSeqBusy (low)
24B7 CD 46 E6    call delay_a            ;/         ; (via SENSE=XBUSY)
24BA 0E 01 01    jnz  [io_portb].7,@@auto_seq_ready ;/
24BD 81          ret     ;exit (AutoSeqBusy)
                ;--- --- ... --- ---
                @@auto_seq_ready:  ;<-- ready
                @@auto_seq_abort:  ;<-- timeout
24BE CD 41 D0    call cancel_auto_sequence              ;-cancel auto seq
24C1 06 43 0F    jnz  [43h].3,@@keep_mode      ;KEEP    ;\
24C4 01 6A 07    jz   [datamode_flag].0,@@audio         ;
24C7 18 B7       set  [curr_idx_07h_w_chip_control].4   ;
24C9 CD 40 32    call enter_cdrom_data_mode    ;DATA    ; keep mode, or enter
24CC 20 05       jr   @@this_mode                       ; data or audio mode
                ;---                                    ;
                @@audio:                                ;
24CE 19 B7       res  [curr_idx_07h_w_chip_control].4   ;
24D0 CD 40 73    call enter_cdda_audio_mode    ;AUDIO   ;
                @@this_mode:                            ;
                @@keep_mode:                            ;/
24D3 CD 43 12    call get_auto_or_rough ;cx(Ex) ;\CXD2510Q Signal Processor
24D6 CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal or RoughServo
24D9 15 41       res  [41h].2                           ;-
24DB 1B 42       res  [42h].5                           ;-
24DD B6 7A       mov  a,[seek_dist_8bit]                ;\  ?
24DF 27 0E       jz   @@use_val_40h                     ;/
24E1 3A 7A       dec  [seek_dist_8bit]                  ;\  ?
24E3 27 03       jz   @@use_val_40h_or_04h              ;/
24E5 CC 1C 70    jmp  seek_one_step_ahead_or_back       ;-
                ;---
                @@use_val_40h_or_04h:
24E8 A6 04       mov  a,04h                             ;\
24EA B7 62       mov  [62h],a                           ;/
24EC 06 6D 04    jnz  [disc_task].dt_3_whatever,@@exit2 ;-
                ;- - - -
                @@use_val_40h:
24EF A6 40       mov  a,40h                             ;\
24F1 B7 62       mov  [62h],a                           ;/
                @@exit2:
24F3 81          ret
                ;--- --- ---
                @@to_stop_and_seek_pos0:
24F4 CC 25 5D    jmp  stop_and_seek_pos0
                ;--- --- ... --- ---
                @@sense_cout_abort:          ;abort_sense_cout (?)
24F7 B6 7B       mov  a,[seek_dist_16bit_msb] ;msb ??
24F9 26 F9       jnz  @@to_stop_and_seek_pos0
24FB A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
24FD CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
2500 A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
2502 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
2505 CD 43 12    call get_auto_or_rough ;cx(Ex) ;\CXD2510Q Signal Processor
2508 CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal or RoughServo
250B 3F 68       mov  [68h],00h                 ;-
250D A6 40       mov  a,40h                     ;\
250F B7 62       mov  [62h],a                   ;/
2511 1D 42       res  [42h].6
2513 15 41       res  [41h].2
2515 00 6D 03    jnz  [disc_task].dt_0_nodisk,@@to_whatever_XXX_42BEh
2518 03 6D 03    jz   [disc_task].dt_1_stopped,@@exit3
                @@to_whatever_XXX_42BEh:
251B CC 42 BE    jmp  whatever_XXX_42BEh
                ;---
                @@exit3:
251E 81          ret
                ;--- --- sense COUT --- ---
                @@sense_cout:
251F BE 7B       mov  x,[seek_dist_16bit_msb] ;msb ??
2521 27 21       jz   @@exit4
2523 A6 C5       mov  a,0C5h ;sense(C5) ;five?? ;\CXD2510Q Signal Processor
2525 CD 43 41    call cxd_send_8bit_fragment_a  ;/select SENSE=COUT
2528 A6 7D       mov  a,7Dh ;125 decimal        ;\delay
252A CD 46 E6    call delay_a                   ;/
252D 0E 42 07    jnz  [42h].7,@@want_this_cout_transition   ;\ ;recent sensed COUT
2530 0F 01 11    jz   [io_portb].7,@@exit4  ;SENSE=COUT     ;
2533 1E 42       set  [42h].7       ;recent sensed COUT     ; check for COUT
2535 20 05       jr   @@got_cout_transition                 ; transition
                ;---                                        ; (exit if none)
                @@want_this_cout_transition:                ;
2537 0E 01 0A    jnz  [io_portb].7,@@exit4  ;SENSE=COUT     ;
253A 1F 42       res  [42h].7       ;recent sensed COUT     ;
                @@got_cout_transition:                      ;/
253C 3A 7B       dec  [seek_dist_16bit_msb] ;msb ??     ;\
253E 27 05       jz   set_fast_sled                     ;/
2540 A6 20       mov  a,20h                             ;\
2542 B7 62       mov  [62h],a                           ;/
                @@exit4:
2544 81          ret
                ;------------------
                set_fast_sled:
2545 A6 20       mov  a,20h   ;cx(20)           ;\CXA1782BR Servo Amplifier
2547 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
254A A6 1D       mov  a,1Dh   ;cx(1D)           ;\CXA1782BR Servo Amplifier
254C CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
254F A6 22       mov  a,22h   ;cx(22)=forward   ;\CXA1782BR Servo Amplifier
2551 07 42 01    jz   [42h].3,@@this  ;dir      ; SledFastForward
2554 4C          inc  a ;=23h ;cx(23)=reverse   ; or
                @@this:                         ; SledFastReverse
2555 CD 43 33    call send_8bit_to_cxa1782br    ;/
2558 A6 06       mov  a,6h                      ;\
255A B7 62       mov  [62h],a                   ;/
255C 81          ret
                ;------------------
                stop_and_seek_pos0:
255D 19 42       res  [42h].4                           ;-
255F 1D 42       res  [42h].6                           ;-
2561 A6 03       mov  a,3h                              ;\
2563 B7 6B       mov  [seek_task],a                     ;/
2565 3F 6C       mov  [mech_task],00h  ;mt_00h_stopped  ;-
2567 CD 42 05    call stop_spindle_motor                ;-
256A CC 11 3D    jmp  seek_pos0                         ;-seek POS0
                ;------------------
                event_1000hz_XXX_256Dh:
256D B6 63       mov  a,[63h]
256F 27 0A       jz   @@exit  ;already timeout
2571 3A 63       dec  [63h]
2573 26 06       jnz  @@exit  ;notyet timeout
2575 08 6D 00    jnz  [disc_task].dt_4_fast,@@blah ;$+3 ;\blah
                @@blah:   ;(sets CY, but CY isn't used) ;/
2578 CC 25 7C    jmp  @@cont                            ;------>
                ;---
                @@exit:
257B 81          ret
                ;--- --- ---
                @@cont:
257C 1F BC       res  [drv_stat].7 ;play_active = false ;\
257E 1D BC       res  [drv_stat].6 ;seek_active = false ; whoop ? kill !!!
2580 1B BC       res  [drv_stat].5 ;read_active = false ;/
2582 A6 50       mov  a,50h  ;80 decimal                ;\reload ?
2584 B7 63       mov  [63h],a                           ;/
2586 01 41 1C    jz   [41h].0,@@exit2                   ;-
2589 B6 6C       mov  a,[mech_task]                     ;\
258B A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
258D 27 04       jz   @@speed_shall_be_stable           ;
258F A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ;
2591 26 12       jnz  @@exit2                           ;
                @@speed_shall_be_stable:                ;/
2593 0C 42 0F    jnz  [42h].6,@@exit2                   ;-
2596 3F 6B       mov  [seek_task],00h                   ;-
2598 A6 28       mov  a,28h  ;40 decimal                ;\
259A 02 43 05    jnz  [43h].1,@@cont2                   ;
259D CD 42 33    call mute_or_demute_cd_da    ;------>  ;
25A0 A6 0A       mov  a,0Ah  ;10 decimal                ;
                @@cont2:    ;in: A                      ;
25A2 CC 1B A2    jmp  seek_dist_A             ;--->     ;/
                ;---
                @@exit2:
25A5 81          ret
                ;------------------
                whatever_XXX_25A6h:
25A6 3F 63       mov  [63h],00h                 ;-
25A8 A6 04       mov  a,(1 shl dt_2_whatever)   ;\
25AA B7 6D       mov  [disc_task],a             ;/
25AC A6 A0       mov  a,0A0h  ;cx(A040)    ;msb ;\
25AE AE 40       mov  x,40h                ;mid ; CXD2510Q Signal Processor
25B0 BF 88       mov  [scratch_cxd_mid],x  ;mid ; Attentuation Off
25B2 CD 43 2B    call send_16bit_to_cxd2510q    ;/
25B5 03 43 03    jz   [43h].1,@@mute_or_demute  ;-
                ;- - -
25B8 CC 42 8C    jmp  whatever_XXX_428Ch        ;-
                ;---
                @@mute_or_demute:
25BB CD 42 33    call mute_or_demute_cd_da      ;-
25BE 81          ret
                ;------------------
                event_31hz_transfer_debug_status:
25BF 0F 93 24    jz   [debug_status_index].7,@@exit     ;-exit if no transfer
25C2 B6 93       mov  a,[debug_status_index]            ;\
25C4 A4 07       and  a,7h                              ; INDEX 0 (begin)
25C6 27 25       jz   @@index_00h                       ;/
                ;- - - -
25C8 CD 37 BA    call databus_direction_for_debug_status
25CB 1A 02       set  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
25CD 9D          nop
25CE 9D          nop
25CF 01 00 15    jz   [io_porta_dta].0,@@notyet_ready_for_next_snippet   ;?
                ;- - - -
25D2 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
25D4 CD 37 C5    call restore_default_databus_direction
25D7 A1 05       cmp  a,5h  ;=[debug_status_index]      ;\INDEX 1..4 (more)
25D9 25 47       jc   @@index_01h_thru_04h              ;/
                ;- - - -
25DB CD 47 EE    call debug_status_send_snippet_00h_00h_00h     ;-SEND (fin)
25DE B6 93       mov  a,[debug_status_index]            ;\
25E0 A4 F8       and  a,0F8h                            ; reset transfer index
25E2 B7 93       mov  [debug_status_index],a            ;/
25E4 1F 93       res  [debug_status_index].7            ;-done, mark not busy
                @@exit:
25E6 81          ret
                ;---
                @@notyet_ready_for_next_snippet:
25E7 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
25E9 CD 37 C5    call restore_default_databus_direction
25EC 81          ret
                ;---
                @@index_00h:
25ED A6 01       mov  a,1h                                      ;\RECV
25EF CD 46 EB    call debug_status_receive_snippet              ;/
25F2 B6 88       mov  a,[88h]                                   ;\
25F4 26 06       jnz  @@force_0                                 ;
25F6 B6 89       mov  a,[89h]                                   ;
25F8 A1 08       cmp  a,8h                                      ;
25FA 25 02       jc   @@inrange1                                ;
                @@force_0:                                      ;
25FC A6 00       mov  a,0h                                      ;
                @@inrange1:                                     ;
25FE B7 8A       mov  [8Ah],a                   ;\              ;/
2600 48          shl  a                         ;
2601 48          shl  a                         ;
2602 AB 06       add  a,6h                      ;
2604 B7 9C       mov  [debug_status_reply],a    ;/
2606 CD 47 F7    call debug_status_send_snippet_30h_00h_00h     ;-SEND
2609 B6 8A       mov  a,[8Ah]                                   ;\
260B 4C          inc  a        ;raise                           ;
260C A1 08       cmp  a,8h                                      ;
260E 25 02       jc   @@inrange2                                ;
2610 A6 00       mov  a,0h                                      ;
                @@inrange2:                                     ;
2612 B7 89       mov  [89h],a                                   ;/
2614 A6 00       mov  a,0h                                      ;\
2616 B7 88       mov  [88h],a                                   ;/
2618 A6 01       mov  a,1h                                      ;\
261A AA 40       or   a,40h                                     ; SEND
261C CD 47 77    call debug_status_send_snippet                 ;/
261F 3C 93       inc  [debug_status_index]                      ;-
2621 81          ret
                ;---
                @@index_01h_thru_04h:
2622 B6 93       mov  a,[debug_status_index]                    ;\
2624 A4 07       and  a,7h  ;01..04                             ;
2626 4A          dec  a     ;00..03                             ;
2627 48          shl  a     ;00..06                             ;
2628 97          mov  x,a                           ;<-- index  ;/
2629 E6 94       mov  a,[debug_status_packet+0+x]               ;\
262B B7 89       mov  [89h],a                                   ;/
262D E6 95       mov  a,[debug_status_packet+1+x]               ;\
262F B7 88       mov  [88h],a                                   ;/
2631 B6 9C       mov  a,[debug_status_reply]                    ;\
2633 AA 40       or   a,40h                                     ; SEND
2635 CD 47 77    call debug_status_send_snippet                 ;/
2638 3C 93       inc  [debug_status_index]
263A 3C 9C       inc  [debug_status_reply]
263C 81          ret
                ;------------------
                event_1000hz_XXX_263Dh:
263D 06 41 45    jnz  [41h].3,@@exit
2640 A6 A0       mov  a,0A0h ;sense(A0) gfs     ;\CXD2510Q Signal Processor
2642 CD 43 41    call cxd_send_8bit_fragment_a  ;/select SENSE=GFS
2645 B6 6C       mov  a,[mech_task]                     ;\
2647 A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
2649 27 05       jz   @@speed_shall_be_stable           ; exit if drive speed
264B A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ; isn't in stable state
264D 27 01       jz   @@speed_shall_be_stable           ;
264F 81          ret                                    ;
                ;---                                    ;
                @@speed_shall_be_stable:                ;/
2650 C6 02 0F    mov  a,[recent_sense_gfs_bits]         ;\
2653 99          stc  ;blah, done by below "jnz" anyways;
2654 0E 01 01    jnz  [io_portb].7,@@cont ;$+3+1 ;SENSE=GFS, for above sense(A0)
2657 98          clc  ;blah, done by above "jnz" anyways;
                @@cont:                                 ;
2658 49          rcl  a   ;<-- shift-in newest bit      ;
2659 C7 02 0F    mov  [recent_sense_gfs_bits],a         ;/
265C 08 42 26    jnz  [42h].4,@@exit
265F 0E 43 66    jnz  [43h].7,@@want_sled_kick_height2
2662 0C 43 4C    jnz  [43h].6,@@want_sled_and_tracking_on
2665 0A 43 1E    jnz  [43h].5,@@want_sled_and_tracking_on_or_off_depending_on_GFS
                ;- - -
2668 C6 02 0F    mov  a,[recent_sense_gfs_bits] ;\check the 5 most recently
266B A4 1F       and  a,1Fh  ;lower 5 bits      ; sensed GFS bits
266D 26 16       jnz  @@exit                    ;/(exit if all 5 bits are okay)
                ;- - - -
266F 19 46       res  [46h].4
2671 A6 78       mov  a,78h ;120 decimal        ;\
2673 B7 9E       mov  [test_timeout_2],a        ;/
2675 A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
2677 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
267A A6 24       mov  a,24h  ;cx(24)            ;\CXA1782BR Servo Amplifier
267C CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingServoOn
267F 1A 43       set  [43h].5                   ;-
2681 A6 64       mov  a,64h  ;100 decimal       ;\
2683 B7 69       mov  [69h],a                   ;/
                @@exit:
2685 81          ret
                ;---
                @@want_sled_and_tracking_on_or_off_depending_on_GFS:
2686 0F 01 14    jz   [io_portb].7,@@want_sled_and_tracking_off ;SENSE=GFS, for above sense(A0)
                ;- - -
2689 1B 43       res  [43h].5                   ;-
268B 3F 69       mov  [69h],00h                 ;-
268D 19 46       res  [46h].4                   ;-
268F A6 78       mov  a,78h ;120 decimal        ;\
2691 B7 9E       mov  [test_timeout_2],a        ;/
2693 A6 11       mov  a,11h  ;cx(11)            ;\CXA1782BR Servo Amplifier
2695 CD 43 33    call send_8bit_to_cxa1782br    ;/SledKickHeight2
2698 A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
269A CC 43 33    jmp  send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
                ;---
                @@want_sled_and_tracking_off:
269D 3A 69       dec  [69h]                     ;\
269F 26 E4       jnz  @@exit                    ;/
26A1 A6 20       mov  a,20h  ;cx(20)            ;\CXA1782BR Servo Amplifier
26A3 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
26A6 1C 43       set  [43h].6
26A8 1B 43       res  [43h].5
26AA 15 41       res  [41h].2
26AC A6 64       mov  a,64h  ;100 decimal       ;\
26AE B7 69       mov  [69h],a                   ;/
26B0 81          ret
                ;---
                @@want_sled_and_tracking_on:
26B1 3A 69       dec  [69h]                     ;\
26B3 26 D0       jnz  @@exit                    ;/
26B5 A6 1D       mov  a,1Dh  ;cx(1D)            ;\CXA1782BR Servo Amplifier
26B7 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainBrakeAndSledKickHeight2
26BA A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
26BC CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
26BF 1D 43       res  [43h].6
26C1 A6 C8       mov  a,0C8h  ;200 decimal      ;\
26C3 B7 69       mov  [69h],a                   ;/
26C5 1E 43       set  [43h].7
26C7 81          ret
                ;---
                @@want_sled_kick_height2:
26C8 0E 04 04    jnz  [io_porte_idx].7,@@uh_skip;\  <-- idx_8xh ??? INPUT ???
26CB 3A 69       dec  [69h]                  ;\ ;
26CD 26 B6       jnz  @@exit                 ;/ ;
                @@uh_skip:                      ;/
26CF 3F 69       mov  [69h],00h
26D1 1F 43       res  [43h].7
26D3 19 46       res  [46h].4
26D5 A6 78       mov  a,78h ;120 decimal        ;\
26D7 B7 9E       mov  [test_timeout_2],a        ;/
26D9 A6 11       mov  a,11h  ;cx(11)            ;\CXA1782BR Servo Amplifier
26DB CC 43 33    jmp  send_8bit_to_cxa1782br    ;/SledKickHeight2
                ;------------------
                event_15hz_check_scex_timeout:
26DE 00 90 37    jnz  [license_flags].0,@@exit
26E1 04 49 35    jnz  [49h].2,@@disc_error      ;--->  some error or so ???
26E4 0C 40 32    jnz  [40h].6,@@disc_error      ;--->  disc_missing or so ?
26E7 03 90 2E    jz   [license_flags].1,@@exit
26EA B6 75       mov  a,[boot_scex_timeout]             ;\
26EC 27 2A       jz   @@exit                            ;/
26EE 3A 75       dec  [boot_scex_timeout]
26F0 27 2F       jz   @@scex_timeout_give_up    ;----> timeout, mark UNLICENSED
26F2 05 44 23    jz   [scex_flags].2,@@exit    ;... 0=BUSY ?
26F5 1F 90       res  [license_flags].7 ;mark DISC LICENSED ??? (=okay during SCEX read BUSY phase?)
26F7 1D 90       res  [license_flags].6 ;mark DISC PRESENT
26F9 19 90       res  [license_flags].4 ;mark DISC NON-AUDIO
                ;- - - -
                @@finish:
26FB 13 90       res  [license_flags].1
26FD 10 90       set  [license_flags].0
26FF 05 45 03    jz   [45h].2,@@skip_pause              ;\
2702 CD 27 42    call stuff_and_enter_pause_state       ; eventually pause
                @@skip_pause:                           ;/
2705 CD 48 5D    call stop_scex_reading                 ;-
2708 C6 02 0C    mov  a,[cmd_2nd_response_type]         ;\
270B A1 06       cmp  a,6h    ;<-- blah, type=6 doesn't exist (must be some old relict, where "get_id" used type=6, instead of using a separate flag elsewhere)
270D 26 09       jnz  @@exit  ;--> ALWAYS exit here     ;
270F A6 00       mov  a,0h                              ;
2711 C7 02 0C    mov  [cmd_2nd_response_type],a         ;
2714 1E 47       set  [47h].7           ;request "get_id" response ??? why here?
2716 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
                @@exit:
2718 81          ret
                ;---
                @@disc_error:
2719 1F 90       res  [license_flags].7 ;mark DISC LICENSED (no disc though)
271B 1C 90       set  [license_flags].6 ;mark DISC MISSING (bad)
271D 19 90       res  [license_flags].4 ;mark DISC NON-AUDIO
271F 20 DA       jr   @@finish
                ;---
                @@scex_timeout_give_up:
2721 1E 90       set  [license_flags].7 ;<--- mark DISC UNLICENSED (bad)
                 .rept 27       ;27 nop's ...
2723 9D 9D 9D ..   nop          ;why??? patch? delay? blah?
                 .endm          ;or is [license_flags] an extra I/O port ??? rather not!
273E 1D 90       res  [license_flags].6 ;<--- mark DISC PRESENT
2740 20 B9       jr   @@finish
                ;------------------
                stuff_and_enter_pause_state:
2742 15 45       res  [45h].2
2744 17 45       res  [45h].3
2746 13 43       res  [43h].1
2748 11 43       res  [43h].0
274A 13 49       res  [49h].1
274C A6 02       mov  a,(1 shl dt_1_stopped)            ;\
274E B7 6D       mov  [disc_task],a                     ;/
2750 CC 28 B3    jmp  enter_pause_state                 ;-
                ;------------------
                event_15hz_near_target_period:
2753 B6 76       mov  a,[near_target_offhold]           ;\
2755 27 0A       jz   @@already_expired                 ;/
2757 B6 6D       mov  a,[disc_task]                     ;\
2759 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)
275B 27 04       jz   @@force_expire                    ;/
275D 3A 76       dec  [near_target_offhold]             ;\
275F 26 04       jnz  @@exit  ;no timeout               ;/
                @@force_expire:
                @@already_expired:
2761 1B 41       res  [41h].5  ;near_target_flag        ;- mark NOT near target?
2763 3F 76       mov  [near_target_offhold],00h         ;- expire timer
                @@exit:
2765 81          ret
                ;------------------
                event_1000hz_XXX_2766h:
2766 B6 66       mov  a,[66h]                           ;\
2768 27 04       jz   @@already_timeout                 ;/
276A 3A 66       dec  [66h]                             ;\
276C 26 02       jnz  @@exit  ;no timeout               ;/
                @@already_timeout:
276E 19 43       res  [43h].4    ;... clear busy?
                @@exit:
2770 81          ret
                ;------------------
                event_1000hz_test_timeout_1:
2771 08 46 18    jnz  [46h].4,@@reload_timeout          ;--->
2774 B6 6D       mov  a,[disc_task]                     ;\
2776 A1 04       cmp  a,(1 shl dt_2_whatever)           ;
2778 26 16       jnz  @@exit                            ;/
277A 01 6A 0F    jz   [datamode_flag].0,@@reload_timeout;-audio
277D 08 01 0C    jnz  [io_portb].4,@@reload_timeout     ;-TEST2 pin (usually 1)
                ;- - - below is usually NOT executed (unless TEST2 forced 0)
2780 3A 78       dec  [test_timeout_1]                  ;\
2782 26 0C       jnz  @@exit  ;no timeout               ;/
2784 1C 04       set  [io_porte_idx].6        ;idx_4xh ???
2786 CD 44 A7    call enqueue_int5_error_bit_4_bad_param   ;bad param?
2789 CC 1F DE    jmp  stop_and_motor_off      ;----->
                ;---
                @@reload_timeout:
278C A6 1E       mov  a,1Eh  ;30 decimal                ;\reload timeout
278E B7 78       mov  [test_timeout_1],a                ;/
                @@exit:
2790 81          ret
                ;------------------
                event_250hz_XXX_2791h:
2791 B6 68       mov  a,[68h]                   ;\check if already timeout
2793 27 09       jz   @@exit  ;already timeout  ;/
2795 3A 68       dec  [68h]                     ;\
2797 26 05       jnz  @@exit  ;no timeout       ;/
2799 A6 E0       mov  a,0E0h ;cx(E0)            ;\CXD2510Q Signal Processor
279B CD 43 33    call send_8bit_to_cxd2510q     ;/SpindleMotorStop
                @@exit:
279E 81          ret
                ;------------------
                memorize_sense_balance_result:
                 ;(blah, memorized here, but not used anywhere else)
279F B6 88       mov  a,[88h] ;msb                              ;\
27A1 C7 02 1A    mov  [memorized_sense_balance_result+0],a      ; 1st counter
27A4 B6 89       mov  a,[89h] ;lsb                              ;
27A6 C7 02 1B    mov  [memorized_sense_balance_result+1],a      ;/
27A9 B6 8A       mov  a,[8Ah] ;msb                              ;\
27AB C7 02 1C    mov  [memorized_sense_balance_result+2],a      ; other counter
27AE B6 8B       mov  a,[8Bh] ;lsb                              ;
27B0 C7 02 1D    mov  [memorized_sense_balance_result+3],a      ;/
27B3 A6 FF       mov  a,0FFh                                    ;\
27B5 08 40 01    jnz  [40h].4,@@this_flag                       ;
27B8 4F          mov  a,00h,slow                                ; result flag
                @@this_flag:                                    ;
27B9 C7 02 1E    mov  [memorized_sense_balance_result+4],a      ;/
27BC 81          ret
                ;------------------
                whatever_XXX_27BDh:     ;... subfunc for "cmd_19h_08h"
27BD A6 EE       mov  a,0EEh ;cx(EE)            ;\CXD2510Q Signal Processor
27BF CD 43 33    call send_8bit_to_cxd2510q     ;/RoughServo
27C2 A6 20       mov  a,20h  ;cx(20)            ;\CXA1782BR Servo Amplifier
27C4 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
27C7 AE 64       mov  x,64h ;100 decimal        ;\delay 100ms
27C9 CD 41 C5    call delay_x_timer2_steps      ;/
27CC CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C) ;FocusServoOnAndDefectOn
27CF A6 19       mov  a,19h  ;cx(19)            ;\CXA1782BR Servo Amplifier
27D1 CD 43 33    call send_8bit_to_cxa1782br    ;/TrackingGainAndSledKickHeight2
                ;- - -
27D4 CD 27 EC    call sense_balance_adjust_2000h_of_2000h ;\
27D7 CD 27 9F    call memorize_sense_balance_result       ;/
                ;- - -
27DA B6 8F       mov  a,[8Fh]          ;<-- !!  ;\CXA1782BR Servo Amplifier
27DC AB 30       add  a,30h  ;cx(30+n)          ; BalanceAdjust
27DE CD 43 33    call send_8bit_to_cxa1782br    ;/
27E1 A6 E6       mov  a,0E6h ;cx(E6)            ;\CXD2510Q Signal Processor
27E3 CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal
27E6 A6 25       mov  a,25h  ;cx(25)            ;\CXA1782BR Servo Amplifier
27E8 CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingServoOn
27EB 81          ret
                ;------------------
                sense_balance_adjust_2000h_of_2000h:
                 ;note: same as 21AA/21E8,
                 ;but with diff. cx(3) and diff. counters
27EC 19 40       res  [40h].4                   ;-initially result=0
27EE A6 20       mov  a,20h           ;2000h
27F0 B7 88       mov  [88h],a ;timeout.msb (lopcount, total number of measurements)
27F2 B7 8A       mov  [8Ah],a ;counter.msb (result, number of SENSE=x measurements)
27F4 A6 00       mov  a,0h
27F6 B7 89       mov  [89h],a ;timeout.lsb
27F8 B7 8B       mov  [8Bh],a ;counter.lsb
                ;- - - -
27FA C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\CXA1782BR Servo Amplifier
27FD AB 30       add  a,30h ;cx(30+n),sense(30) ; BalanceAdjust
27FF CD 43 33    call send_8bit_to_cxa1782br    ;/
                ;- - - -
                @@lop:                                          ;\
2802 0F 01 10    jz   [io_portb].7,@@next  ;SENSE pin           ;
2805 B6 8B       mov  a,[8Bh] ;counter.lsb      ;\              ;
2807 26 0A       jnz  @@keep_counter_msb        ; when SENSE=1, ;
2809 3A 8B       dec  [8Bh]   ;counter.lsb      ; decrease      ;
280B B6 8A       mov  a,[8Ah] ;counter.msb      ; counter until ;
280D 27 18       jz   @@reached_boundary        ; reaching the  ;
280F 3A 8A       dec  [8Ah]   ;counter.msb      ; wanted limit  ;
2811 20 02       jr   @@next                    ;               ;
                ;---                            ;               ;
                @@keep_counter_msb:             ;               ;
2813 3A 8B       dec  [8Bh]   ;counter.lsb      ;               ;
                @@next:                         ;/              ;
                ;- - - - - -                                    ;
2815 B6 89       mov  a,[89h] ;timeout.lsb      ;\              ;
2817 26 0A       jnz  @@keep_timeout_msb        ;               ;
2819 3A 89       dec  [89h]   ;timeout.lsb      ; loop more,    ;
281B B6 88       mov  a,[88h] ;timeout.msb      ; until timeout ;
281D 27 0A       jz   @@exit  ;--> timeout/exit ;               ;
281F 3A 88       dec  [88h]   ;timeout.msb      ;               ;
2821 20 DF       jr   @@lop           ;--> lop  ;               ;
                ;---                            ;               ;
                @@keep_timeout_msb:             ;               ;
2823 3A 89       dec  [89h]   ;timeout.lsb      ;               ;
2825 20 DB       jr   @@lop           ;--> lop  ;/              ;/
                ;---
                @@reached_boundary:
2827 18 40       set  [40h].4                   ;-result=1 (reached boundary)
                @@exit:
2829 81          ret
                ;------------------
                whatever_unused_282Ah:  ;UNUSED!
282A B6 6C       mov  a,[mech_task]                     ;\
282C A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
282E 27 06       jz   @@speed_shall_be_stable           ;
2830 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ;
2832 27 02       jz   @@speed_shall_be_stable           ;
2834 20 0A       jr   @@exit                            ;
                ;---                                    ;
                @@speed_shall_be_stable:                ;/
2836 05 45 07    jz   [45h].2,@@exit
2839 B6 51       mov  a,[subq_rx_buf+1] ;Track  ;\
283B 26 04       jnz  @@not_lead_in  ;in: A     ;/
283D CD 28 58    call @@exit_or_mech_kick_adj   ;-
                @@exit:
2840 81          ret
                ;---
                @@not_lead_in:   ;in: A=track
2841 C1 01 C6    cmp  a,[toc_first_track_no]    ;\
2844 26 0B       jnz  @@not_first_track         ;/
2846 3F 6B       mov  [seek_task],00h           ;-
2848 3F 70       mov  [seek_timeout],00h        ;-
284A 17 42       res  [42h].3 ;sled direction   ;\
284C A6 80       mov  a,80h   ;A=80h=max/fastest;
284E CC 1B A2    jmp  seek_dist_A               ;/
                ;---
                @@not_first_track:
2851 C6 01 C6    mov  a,[toc_first_track_no]    ;\
2854 5F          mov  x,00h,slow                ; seek 1st track
2855 CC 29 58    jmp  seek_track_a              ;/
                ;--- --- ---
                @@exit_or_mech_kick_adj:
2858 07 45 06    jz   [45h].3,@@exit2
285B 02 90 03    jnz  [license_flags].1,@@exit2
285E CC 21 2B    jmp  mech_kick_adj_gain_inj
                ;---
                @@exit2:
2861 81          ret
                ;------------------
                event_15hz_focus_error_period:
2862 B6 77       mov  a,[focus_error_timer]     ;\
2864 27 06       jz   @@exit                    ;/
2866 3A 77       dec  [focus_error_timer]       ;\
2868 26 02       jnz  @@exit                    ;/
286A 3F 9D       mov  [focus_error_count],00h   ;-forget errors (when above timer has expired, ie. when where has been a error-free period for circa one second)
                @@exit:
286C 81          ret
                ;------------------
                whatever_XXX_286Dh:
286D B6 6D       mov  a,[disc_task]                             ;\
286F A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever) ; do play
2871 27 2B       jz   @@do_play_audio                           ;/
2873 02 43 3D    jnz  [43h].1,enter_pause_state         ;--> do pause
2876 00 43 30    jnz  [43h].0,@@set_attentuation_off    ;--> do att off
                ;- - - - - --------
                whatever_XXX_2879h equ $
2879 01 6D 03    jz   [disc_task].dt_0_nodisk,@@keep_toc        ;\erase toc
287C CD 1D EE    call erase_toc_and_seek_pos0                   ; if no disc
                @@keep_toc:                                     ;/
287F 05 43 08    jz   [43h].2,@@already_same_track  ;\
2882 B6 79       mov  a,[current_track]             ;
2884 B1 51       cmp  a,[subq_rx_buf+1] ;Track      ; check if track is stable
2886 26 02       jnz  @@not_same_track              ; (clear flag if twice same)
2888 15 43       res  [43h].2     ;=is current      ;
                @@not_same_track:                   ;
                @@already_same_track:               ;/
288A A6 A0       mov  a,0A0h  ;cx(A040)    ;msb ;\
288C AE 40       mov  x,40h                ;mid ; CXD2510Q Signal Processor
288E BF 88       mov  [scratch_cxd_mid],x  ;mid ; Attentuation Off
2890 CD 43 2B    call send_16bit_to_cxd2510q    ;/
2893 10 43       set  [43h].0                   ;-
2895 C6 01 C6    mov  a,[toc_first_track_no]    ;\
2898 AE 00       mov  x,0h                      ; seek 1st track
289A CD 29 58    call seek_track_a              ;/
289D 81          ret
                ;---
                @@do_play_audio:
289E 1E BC       set  [drv_stat].7 ;play_active = true
28A0 1D BC       res  [drv_stat].6 ;seek_active = false
28A2 1B BC       res  [drv_stat].5 ;read_active = false
28A4 13 43       res  [43h].1
28A6 CC 25 A6    jmp  whatever_XXX_25A6h      ;--->
                ;---
                @@set_attentuation_off:
28A9 A6 A0       mov  a,0A0h  ;cx(A040)    ;msb ;\
28AB AE 40       mov  x,40h                ;mid ; CXD2510Q Signal Processor
28AD BF 88       mov  [scratch_cxd_mid],x  ;mid ; Attentuation Off
28AF CD 43 2B    call send_16bit_to_cxd2510q    ;/
28B2 81          ret
                ;------------------
                enter_pause_state:
28B3 B6 6D       mov  a,[disc_task]                             ;\
28B5 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever) ;
28B7 27 1C       jz   @@abort_seek_play_read                    ;/
28B9 00 43 03    jnz  [43h].0,@@skip_call               ;\
28BC CD 28 79    call whatever_XXX_2879h     ;--->      ;
                @@skip_call:                            ;/
28BF 03 43 04    jz   [43h].1,@@toggle_on               ;\
28C2 13 43       res  [43h].1                           ;
28C4 20 02       jr   @@toggle_done                     ; toggle flag
                ;---                                    ;
                @@toggle_on:                            ;
28C6 12 43       set  [43h].1                           ;
                @@toggle_done:                          ;/
28C8 03 43 09    jz   [43h].1,@@exit                    ;-
28CB B6 6D       mov  a,[disc_task]                     ;\
28CD A1 04       cmp  a,(1 shl dt_2_whatever)           ;
28CF 26 03       jnz  @@exit                            ;
28D1 CD 42 8C    call whatever_XXX_428Ch     ;--->      ;
                @@exit:                                 ;/
28D4 81          ret
                ;---
                @@abort_seek_play_read:
28D5 1F BC       res  [drv_stat].7 ;play_active = false ;\
28D7 1D BC       res  [drv_stat].6 ;seek_active = false ;
28D9 1B BC       res  [drv_stat].5 ;read_active = false ;/
28DB 12 43       set  [43h].1                           ;-
28DD CC 25 A6    jmp  whatever_XXX_25A6h ;--->          ;-
                ;------------------
                force_motor_off:
28E0 00 6D 0C    jnz  [disc_task].dt_0_nodisk,@@no_disc         ;-
                ;- - - -
28E3 CD 29 12    call mark_read_seek_play_off_and_stopped       ;-
28E6 01 43 03    jz   [43h].0,@@skip                            ;\
28E9 CD 42 BE    call whatever_XXX_42BEh                        ;
                @@skip:                                         ;/
                ;- - - -
                @@finish:
28EC CC 28 F7    jmp  fallback_to_session_1_and_manipulate_flags
                ;---
                @@no_disc:
28EF CD 29 12    call mark_read_seek_play_off_and_stopped
28F2 CD 1D EE    call erase_toc_and_seek_pos0
28F5 20 F5       jr   @@finish
                ;------------------
                fallback_to_session_1_and_manipulate_flags:
28F7 CD 16 78    call fallback_to_session_1
28FA 11 43       res  [43h].0
28FC 13 43       res  [43h].1
28FE 17 41       res  [41h].3
2900 1D 44       res  [scex_flags].6
2902 4F          mov  a,00h,slow
2903 B7 5D       mov  [wanted_subq_mm],a    ;=00h   ;MM ;\
2905 B7 5E       mov  [wanted_subq_ss],a    ;=00h   ;SS ;
2907 B7 5F       mov  [wanted_subq_ff],a    ;=00h   ;FF ;/
2909 B7 4D       mov  [wanted_data_mm],a    ;=00h   ;MM ;\
290B B7 4E       mov  [wanted_data_ss],a    ;=00h   ;SS ;
290D B7 4F       mov  [wanted_data_ff],a    ;=00h   ;FF ;/
290F B7 9D       mov  [focus_error_count],a ;=00h       ;-
2911 81          ret
                ;------------------
                mark_read_seek_play_off_and_stopped:
2912 A6 02       mov  a,(1 shl dt_1_stopped)    ;\
2914 B7 6D       mov  [disc_task],a             ;/
                ;- - - - - --------
                mark_read_seek_play_off:
2916 1B BC       res  [drv_stat].5 ;read_active = false
2918 1D BC       res  [drv_stat].6 ;seek_active = false
291A 1F BC       res  [drv_stat].7 ;play_active = false
291C 81          ret
                ;------------------
                seek_next_track:   ;used only by UNUSED! function
291D 01 43 0B    jz   [43h].0,@@reject
2920 C6 02 11    mov  a,[subq_position+1]  ;Track
2923 CD 43 DC    call increment_packed_bcd_a
2926 AE 00       mov  x,0h
2928 CC 29 58    jmp  seek_track_a     ;------>
                ;---
                @@reject:
292B A6 01       mov  a,1h
292D 81          ret
                ;------------------
                seek_prev_track_or_begin_of_curr_track:  ;used only by UNUSED!
292E 0B 6D 03    jz   [disc_task].dt_5_seek,@@notyet_seeking    ;\
2931 02 42 20    jnz  [42h].1,@@seek_begin_of_curr_track        ;
                @@notyet_seeking:                               ;/
2934 05 6D 39    jz   [disc_task].dt_2_whatever,seek_prev_track
2937 C6 02 11    mov  a,[subq_position+1]  ;Track
293A A1 AA       cmp  a,0AAh    ;AAh=Lead-Out           ;\
293C 27 19       jz   @@seek_begin_of_last_track        ;/
293E C6 02 13    mov  a,[subq_position+3]               ;\
2941 26 11       jnz  @@seek_begin_of_curr_track        ;
2943 C6 02 14    mov  a,[subq_position+4]               ;
2946 26 0C       jnz  @@seek_begin_of_curr_track        ;
2948 C6 02 12    mov  a,[subq_position+2]               ;
294B 26 07       jnz  @@seek_begin_of_curr_track        ;/
294D C6 02 11    mov  a,[subq_position+1]  ;Track       ;\
2950 26 02       jnz  @@seek_begin_of_curr_track        ;/
2952 20 1C       jr   seek_prev_track                   ;----->
                ;---
                @@seek_begin_of_curr_track:
2954 C6 02 11    mov  a,[subq_position+1]  ;Track
                @@seek_begin_of_last_track:  ;<-- in: AAh, will be translated to LAST track by below "call invoke_actual_seek_track"
2957 5F          mov  x,00h,slow
                ;- - - - - --------
                seek_track_a:       ;in: A=track, X=zero?
2958 C7 01 F9    mov  [desired_track],a ;track  ;-
295B 13 42       res  [42h].1                   ;\
295D A3 00       cmp  x,0h                      ;
295F 27 05       jz   @@cont                    ;
2961 CF 01 FA    mov  [desired_index],x ;index? ;
2964 12 42       set  [42h].1 ;mark index-seek? ;   <--- uh, undone below?
                @@cont:                         ;/
2966 13 42       res  [42h].1                   ;<------ uh, smash above
2968 A6 20       mov  a,(1 shl dt_5_seek)       ;\
296A B7 6D       mov  [disc_task],a             ;/
296C CD 42 46    call invoke_actual_seek_track  ;--> invoke actual seeking
296F 81          ret
                ;------------------
                seek_prev_track:  ;used ONLY by UNUSED stuff! BUGGED
2970 01 43 14    jz   [43h].0,@@reject
2973 C6 01 C6    mov  a,[toc_first_track_no]    ;\
2976 B1 51       cmp  a,[subq_rx_buf+1] ;Track  ; seek prev track
2978 26 05       jnz  @@prev                    ; (or first, if curr track=1)
297A C6 01 C6    mov  a,[toc_first_track_no]    ;
297D 20 05       jr   @@this                    ;/
                ;---
                @@prev:
297F B6 51       mov  a,[subq_rx_buf+1] ;Track
2981 CD 43 E3    call bcd_subtract_a_minus_io_portb  ;uh, why port b ??? ;BUG!
                @@this:
2984 5F          mov  x,00h,slow
2985 20 D1       jr   seek_track_a
                ;---
                @@reject:
2987 C6 01 F9    mov  a,[desired_track]
298A CD 43 DC    call increment_packed_bcd_a    ;what/why this?
298D C7 01 F9    mov  [desired_track],a
2990 81          ret
                ;------------------
                audio_fast_forward:
2991 A6 00       mov  a,0h              ;\
2993 B7 8F       mov  [8Fh],a           ;/scratch_byte = direction FORWARD
2995 C6 02 11    mov  a,[subq_position+1]               ;\
2998 A1 AA       cmp  a,0AAh    ;AAh=Lead-Out           ; go (unless lead-out)
299A 26 05       jnz  audio_fast_forward_or_backward    ;/
299C 81          ret
                ;------------------
                audio_fast_backward:
299D A6 FF       mov  a,0FFh            ;\
299F B7 8F       mov  [8Fh],a           ;/scratch_byte = direction BACKWARD
                ;- - - - - --------
                audio_fast_forward_or_backward:
29A1 A6 00       mov  a,0h  ;blah (might be return value for @@exit, but caller isn't actually using it)
29A3 04 6D 03    jnz  [disc_task].dt_2_whatever,@@cont  ;\
29A6 07 6D 1C    jz   [disc_task].dt_3_whatever,@@exit  ;
                @@cont:                                 ;/
29A9 A6 A1       mov  a,0A1h  ;cx(A140)    ;msb ;\
29AB AE 40       mov  x,40h                ;mid ; CXD2510Q Signal Processor
29AD BF 88       mov  [scratch_cxd_mid],x  ;mid ; Attentuation -12 dB
29AF CD 43 2B    call send_16bit_to_cxd2510q    ;/
29B2 15 43       res  [43h].2
29B4 A6 14       mov  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)
29B6 B7 6D       mov  [disc_task],a
29B8 A6 01       mov  a,1h                      ;\
29BA B7 63       mov  [63h],a                   ;/
29BC B6 8F       mov  a,[8Fh]         ;scratch_byte --> direction (00h=forward, FFh=backward)
29BE 16 42       set  [42h].3 ;sled direction   ;\translate
29C0 4C          inc  a                         ; 00h --> nz --> 1 --> forward
29C1 26 02       jnz  @@exit                    ; FFh --> z  --> 0 --> backward
29C3 17 42       res  [42h].3 ;sled direction   ;/
                @@exit:
29C5 81          ret
                ;------------------
                init_various_idx_stuff:    ;(used several times)
29C6 A6 08       mov  a,08h                             ;\
29C8 B7 B6       mov  [curr_idx_03h_w_decoder_control],a;
29CA AE 03       mov  x,idx_03h_w_decoder_control       ;
29CC BF 04       mov  [io_porte_idx],x                  ;
29CE CD 40 FB    call write_data_bus                    ;/
29D1 AE 00       mov  x,idx_00h_w_drv_interface ;\
29D3 BF 04       mov  [io_porte_idx],x          ; init drive interface
29D5 A6 28       mov  a,28h                     ; (data order, clock speed)
29D7 CD 40 FB    call write_data_bus            ;/
29DA AE 01       mov  x,idx_01h_w_config1_sram  ;\
29DC BF 04       mov  [io_porte_idx],x          ; init config 1
29DE A6 40       mov  a,40h                     ; (sram size 32Kx8, clock speed)
29E0 CD 40 FB    call write_data_bus            ;/
29E3 AE 02       mov  x,idx_02h_w_config2_audio ;\
29E5 BF 04       mov  [io_porte_idx],x          ; init config 2
29E7 A6 02       mov  a,02h                     ; (audio and adpcm related)
29E9 CD 40 FB    call write_data_bus            ;/
29EC AE 0A       mov  x,idx_0Ah_w_clrctl        ;\
29EE BF 04       mov  [io_porte_idx],x          ;
29F0 A6 70       mov  a,70h                     ;
29F2 B7 BA       mov  [curr_idx_0Ah_w_clrctl],a ;
29F4 CD 40 FB    call write_data_bus            ;/
29F7 A6 00       mov  a,00h                     ;\  UNLIKE above?
29F9 B7 BA       mov  [curr_idx_0Ah_w_clrctl],a ;/
29FB AE 0B       mov  x,idx_0Bh_w_int_ack       ;\
29FD BF 04       mov  [io_porte_idx],x          ; acknowlege ALL "interrupts"
29FF A6 FF       mov  a,0FFh                    ;
2A01 CD 40 FB    call write_data_bus            ;/
2A04 AE 09       mov  x,idx_09h_w_int_mask              ;\
2A06 BF 04       mov  [io_porte_idx],x                  ;
2A08 A6 DE       mov  a,0DEh                            ;
2A0A B7 B8       mov  [curr_idx_09h_w_int_mask],a       ;
2A0C CD 40 FB    call write_data_bus                    ;/
2A0F A6 00       mov  a,0h                                              ;\
2A11 B7 A3       mov  [curr_idx_10h_w_drv_address_lo],a                 ;
2A13 B7 A4       mov  [curr_idx_11h_w_drv_address_hi],a                 ;
2A15 B7 A5       mov  [curr_idx_12h_w_drv_address_bit16],a              ;
2A17 AE 10       mov  x,idx_10h_w_drv_address_lo                        ;
2A19 BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
2A1B CD 40 FB    call write_data_bus                                    ;
2A1E 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
2A20 CD 40 FB    call write_data_bus                                    ;
2A23 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
2A25 CD 40 FB    call write_data_bus                                    ;/
2A28 AE 04       mov  x,idx_04h_w_drv_maxaddr_lo                        ;\
2A2A BF 04       mov  [io_porte_idx],x ;=04h=idx_04h_w_drv_maxaddr_lo   ;
2A2C A6 23       mov  a,23h                                             ;
2A2E B7 A0       mov  [curr_idx_04h_w_drv_maxaddr_lo],a                 ;
2A30 CD 40 FB    call write_data_bus                                    ;
2A33 3C 04       inc  [io_porte_idx] ;=05h=idx_05h_w_drv_maxaddr_hi     ;
2A35 A6 09       mov  a,9h                                              ;
2A37 B7 A1       mov  [curr_idx_05h_w_drv_maxaddr_hi],a                 ;
2A39 CD 40 FB    call write_data_bus                                    ;
2A3C 3C 04       inc  [io_porte_idx] ;=06h=idx_06h_w_drv_maxaddr_bit16  ;
2A3E A6 00       mov  a,0h                                              ;
2A40 B7 A2       mov  [curr_idx_06h_w_drv_maxaddr_bit16],a              ;
2A42 CD 40 FB    call write_data_bus                                    ;/
2A45 AE 0C       mov  x,idx_0Ch_w_host_len_lo                           ;\
2A47 BF 04       mov  [io_porte_idx],x ;=0Ch=idx_0Ch_w_host_len_lo      ;
2A49 B6 A8       mov  a,[curr_idx_0Ch_w_host_len_lo]     ;old size.lsb? ;
2A4B CD 40 FB    call write_data_bus                                    ;
2A4E 3C 04       inc  [io_porte_idx]   ;=0Dh=idx_0Dh_w_host_len_hi      ;
2A50 A6 40       mov  a,40h ;aka [curr_idx_0Dh_w_host_len_hi].6   ;huh? ;
2A52 B7 A9       mov  [curr_idx_0Dh_w_host_len_hi],a                    ;
2A54 CD 40 FB    call write_data_bus                                    ;/
2A57 81          ret
                ;------------------
;:              ;:----------------- Handle incoming sectors (and commands)
                ;------------------
                main_func_cmd_params_sector:
2A58 CD 41 1F    call get_idx_01h_r_decoder_status_and_idx_11h_r_psx_fifo_flags
2A5B 14 09       set  [io_intsr].2      ;ack XINT (blah, some unused relict)
                ;- - - -
2A5D CD 2A F6    call handle_cdrom_sector      ;--------> handle cdrom sector
                ;- - - -
2A60 0F B5 03    jz   [curr_idx_11h_r_psx_fifo_flags].7,@@no_cmd        ;\
2A63 CD 2D 50    call receive_and_handle_cmd_param  ;unless IRQ pending ; cmd
                @@no_cmd:                                               ;/
                ;- - - -
2A66 0D 50 1A    jz   [subq_rx_buf+0].6,@@audio ;ADR/Control Bit6=Data  ;\audio
2A69 01 6A 17    jz   [datamode_flag].0,@@audio                                   ;/
                ;- - - - data...
2A6C 01 47 0F    jz   [47h].0,@@skip_add_00_00_01               ;\      ;\
2A6F 02 47 0C    jnz  [47h].1,@@skip_add_00_00_01               ;/      ;
2A72 C6 02 26    mov  a,[sector_header+6] ;SubMode              ;\      ;
2A75 A4 40       and  a,40h ;bit6 (RT=realtime)                 ;       ;
2A77 26 05       jnz  @@skip_add_00_00_01                       ;/      ;
2A79 12 47       set  [47h].1                                   ;-      ;
2A7B CD 3F 05    call whatever_XXX_3F05h    ;--------> add 00:00:01 to something (maybe skip the corrupt sector... but that, only if NOT realtime?)
                @@skip_add_00_00_01:                                    ;/
2A7E 11 47       res  [47h].0
2A80 00 45 02    jnz  [45h].0,@@sector_needs_processing  ;sector_needs_processing
                @@audio:
2A83 20 65       jr   @@reject_sector
                ;--- --- --- ---
                @@sector_needs_processing:
2A85 06 47 03    jnz  [47h].3,@@cont1                           ;\
2A88 07 46 5F    jz   [46h].3,@@reject_sector                   ;
                @@cont1:                                        ;/
2A8B 08 6D 5C    jnz  [disc_task].dt_4_fast,@@reject_sector     ;-
2A8E 04 6D 03    jnz  [disc_task].dt_2_whatever,@@cont2         ;\
2A91 07 6D 56    jz   [disc_task].dt_3_whatever,@@reject_sector ;
                @@cont2:                                        ;/
2A94 0A 4C 53    jnz  [toc_flags].5,@@reject_sector             ;-
2A97 B6 6B       mov  a,[seek_task]                             ;\
2A99 26 4F       jnz  @@reject_sector                           ;/
                ;- - - - ADPCM ...
2A9B 05 46 3B    jz   [46h].2,@@adpcm_reject  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
2A9E 03 B0 38    jz   [curr_idx_00h_r_ecc_status].1,@@adpcm_reject  ;want MODE2
2AA1 07 BB 0C    jz   [drv_mode].3,@@adpcm_unfiltered ;xa_filter (0=off)
2AA4 B6 84       mov  a,[rx_sect_subheader+0]           ;\
2AA6 B1 6E       cmp  a,[drv_filter_file]               ;
2AA8 26 2F       jnz  @@adpcm_reject                    ;
2AAA B6 85       mov  a,[rx_sect_subheader+1]           ;
2AAC B1 6F       cmp  a,[drv_filter_channel]            ;
2AAE 26 29       jnz  @@adpcm_reject                    ;/
                @@adpcm_unfiltered:
2AB0 0D BB 26    jz   [drv_mode].6,@@adpcm_reject ;xa_adpcm
2AB3 C6 02 26    mov  a,[sector_header+6] ;SubMode      ;\
2AB6 A4 40       and  a,40h ;bit6 (RT=realtime)         ;
2AB8 27 1F       jz   @@adpcm_reject                    ;
2ABA C6 02 26    mov  a,[sector_header+6] ;SubMode      ;
2ABD A4 04       and  a,4h ;bit2 (Audio)                ;
2ABF 27 18       jz   @@adpcm_reject                    ;/
2AC1 B6 87       mov  a,[rx_sect_subheader+3]           ;\ADPCM CodingInfo (CI)
2AC3 A4 55       and  a,55h                             ;  bit0=stereo
2AC5 AE 1B       mov  x,idx_1Bh_w_adpcm_codinginfo      ;  bit2=slow_rate
2AC7 BF 04       mov  [io_porte_idx],x                  ;  bit4=bits_per_sample
2AC9 CD 40 FB    call write_data_bus                    ;/ bit6=emphasis
2ACC B6 AA       mov  a,[curr_idx_05h_r_drv_addr_base]  ;\
2ACE AA 80       or   a,80h    ;bit7=adpcm enable       ; ADPCM source address
2AD0 AE 19       mov  x,idx_19h_w_adpcm_addr_kick       ; and ADPCM enable
2AD2 BF 04       mov  [io_porte_idx],x                  ;
2AD4 CD 40 FB    call write_data_bus                    ;/
2AD7 20 11       jr   @@reject_sector
                ;---
                @@adpcm_reject:
                ;- - - - Data ...
2AD9 07 BB 09    jz   [drv_mode].3,@@data_unfiltered ;xa_filter (0=off)
2ADC C6 02 26    mov  a,[sector_header+6] ;SubMode      ;\
2ADF A4 44       and  a,44h ;\bit2 (Audio)           ;???!!! vs FILTER !!! XXX
2AE1 A1 44       cmp  a,44h ;/bit6 (RT=realtime)     ;???!!! vs FILTER !!! XXX
2AE3 27 05       jz   @@data_reject                     ;/
                @@data_unfiltered:
                ;- - - -
                ;FIRST attempt to deliver NEWLY received data sector
                ;- - - -
2AE5 CD 3F D6    call accept_sector_send_int1      ;<----- ACCEPT, send int1
                 ;above delivery may fail if an interrupt was pending,
                 ;if so, a second delivery attempt will be done (call retry_sector_delivery),
                 ;however, that second delivery will be taken ONLY if
                 ;file/channel match the filter setting (whilst above code
                 ;is delivering DATA regardless of the file/channel values)
2AE8 20 02       jr   @@data_done
                ;---
                @@data_reject:
                @@reject_sector:
2AEA 11 45       res  [45h].0   ;... sector_needs_processing = FALSE (rejected)
                @@data_done:
2AEC 01 48 03    jz   [48h].0,@@skip_mute               ;\
2AEF CD 40 24    call mute_cd_da_and_some_extra_stuff   ;
                @@skip_mute:                            ;/
2AF2 CD 3C 6E    call enter_data_or_audio_mode          ;-enter data or audio
2AF5 81          ret
                ;------------------
                handle_cdrom_sector:
2AF6 AE 07       mov  x,idx_07h_r_int_stat              ;\
2AF8 BF 04       mov  [io_porte_idx],x                  ;
2AFA CD 40 EF    call read_data_bus                     ;
2AFD B7 B3       mov  [curr_idx_07h_r_int_stat],a       ;/
2AFF 27 33       jz   @@quick_skip  ;quick skip when [curr_idx_07h_r_int_stat]=0
2B01 A4 FD       and  a,0FDh  ;[curr_idx_07h_r_int_stat];\
2B03 AE 0B       mov  x,idx_0Bh_w_int_ack               ; ack all "interrupts",
2B05 BF 04       mov  [io_porte_idx],x                  ; except bit1=HostCmd
2B07 CD 40 FB    call write_data_bus                    ;/
                ;- - - -
2B0A 0F B3 03    jz   [curr_idx_07h_r_int_stat].7,@@not7;\DRVOVRN Drive Overrun
2B0D CD 2B 46    call set_drv_maxaddr_05D23h            ;
                @@not7:                                 ;/
2B10 0D B3 03    jz   [curr_idx_07h_r_int_stat].6,@@not6;\DECTOUT Decoder Time Out
2B13 CD 2B 64    call eventually_enter_audio_mode       ;
                @@not6:                                 ;/
2B16 0B B3 03    jz   [curr_idx_07h_r_int_stat].5,@@not5;\RSLTEMPT Result Empty
2B19 CD 2B 6B    call dummy_ret_1                       ; blah, not handled here
                @@not5:                                 ;/
2B1C 09 B3 03    jz   [curr_idx_07h_r_int_stat].4,@@not4;\RTADPEND Real-time ADPCM end
2B1F CD 2B 6C    call dummy_ret_2                       ; blah, not handled here
                @@not4:                                 ;/
2B22 07 B3 03    jz   [curr_idx_07h_r_int_stat].3,@@not3;\HDMACMP Host DMA Complete
2B25 CD 2B 6D    call retry_sector_delivery ;odd filter ;
                @@not3:                                 ;/
2B28 05 B3 03    jz   [curr_idx_07h_r_int_stat].2,@@not2;\DECINT Decoder Interrupt
2B2B CD 2B 8F    call receive_sector                    ;
                @@not2:                                 ;/
                ;note: [curr_idx_07h_r_int_stat].1      ;\HSTCMND Host Command
                ;is handled elsewhere                   ;/
2B2E 01 B3 03    jz   [curr_idx_07h_r_int_stat].0,@@not0;\HCRISD Host Chip Reset Issued
2B31 CD 3C 68    call stop_and_soft_reset  ;... RESET ? ;
                @@not0:                                 ;/
                ;- - - -
                @@quick_skip:  ;<-- stupid, should skip below simulated-ack
2B34 B6 B3       mov  a,[curr_idx_07h_r_int_stat]       ;\simulate above int_ack
2B36 A4 02       and  a,02h  ;bit1                      ; in RAM
2B38 B7 B3       mov  [curr_idx_07h_r_int_stat],a       ;/
2B3A AE 09       mov  x,idx_09h_w_int_mask              ;\set int_mask = DEh
2B3C BF 04       mov  [io_porte_idx],x                  ; blah: it's already DEh
2B3E A6 DE       mov  a,0DEh ;not bit5,bit0             ; blah: IRQ2 isn't used
2B40 B7 B8       mov  [curr_idx_09h_w_int_mask],a       ; ie. totally useless
2B42 CD 40 FB    call write_data_bus                    ;/
2B45 81          ret
                ;------------------
                set_drv_maxaddr_05D23h:
2B46 AE 04       mov  x,idx_04h_w_drv_maxaddr_lo                        ;\
2B48 BF 04       mov  [io_porte_idx],x ;=04h=idx_04h_w_drv_maxaddr_lo   ;
2B4A A6 23       mov  a,23h                                             ;
2B4C B7 A0       mov  [curr_idx_04h_w_drv_maxaddr_lo],a                 ;
2B4E CD 40 FB    call write_data_bus                                    ;/
2B51 3C 04       inc  [io_porte_idx] ;=05h=idx_05h_w_drv_maxaddr_hi     ;\
2B53 A6 5D       mov  a,5Dh                                             ;
2B55 B7 A1       mov  [curr_idx_05h_w_drv_maxaddr_hi],a                 ;
2B57 CD 40 FB    call write_data_bus                                    ;/
2B5A 3C 04       inc  [io_porte_idx] ;=06h=idx_06h_w_drv_maxaddr_bit16  ;\
2B5C A6 00       mov  a,0h                                              ;
2B5E B7 A2       mov  [curr_idx_06h_w_drv_maxaddr_bit16],a              ;
2B60 CD 40 FB    call write_data_bus                                    ;/
2B63 81          ret
                ;------------------
                eventually_enter_audio_mode:
2B64 0C 50 03    jnz  [subq_rx_buf+0].6,@@exit    ;ADR/Control Bit6=Data
2B67 CD 40 73    call enter_cdda_audio_mode
                @@exit:
2B6A 81          ret
                ;------------------
                dummy_ret_1:
2B6B 81          ret
                ;------------------
                dummy_ret_2:
2B6C 81          ret
                ;------------------
                retry_sector_delivery:
                      ;... SECOND and LAST attempt to deliver OLD PENDING sector
                      ;    (done immediately before receiving NEW sector)
                      ;... accept/reject filter
2B6D 17 B5       res  [curr_idx_11h_r_psx_fifo_flags].3      ;CHANGE ?
2B6F 01 45 1C    jz   [45h].0,@@exit    ;... sector_needs_processing
2B72 07 46 19    jz   [46h].3,@@exit    ;... get intact non-corrupt sector
2B75 0A 4C 16    jnz  [toc_flags].5,@@exit   ;... wrong session (or session needs loading?)
2B78 B6 6B       mov  a,[seek_task]                     ;\
2B7A 26 12       jnz  @@exit                            ;/
2B7C 07 BB 0C    jz   [drv_mode].3,@@unfiltered ;xa_filter      ;\ (0=off, 1=filter) --> accept (no filter)
2B7F B6 84       mov  a,[rx_sect_subheader+0]                   ;
2B81 B1 6E       cmp  a,[drv_filter_file]         ;FILTER on NON-ADPCM ???
2B83 26 09       jnz  @@exit                                    ;
2B85 B6 85       mov  a,[rx_sect_subheader+1]                   ; BUG: the FIRST delivery attempt (at 2AE5h) isn't checking file/channel at all, so SECOND delivery attempt may REJECT cases that would have PASSED in FIRST attempt
2B87 B1 6F       cmp  a,[drv_filter_channel]                    ;
2B89 26 03       jnz  @@exit                                    ;
                @@unfiltered:                                   ;/
2B8B CD 3F D6    call accept_sector_send_int1        ;<----- ACCEPT, send int1
                @@exit:
2B8E 81          ret
                ;------------------
                receive_sector:
2B8F 17 46       res  [46h].3
2B91 0D 50 11    jz   [subq_rx_buf+0].6,@@exit1    ;ADR/Control Bit6=Data
2B94 03 BC 0E    jz   [drv_stat].1,@@exit1 ;spindle_motor
2B97 05 41 0B    jz   [41h].2,@@exit1
2B9A 04 49 09    jnz  [49h].2,@@do_receive
2B9D 0F 40 05    jz   [40h].7,@@exit1
2BA0 0A 42 02    jnz  [42h].5,@@exit1
2BA3 20 01       jr   @@do_receive
                @@exit1:
2BA5 81          ret
                ;---
                @@do_receive:
2BA6 AE 05       mov  x,idx_05h_r_drv_addr_base         ;\
2BA8 BF 04       mov  [io_porte_idx],x                  ; base address (in 1K-steps) of most recently decoded sector
2BAA CD 40 EF    call read_data_bus                     ;
2BAD B7 AA       mov  [curr_idx_05h_r_drv_addr_base],a  ;/
2BAF AE 03       mov  x,idx_03h_r_sector_header         ;\
2BB1 BF 04       mov  [io_porte_idx],x                  ;
2BB3 CD 40 EF    call read_data_bus             ;MM     ; read
2BB6 B7 80       mov  [rx_sect_header+0],a              ; Header
2BB8 CD 40 EF    call read_data_bus             ;SS     ; (MM,SS,FF,MODE)
2BBB B7 81       mov  [rx_sect_header+1],a              ;
2BBD CD 40 EF    call read_data_bus             ;FF     ;
2BC0 B7 82       mov  [rx_sect_header+2],a              ;
2BC2 CD 40 EF    call read_data_bus             ;Mode   ;
2BC5 B7 83       mov  [rx_sect_header+3],a              ;/
2BC7 AE 00       mov  x,idx_00h_r_ecc_status            ;\
2BC9 BF 04       mov  [io_porte_idx],x                  ; read ECC status
2BCB CD 40 EF    call read_data_bus                     ;
2BCE B7 B0       mov  [curr_idx_00h_r_ecc_status],a     ;/
2BD0 CD 2C 66    call verify_sector_edc_and_ecc         ;\
2BD3 09 40 03    jz   [40h].4,@@no_ecc_edc_error ;ok    ; verify EDC and ECC
2BD6 CC 2C 42    jmp  @@corrupt_sector           ;bad   ;
                @@no_ecc_edc_error:              ;ok    ;/
2BD9 AE 02       mov  x,idx_02h_r_hdr_error_flgs        ;\
2BDB BF 04       mov  [io_porte_idx],x                  ;
2BDD CD 40 EF    call read_data_bus                     ; header/subheader
2BE0 B7 B2       mov  [curr_idx_02h_r_hdr_error_flgs],a ; error flags
2BE2 B6 B2       mov  a,[curr_idx_02h_r_hdr_error_flgs] ;
2BE4 26 5C       jnz  @@corrupt_sector                  ;/
2BE6 B6 80       mov  a,[rx_sect_header+0] ;MM          ;\
2BE8 CD 2F 5E    call verify_packed_bcd_a               ;
2BEB 24 55       jnc  @@corrupt_sector                  ;
2BED B6 81       mov  a,[rx_sect_header+1] ;SS          ;
2BEF CD 2F 5E    call verify_packed_bcd_a               ;
2BF2 24 4E       jnc  @@corrupt_sector                  ;
2BF4 B6 82       mov  a,[rx_sect_header+2] ;FF          ;
2BF6 CD 2F 5E    call verify_packed_bcd_a               ;
2BF9 24 47       jnc  @@corrupt_sector                  ;/
2BFB CD 2C 8B    call verify_sector_hdr_vs_prev_hdr     ;\verify sector header
2BFE 09 40 41    jz   [40h].4,@@corrupt_sector          ;/  vs PREVIOUS header
2C01 CD 2C D0    call verify_sector_hdr_vs_subq_pos     ;\verify sector header
2C04 09 40 3B    jz   [40h].4,@@corrupt_sector          ;/  vs SUBQ position
2C07 AE 04       mov  x,idx_04h_r_sector_subheader      ;\
2C09 BF 04       mov  [io_porte_idx],x                  ;
2C0B AE 00       mov  x,0h                              ; read
                @@read_subheader_lop:                   ; Subheader
2C0D CD 40 EF    call read_data_bus                     ; (file,channel,sm,ci)
2C10 E7 84       mov  [rx_sect_subheader+x],a           ;
2C12 5C          inc  x                                 ;
2C13 9F          mov  a,x                               ;
2C14 A1 04       cmp  a,4h                              ;
2C16 26 F5       jnz  @@read_subheader_lop              ;/
2C18 AE 07       mov  x,idx_07h_r_int_stat                        ;\
2C1A BF 04       mov  [io_porte_idx],x                            ; check if
2C1C CD 40 EF    call read_data_bus                               ; intact or
2C1F B7 AC       mov  [temp_idx_07h_r_int_stat],a                 ; corrupt
2C21 05 AC 02    jz   [temp_idx_07h_r_int_stat].2,@@intact_sector ; sector
2C24 20 1C       jr   @@corrupt_sector                            ;/
                ;---
                @@intact_sector:      ;intact, non-corrupt
2C26 0C 45 09    jnz  [45h].6,@@already_found_match ;already found match-up ;\
2C29 0F 4C 03    jz   [toc_flags].7,@@verify_match  ;toc_has_session_info   ;
2C2C 0D 4C 03    jz   [toc_flags].6,@@already_found_match ;session_is_loaded;
                @@verify_match:  ;verify SUB-Q vs DATA position ...         ;
2C2F CD 3E A7    call calc_difference_between_subq_and_data_msf             ;
                @@already_found_match:                                      ;/
2C32 16 46       set  [46h].3      ;... get intact non-corrupt sector
2C34 17 47       res  [47h].3
2C36 10 45       set  [45h].0      ;... sector_needs_processing
2C38 CD 2D 23    call get_data_header_and_subheader
2C3B 00 49 26    jnz  [49h].0,@@exit2
2C3E CD 3C AC    call whatever_XXX_3CACh ;... check if SEEK DONE ? why that/here?
2C41 81          ret
                ;---
                @@corrupt_sector:    ;sector has errors... bad BCD... bad EDC?
2C42 08 6D 1F    jnz  [disc_task].dt_4_fast,@@exit2
2C45 B6 6B       mov  a,[seek_task]                     ;\
2C47 26 1B       jnz  @@exit2                           ;/
2C49 04 47 11    jnz  [47h].2,@@allow_corrupt_sector   ;ReadN/ReadS flag (1=ReadS)
2C4C 05 46 07    jz   [46h].2,@@refuse_corrupt_sector  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
2C4F C6 02 26    mov  a,[sector_header+6]     ;SubMode  ;\
2C52 A4 40       and  a,40h ;bit6 (RT=realtime)         ;
2C54 26 07       jnz  @@allow_corrupt_sector            ;/
                @@refuse_corrupt_sector:
2C56 10 47       set  [47h].0      ;<--- RETRY READ request? or FATAL ERROR flag?
2C58 17 47       res  [47h].3
2C5A 11 45       res  [45h].0         ;... sector_needs_processing = FALSE
2C5C 81          ret
                ;---
                @@allow_corrupt_sector:  ;ACCEPT CORRUPT (on realtime and/or ReadS)
2C5D 11 47       res  [47h].0
2C5F 16 47       set  [47h].3        ;... mark accepted ALTHOUGH CORRUPT !?!
2C61 10 45       set  [45h].0           ;... sector_needs_processing = TRUE
2C63 81          ret
                ;---
                @@exit2:
2C64 9D          nop     ;hmmm... blah!
2C65 81          ret
                ;------------------
                verify_sector_edc_and_ecc:
2C66 18 40       set  [40h].4   ;<-- result initially CORRUPT
2C68 0A B0 1F    jnz  [curr_idx_00h_r_ecc_status].5,@@exit  ;--> correction inhibit
2C6B 02 B0 08    jnz  [curr_idx_00h_r_ecc_status].1,@@mode2 ;--> MODE2
                @@want_good_edc_and_ecc:
2C6E 07 B0 19    jz   [curr_idx_00h_r_ecc_status].3,@@exit  ;--> EDC bad
2C71 05 B0 16    jz   [curr_idx_00h_r_ecc_status].2,@@exit  ;--> ECC bad
2C74 20 12       jr   @@okay
                ;---
                @@mode2:
2C76 05 46 0C    jz   [46h].2,@@mode2_audio  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
2C79 00 B0 02    jnz  [curr_idx_00h_r_ecc_status].0,@@mode2_form2 ;--> FORM2
2C7C 20 F0       jr   @@want_good_edc_and_ecc    ;<-- mode2_form1
                ;---
                @@mode2_form2:
2C7E 0E B0 04    jnz  [curr_idx_00h_r_ecc_status].7,@@mode2_form2_edc_all_zero  ;EDC all-zero
2C81 06 B0 04    jnz  [curr_idx_00h_r_ecc_status].3,@@okay  ;--> EDC okay
2C84 81          ret
                ;---
                @@mode2_audio:
                @@mode2_form2_edc_all_zero:
2C85 0C B0 02    jnz  [curr_idx_00h_r_ecc_status].6,@@exit  ;--> erasure in block
                @@okay:
2C88 19 40       res  [40h].4   ;<-- result OKAY
                @@exit:
2C8A 81          ret
                ;------------------
                verify_sector_hdr_vs_prev_hdr:
                 ;verify DATA SECTOR HEADER against PREVIOUS HEADER
2C8B 19 40       res  [40h].4                   ;-
2C8D B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
2C8F B7 88       mov  [scratch_msf_mm1],a       ;
2C91 B6 81       mov  a,[rx_sect_header+1]  ;SS ;    curr?
2C93 B7 89       mov  [scratch_msf_ss1],a       ;
2C95 B6 82       mov  a,[rx_sect_header+2]  ;FF ;
2C97 B7 8A       mov  [scratch_msf_ff1],a       ;/
2C99 C6 01 DD    mov  a,[previous_msf+0]    ;MM ;\
2C9C B7 8B       mov  [scratch_msf_mm2],a       ;
2C9E C6 01 DE    mov  a,[previous_msf+1]    ;SS ;    old?
2CA1 B7 8C       mov  [scratch_msf_ss2],a       ;
2CA3 C6 01 DF    mov  a,[previous_msf+2]    ;FF ;
2CA6 B7 8D       mov  [scratch_msf_ff2],a       ;/
2CA8 AE 03       mov  x,3h ;blah
2CAA CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
2CAD 25 16       jc   @@mismatch                ;/(want 'positive' distance)
2CAF CD 43 54    call bcd_subtract_msf_minus_msf;-calc distance ;[result_msf]=[msf1]-[msf2]-cy
2CB2 C6 01 FD    mov  a,[result_mm]         ;MM ;\
2CB5 26 0E       jnz  @@mismatch                ; want difference of exactly
2CB7 C6 01 FE    mov  a,[result_ss]         ;SS ; 00:00:01
2CBA 26 09       jnz  @@mismatch                ; (ie. exactly next sector
2CBC C6 01 FF    mov  a,[result_ff]         ;FF ; after old sector)
2CBF A1 01       cmp  a,01h                     ;
2CC1 26 02       jnz  @@mismatch                ;/
2CC3 18 40       set  [40h].4                   ;-
                @@mismatch:
2CC5 AE 02       mov  x,2h                      ;\
                @@lop:                          ; memorize new MM:SS:FF
2CC7 E6 80       mov  a,[rx_sect_header+x]      ; as old MM:SS:FF
2CC9 D7 01 DD    mov  [previous_msf+x],a        ; for next sector
2CCC 5A          dec  x                         ;
2CCD 2A F8       jns  @@lop                     ;/
2CCF 81          ret
                ;------------------
                verify_sector_hdr_vs_subq_pos:
                 ;verify DATA SECTOR HEADER against SUBQ POSITION
                 ;accept mismatch of MAX ONE SECOND
2CD0 19 40       res  [40h].4                   ;<--
2CD2 B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
2CD4 B7 88       mov  [scratch_msf_mm1],a       ;
2CD6 B6 81       mov  a,[rx_sect_header+1]  ;SS ;
2CD8 B7 89       mov  [scratch_msf_ss1],a       ;
2CDA B6 82       mov  a,[rx_sect_header+2]  ;FF ;
2CDC B7 8A       mov  [scratch_msf_ff1],a       ;/
2CDE B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
2CE0 B7 8B       mov  [scratch_msf_mm2],a       ;
2CE2 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
2CE4 B7 8C       mov  [scratch_msf_ss2],a       ;
2CE6 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
2CE8 B7 8D       mov  [scratch_msf_ff2],a       ;/
2CEA AE 03       mov  x,3h ;blah
2CEC CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
2CEF 24 18       jnc  @@positive                ;/
2CF1 B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
2CF3 B7 88       mov  [scratch_msf_mm1],a       ;
2CF5 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
2CF7 B7 89       mov  [scratch_msf_ss1],a       ;
2CF9 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
2CFB B7 8A       mov  [scratch_msf_ff1],a       ;/
2CFD B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
2CFF B7 8B       mov  [scratch_msf_mm2],a       ;
2D01 B6 81       mov  a,[rx_sect_header+1]  ;SS ;
2D03 B7 8C       mov  [scratch_msf_ss2],a       ;
2D05 B6 82       mov  a,[rx_sect_header+2]  ;FF ;
2D07 B7 8D       mov  [scratch_msf_ff2],a       ;/
                @@positive:
2D09 98          clc                            ;\
2D0A CD 43 54    call bcd_subtract_msf_minus_msf;/ ;[result_msf]=[msf1]-[msf2]-cy
2D0D C6 01 FD    mov  a,[result_mm]         ;MM ;\reject if MM.dist > 00
2D10 26 10       jnz  @@exit                    ;/
2D12 C6 01 FE    mov  a,[result_ss]         ;SS ;\accept if SS.dist = 00
2D15 27 09       jz   @@match                   ;/
2D17 A1 01       cmp  a,1h                  ;SS ;\
2D19 26 07       jnz  @@exit                    ; also accept SS.dist = 01
2D1B C6 01 FF    mov  a,[result_ff]         ;FF ; but ONLY if FF.dist = 00
2D1E 26 02       jnz  @@exit                    ;/
                @@match:
2D20 18 40       set  [40h].4   ;flag: distance is MAX one second
                @@exit:
2D22 81          ret
                ;------------------
                get_data_header_and_subheader: ;get header + subheader (if any)
2D23 AE 03       mov  x,3h                      ;\
                @@copy_header_lop:              ;
2D25 E6 80       mov  a,[rx_sect_header+x]      ; copy Header
2D27 D7 02 20    mov  [sector_header+x],a       ;
2D2A 5A          dec  x                         ;
2D2B 2A F8       jns  @@copy_header_lop         ;/
                ;- - - -
2D2D 05 46 11    jz   [46h].2,@@audio_no_subheader  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
2D30 B6 83       mov  a,[rx_sect_header+3]      ;\      ;<-- MODE
2D32 A1 02       cmp  a,2h       ;MODE2         ;
2D34 26 0B       jnz  @@no_subheader            ;/
                ;- - - -
2D36 AE 03       mov  x,3h                      ;\
                @@copy_subheader_lop:           ;
2D38 E6 84       mov  a,[rx_sect_subheader+x]   ; copy SubHeader (if any)
2D3A D7 02 24    mov  [sector_header+4+x],a     ;
2D3D 5A          dec  x                         ;
2D3E 2A F8       jns  @@copy_subheader_lop      ;/
2D40 81          ret
                ;---
                @@audio_no_subheader:  ;<-- obviously (though it shouldn't have ANY header)
                @@no_subheader:
2D41 4F          mov  a,00h,slow
2D42 C7 02 24    mov  [sector_header+4],a ;FileNumber
2D45 C7 02 25    mov  [sector_header+5],a ;ChannelNumber
2D48 C7 02 26    mov  [sector_header+6],a ;SubMode
2D4B C7 02 27    mov  [sector_header+7],a ;CodingInfo
2D4E 81          ret
                ;------------------
;:              ;:----------------- Commands
                ;------------------
                cannot_handle_cmd_because_irq_pending:
2D4F 81          ret
                ;------------------
                receive_and_handle_cmd_param:
2D50 AE 11       mov  x,idx_11h_r_psx_fifo_flags                ;\
2D52 BF 04       mov  [io_porte_idx],x                          ; exit if still
2D54 CD 40 EF    call read_data_bus                             ; unhandled irq
2D57 B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a         ; pending on
2D59 A4 07       and  a,7h                                      ; MIPS side
2D5B 26 F2       jnz  cannot_handle_cmd_because_irq_pending     ;/
2D5D AE 13       mov  x,idx_13h_r_cmd_from_psx          ;\
2D5F BF 04       mov  [io_porte_idx],x                  ;
2D61 CD 40 EF    call read_data_bus       ;-->zf        ;
2D64 C7 01 E0    mov  [cmd_param_buf+0],a ;   zf        ;/  ;command
2D67 27 36       jz   cmd_00h             ;<--zf
2D69 A1 1C       cmp  a,1Ch                                             ;\
2D6B 26 06       jnz  @@not_cmd_1Ch_reset                               ;
                ;- - - -                                                ;
                ;cmd_1Ch_reset:                                         ;
2D6D CD 3B C3    call cmd_reply_int3_stat       ;-send INT3(stat)       ;
2D70 CC 10 00    jmp  sony_soft_reset           ;-reboot                ;
                ;---                                                    ;
                @@not_cmd_1Ch_reset:                                    ;/
2D73 A1 17       cmp  a,17h             ;\
2D75 27 28       jz   cmd_17h           ;/
2D77 A1 18       cmp  a,18h             ;\
2D79 27 24       jz   cmd_18h           ;/
2D7B A1 1F       cmp  a,1Fh             ;\
2D7D 24 20       jnc  cmd_1Fh_thru_FFh  ;/
2D7F A6 00       mov  a,0h                                              ;\
2D81 B7 8B       mov  [8Bh],a   ;index                                  ;
                @@get_param_lop:                                        ;
2D83 AE 11       mov  x,idx_11h_r_psx_fifo_flags                ;\      ;
2D85 BF 04       mov  [io_porte_idx],x                          ;       ;
2D87 CD 40 EF    call read_data_bus                             ;       ;
2D8A B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a         ;/
2D8C 09 B5 13    jz   [curr_idx_11h_r_psx_fifo_flags].4,cmd_get_param_done ;param_fifo empty
2D8F AE 12       mov  x,idx_12h_r_param_from_psx
2D91 BF 04       mov  [io_porte_idx],x                                  ;
2D93 CD 40 EF    call read_data_bus                                     ;
2D96 BE 8B       mov  x,[8Bh]   ;index                                  ;
2D98 D7 01 E1    mov  [cmd_param_buf+1+x],a                ;params      ;
2D9B 3C 8B       inc  [8Bh]     ;index                                  ;
2D9D 20 E4       jr   @@get_param_lop                                   ;/
                ;--- --- ---
                cmd_00h:
                cmd_17h:
                cmd_18h:
                cmd_1Fh_thru_FFh:    ;cmd_5xh does exist, handle below!
2D9F CC 3A 1B    jmp  cmd_00h_17h_18h_or_1Fh_thru_FFh
                ;--- --- ---
                cmd_get_param_done:
2DA2 B6 8B       mov  a,[8Bh]   ;index          ;\apply index as num params
2DA4 B7 88       mov  [scratch_num_params],a    ;/
2DA6 CE 01 E0    mov  x,[cmd_param_buf+0]
2DA9 5A          dec  x       ;cmd-1
2DAA C6 01 E0    mov  a,[cmd_param_buf+0]
2DAD A1 19       cmp  a,19h   ;cmd              ;\Test (allow any params)
2DAF 27 0B       jz   @@good_num_params         ;/
2DB1 A1 03       cmp  a,03h   ;cmd              ;\Play (allow 0..1 params)
2DB3 27 1F       jz   @@want_0_or_1_params      ;/
2DB5 D6 2E 01    mov  a,[cmd_num_params_list+x] ;\   ... expected num params
2DB8 B1 88       cmp  a,[scratch_num_params]    ;
2DBA 26 1E       jnz  @@bad_num_params          ;/
                @@good_num_params:
2DBC D6 2D E3    mov  a,[cmd_2nd_response_type_list+x]  ;\
2DBF C7 02 0C    mov  [cmd_2nd_response_type],a         ;/
2DC2 C6 01 E0    mov  a,[cmd_param_buf+0]       ;\
2DC5 48          shl  a        ;mul2            ;
2DC6 CB 01 E0    add  a,[cmd_param_buf+0] ;mul3 ; index=(cmd*3)
2DC9 A0 03       sub  a,3h                      ;
2DCB 97          mov  x,a                       ;/
2DCC DD 2E 1F    call cmd_accept_jump_list+x    ;\
2DCF 25 0D       jc   @@rejected                ;/
2DD1 DC 2E 79    jmp  cmd_proc_jump_list+x      ;---------> execute command
                ;---
                @@want_0_or_1_params:  ;for Play command
2DD4 B6 88       mov  a,[scratch_num_params]    ;\
2DD6 A1 02       cmp  a,2h                      ; verify num params for Play
2DD8 25 E2       jc   @@good_num_params         ;/
                ;- - -
                @@bad_num_params:
2DDA A6 05       mov  a,5h  ;bad num params
2DDC 20 02       jr   @@to_cmd_error_bit_a
                ;---
                @@rejected:
2DDE A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
                ;- - -
                @@to_cmd_error_bit_a:
2DE0 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_2nd_response_type_list:
2DE3 00          db 0    ;01h_get_stat
2DE4 00          db 0    ;02h_set_loc
2DE5 00          db 0    ;03h_play
2DE6 00          db 0    ;04h_forward
2DE7 00          db 0    ;05h_backward
2DE8 00          db 0    ;06h_read_n
2DE9 01          db 01h  ;07h_motor_on
2DEA 02          db 02h  ;08h_stop
2DEB 01          db 01h  ;09h_pause
2DEC 01          db 01h  ;0Ah_init
2DED 00          db 0    ;0Bh_mute
2DEE 00          db 0    ;0Ch_demute
2DEF 00          db 0    ;0Dh_set_filter
2DF0 00          db 0    ;0Eh_set_mode
2DF1 00          db 0    ;0Fh_get_param
2DF2 00          db 0    ;10h_get_loc_l
2DF3 00          db 0    ;11h_get_loc_p
2DF4 03          db 03h  ;12h_set_session
2DF5 00          db 0    ;13h_get_tn
2DF6 00          db 0    ;14h_get_td
2DF7 04          db 04h  ;15h_seek_l
2DF8 05          db 05h  ;16h_seek_p
2DF9 00          db 0    ;17h_dummy ;(not used, handled before jmp_table)
2DFA 00          db 0    ;18h_dummy ;(not used, handled before jmp_table)
2DFB 00          db 0    ;19h_xxh_test
2DFC 00          db 0 ;* ;1Ah_get_id  ;<--although, this CAN have 2nd response
2DFD 00          db 0    ;1Bh_read_s
2DFE 00          db 0    ;1Ch_init_dummy ;(not used, handled before jmp_table)
2DFF 07          db 07h  ;1Dh_get_q
2E00 01          db 01h  ;1Eh_read_toc
                ;------------------
                cmd_num_params_list:     ;expected num params
2E01 00          db 0    ;01h_get_stat
2E02 03          db 03h  ;02h_set_loc
2E03 00          db 0    ;03h_play  ;(not used, allowed to have 0 or 1 params)
2E04 00          db 0    ;04h_forward
2E05 00          db 0    ;05h_backward
2E06 00          db 0    ;06h_read_n
2E07 00          db 0    ;07h_motor_on
2E08 00          db 0    ;08h_stop
2E09 00          db 0    ;09h_pause
2E0A 00          db 0    ;0Ah_init
2E0B 00          db 0    ;0Bh_mute
2E0C 00          db 0    ;0Ch_demute
2E0D 02          db 02h  ;0Dh_set_filter
2E0E 01          db 01h  ;0Eh_set_mode
2E0F 00          db 0    ;0Fh_get_param
2E10 00          db 0    ;10h_get_loc_l
2E11 00          db 0    ;11h_get_loc_p
2E12 01          db 01h  ;12h_set_session
2E13 00          db 0    ;13h_get_tn
2E14 01          db 01h  ;14h_get_td
2E15 00          db 0    ;15h_seek_l
2E16 00          db 0    ;16h_seek_p
2E17 07          db 07h  ;17h_dummy    ;(not used, handled before jmp_table)
2E18 00          db 0    ;18h_dummy    ;(not used, handled before jmp_table)
2E19 00          db 0    ;19h_xxh_test ;(not used, allowed to have any params)
2E1A 00          db 0    ;1Ah_get_id
2E1B 00          db 0    ;1Bh_read_s
2E1C 00          db 0    ;1Ch_init_dummy ;(not used, handled before jmp_table)
2E1D 02          db 02h  ;1Dh_get_q
2E1E 00          db 0    ;1Eh_read_toc
                ;------------------
                cmd_accept_jump_list:
2E1F CC 2F 12    jmp  cmd_accept                         ;01h_get_stat
2E22 CC 2E EB    jmp  cmd_accept_if_xxx                  ;02h_set_loc
2E25 CC 2E EB    jmp  cmd_accept_if_xxx                  ;03h_play
2E28 CC 2E D3    jmp  cmd_accept_if_subq_possible        ;04h_forward
2E2B CC 2E D3    jmp  cmd_accept_if_subq_possible        ;05h_backward
2E2E CC 2E EB    jmp  cmd_accept_if_xxx                  ;06h_read_n
2E31 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;07h_motor_on
2E34 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;08h_stop
2E37 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;09h_pause
2E3A CC 2F 12    jmp  cmd_accept                         ;0Ah_init
2E3D CC 2E EB    jmp  cmd_accept_if_xxx                  ;0Bh_mute
2E40 CC 2E EB    jmp  cmd_accept_if_xxx                  ;0Ch_demute
2E43 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;0Dh_set_filter
2E46 CC 2F 12    jmp  cmd_accept                         ;0Eh_set_mode
2E49 CC 2F 12    jmp  cmd_accept                         ;0Fh_get_param
2E4C CC 2E DD    jmp  cmd_accept_if_get_loc_l_possible   ;10h_get_loc_l
2E4F CC 2E D3    jmp  cmd_accept_if_subq_possible        ;11h_get_loc_p
2E52 CC 2E FD    jmp  cmd_accept_if_set_session_possible ;12h_set_session
2E55 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;13h_get_tn
2E58 CC 2F 0F    jmp  cmd_accept_if_disc_present         ;14h_get_td
2E5B CC 2E EB    jmp  cmd_accept_if_xxx                  ;15h_seek_l
2E5E CC 2E EB    jmp  cmd_accept_if_xxx                  ;16h_seek_p
2E61 CC 2F 0D    jmp  cmd_do_not_accept                  ;17h_dummy ;(not used, handled before jmp_table)
2E64 CC 2F 0D    jmp  cmd_do_not_accept                  ;18h_dummy ;(not used, handled before jmp_table)
2E67 CC 2F 12    jmp  cmd_accept                         ;19h_xxh_test
2E6A CC 2F 12    jmp  cmd_accept                         ;1Ah_get_id
2E6D CC 2E EB    jmp  cmd_accept_if_xxx                  ;1Bh_read_s
2E70 CC 2F 12    jmp  cmd_accept                         ;1Ch_init_dummy ;(not used, handled before jmp_table)
2E73 CC 2E D3    jmp  cmd_accept_if_subq_possible        ;1Dh_get_q
2E76 CC 2F 12    jmp  cmd_accept                         ;1Eh_read_toc
                ;------------------
                cmd_proc_jump_list:
2E79 CC 2F 14    jmp  cmd_01h_get_stat
2E7C CC 2F 1D    jmp  cmd_02h_set_loc
2E7F CC 2F 6C    jmp  cmd_03h_play
2E82 CC 2F F3    jmp  cmd_04h_forward
2E85 CC 30 17    jmp  cmd_05h_backward
2E88 CC 30 3B    jmp  cmd_06h_read_n
2E8B CC 30 9C    jmp  cmd_07h_motor_on
2E8E CC 30 BD    jmp  cmd_08h_stop
2E91 CC 30 EA    jmp  cmd_09h_pause
2E94 CC 31 14    jmp  cmd_0Ah_init
2E97 CC 31 5F    jmp  cmd_0Bh_mute
2E9A CC 31 76    jmp  cmd_0Ch_demute
2E9D CC 31 86    jmp  cmd_0Dh_set_filter
2EA0 CC 31 9C    jmp  cmd_0Eh_set_mode
2EA3 CC 31 A4    jmp  cmd_0Fh_get_param
2EA6 CC 32 36    jmp  cmd_10h_get_loc_l
2EA9 CC 32 01    jmp  cmd_11h_get_loc_p
2EAC CC 32 61    jmp  cmd_12h_set_session
2EAF CC 32 96    jmp  cmd_13h_get_tn
2EB2 CC 32 CF    jmp  cmd_14h_get_td
2EB5 CC 33 50    jmp  cmd_15h_seek_l
2EB8 CC 33 25    jmp  cmd_16h_seek_p
2EBB CC 33 81    jmp  cmd_17h_dummy ;(not used, handled before cmd_proc_jump_list)
2EBE CC 33 81    jmp  cmd_18h_dummy ;(not used, handled before cmd_proc_jump_list)
2EC1 CC 33 82    jmp  cmd_19h_xxh_test   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
2EC4 CC 39 76    jmp  cmd_1Ah_get_id
2EC7 CC 30 48    jmp  cmd_1Bh_read_s
2ECA CC 39 96    jmp  cmd_1Ch_reset_dummy ;(not used, handled before cmd_proc_jump_list)
2ECD CC 39 9C    jmp  cmd_1Dh_get_q
2ED0 CC 39 B9    jmp  cmd_1Eh_read_toc
                ;------------------
                cmd_accept_if_subq_possible:   ;... audio/subq related ?
2ED3 B6 6D       mov  a,[disc_task]                             ;\
2ED5 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever) ;
2ED7 27 36       jz   cmd_accept_if_disc_present                ;
2ED9 A1 20       cmp  a,(1 shl dt_5_seek)                       ;
2EDB 27 32       jz   cmd_accept_if_disc_present                ;/
                ;- - - - ----------
                cmd_accept_if_get_loc_l_possible:   ;used for get_loc_l
2EDD 00 47 2F    jnz  [47h].0,cmd_accept_if_disc_present        ;\
2EE0 02 47 2C    jnz  [47h].1,cmd_accept_if_disc_present        ;/
2EE3 B6 6D       mov  a,[disc_task]                             ;\
2EE5 A1 04       cmp  a,(1 shl dt_2_whatever)                   ;
2EE7 27 26       jz   cmd_accept_if_disc_present                ;/
2EE9 20 1C       jr   cmd_accept_if_whatever_XXX_2F07h          ;--->
                ;------------------
                cmd_accept_if_xxx:
2EEB B6 6D       mov  a,[disc_task]
2EED A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)
2EEF 27 1E       jz   cmd_accept_if_disc_present
2EF1 00 47 1B    jnz  [47h].0,cmd_accept_if_disc_present
2EF4 02 47 18    jnz  [47h].1,cmd_accept_if_disc_present
2EF7 B6 6D       mov  a,[disc_task]
2EF9 A1 04       cmp  a,(1 shl dt_2_whatever)
2EFB 27 12       jz   cmd_accept_if_disc_present
                ;- - - - ----------
                cmd_accept_if_set_session_possible:  ;used for set_session
2EFD B6 6D       mov  a,[disc_task]
2EFF A1 02       cmp  a,(1 shl dt_1_stopped)            ;\
2F01 27 0C       jz   cmd_accept_if_disc_present        ;/
2F03 A1 20       cmp  a,(1 shl dt_5_seek)               ;\
2F05 27 08       jz   cmd_accept_if_disc_present        ;/
                ;- - - - ----------
                cmd_accept_if_whatever_XXX_2F07h:
2F07 B6 6D       mov  a,[disc_task]                                 ;\
2F09 A1 0C       cmp  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;
2F0B 27 02       jz   cmd_accept_if_disc_present                    ;/
                ;- - - - ----------
                cmd_do_not_accept:
2F0D 99          stc  ;fail/reject
2F0E 81          ret
                ;---
                cmd_accept_if_disc_present:
                         ;... accept if ... basic disc-present
2F0F 0C 40 FB    jnz  [40h].6,cmd_do_not_accept      ;...disc missing... ?
                ;- - - - ----------
                cmd_accept:
2F12 98          clc  ;okay/accept
2F13 81          ret
                ;------------------
                cmd_01h_get_stat:
2F14 CD 3B C3    call cmd_reply_int3_stat               ;-send INT3(stat)
2F17 06 01 02    jnz  [io_portb].3,@@door_still_open       ;DOOR pin
2F1A 19 BC       res  [drv_stat].4 ;shell_open          ;-ack/reset door open flag
                @@door_still_open:
2F1C 81          ret
                ;------------------
                cmd_02h_set_loc:
2F1D C6 01 E2    mov  a,[cmd_param_buf+2]   ;SS         ;\
2F20 A1 60       cmp  a,60h                             ; want SS = 00h..59h
2F22 24 35       jnc  @@bad_param                       ;/
2F24 AE 01       mov  x,1h                              ;\
2F26 BF 8F       mov  [8Fh],x                           ;
                @@verify_lop:                           ; want MM,SS = BCD
2F28 BE 8F       mov  x,[8Fh]                           ;
2F2A D6 01 E1    mov  a,[cmd_param_buf+1+x]             ;
2F2D CD 2F 5E    call verify_packed_bcd_a               ;
2F30 24 27       jnc  @@bad_param                       ;
2F32 3A 8F       dec  [8Fh]                             ;
2F34 2A F2       jns  @@verify_lop                      ;/
2F36 C6 01 E3    mov  a,[cmd_param_buf+3]   ;FF         ;\
2F39 A1 75       cmp  a,75h                             ; want FF = 00h..74h
2F3B 24 1C       jnc  @@bad_param                       ;/
2F3D CD 2F 5E    call verify_packed_bcd_a               ;\want FF = BCD
2F40 24 17       jnc  @@bad_param                       ;/
                ;- - - -
2F42 C6 01 E1    mov  a,[cmd_param_buf+1]               ;\
2F45 C7 01 ED    mov  [drv_setloc_setting+0],a          ;
2F48 C6 01 E2    mov  a,[cmd_param_buf+2]               ; apply setloc,
2F4B C7 01 EE    mov  [drv_setloc_setting+1],a          ; and
2F4E C6 01 E3    mov  a,[cmd_param_buf+3]               ; mark as pending
2F51 C7 01 EF    mov  [drv_setloc_setting+2],a          ;
2F54 1C 46       set  [46h].6  ;mark set_loc_pending    ;/
2F56 CC 3B C3    jmp  cmd_reply_int3_stat               ;-send INT3(stat)
                ;---
                @@bad_param:
2F59 A6 04       mov  a,4h  ;bad parameter value
2F5B CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                verify_packed_bcd_a:
2F5E 97          mov  x,a
2F5F A4 0F       and  a,0Fh     ;\verify LSB
2F61 A1 0A       cmp  a,0Ah     ;/
2F63 24 05       jnc  @@bad     ;out: cy=0=bad
2F65 9F          mov  a,x
2F66 A4 F0       and  a,0F0h    ;\verify MSB
2F68 A1 A0       cmp  a,0A0h    ;/
                @@bad:          ;out: cy=0=bad
2F6A 9F          mov  a,x       ;out: A=restored (but X=destroyed)
2F6B 81          ret
                ;------------------
                cmd_03h_play:
2F6C 0B 47 0E    jz   [47h].5,@@okay_do_play   ;INT4 request pending (data end)
2F6F B6 6D       mov  a,[disc_task]                             ;\
2F71 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever) ;
2F73 26 08       jnz  @@okay_do_play                            ;/
2F75 01 46 05    jz   [46h].0,@@okay_do_play                    ;-
2F78 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read       ;\error
2F7A CC 3C 09    jmp  cmd_error_bit_a                           ;/
                ;---
                @@okay_do_play:
2F7D 15 43       res  [43h].2
2F7F 15 47       res  [47h].2   ;ReadN/ReadS flag (0=ReadN/Play)
2F81 B6 88       mov  a,[scratch_num_params]                    ;\
2F83 27 03       jz   @@play_without_track_parameter            ;
2F85 CC 2F C7    jmp  @@play_with_track_parameter               ;/
                ;--- --- ---
                @@play_without_track_parameter:
                @@ignore_param_00h_inj:
2F88 03 43 04    jz   [43h].1,@@keep_task               ;\
2F8B A6 04       mov  a,(1 shl dt_2_whatever) ;\        ;
2F8D B7 6D       mov  [disc_task],a           ;/        ;
                @@keep_task:                            ;/
2F8F CD 28 6D    call whatever_XXX_286Dh                ;-
                ;- - - -
2F92 0D 46 26    jz   [46h].6,@@no_set_loc_pending      ;\
2F95 C6 01 ED    mov  a,[drv_setloc_setting+0] ;MM  ;\  ;
2F98 B7 4D       mov  [wanted_data_mm],a            ;   ;
2F9A B7 5D       mov  [wanted_subq_mm],a            ;   ;
2F9C C6 01 EE    mov  a,[drv_setloc_setting+1] ;SS  ;   ;
2F9F B7 4E       mov  [wanted_data_ss],a            ;   ;
2FA1 B7 5E       mov  [wanted_subq_ss],a            ;   ;
2FA3 C6 01 EF    mov  a,[drv_setloc_setting+2] ;FF  ;   ;
2FA6 B7 4F       mov  [wanted_data_ff],a            ;   ;
2FA8 B7 5F       mov  [wanted_subq_ff],a            ;/  ;
2FAA 14 42       set  [42h].2                   ;-      ;
2FAC A6 01       mov  a,1h                      ;\      ;
2FAE B7 6B       mov  [seek_task],a             ;/      ;
2FB0 A6 7D       mov  a,7Dh ;125 decimal        ;\      ;
2FB2 B7 70       mov  [seek_timeout],a          ;/      ;
2FB4 A6 20       mov  a,(1 shl dt_5_seek)       ;\      ;
2FB6 B7 6D       mov  [disc_task],a             ;/      ;
2FB8 CD 42 22    call mute_cd_da                ;-      ;
                @@no_set_loc_pending:                   ;/
                ;- - - -
2FBB 11 6A       res  [datamode_flag].0  ;audio (non-data)
2FBD 10 49       set  [49h].0
2FBF CD 40 73    call enter_cdda_audio_mode
2FC2 1D 46       res  [46h].6  ;mark no_set_loc_pending
2FC4 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;--- --- ---
                @@play_with_track_parameter:
2FC7 CD 28 6D    call whatever_XXX_286Dh        ;-
2FCA C6 01 E1    mov  a,[cmd_param_buf+1]       ;\
2FCD 26 03       jnz  @@track_is_non_zero       ; when track=00h, act same as
2FCF CC 2F 88    jmp  @@ignore_param_00h_inj    ; when WITHOUT param (but, with
                ;---                            ; whatever_XXX_286Dh called TWICE)
                @@track_is_non_zero:            ;/
2FD2 C1 01 C6    cmp  a,[toc_first_track_no]    ;\
2FD5 24 03       jnc  @@min_track_inrange       ; ensure min = first track
2FD7 C6 01 C6    mov  a,[toc_first_track_no]    ;
                @@min_track_inrange:            ;/
2FDA C1 01 C7    cmp  a,[toc_last_track_no]     ;\
2FDD 25 03       jc   @@max_track_inrange       ; ensure max = last track
2FDF C6 01 C7    mov  a,[toc_last_track_no]     ;
                @@max_track_inrange:            ;/
2FE2 AE 00       mov  x,0h                      ;\seek track A
2FE4 CD 29 58    call seek_track_a              ;/
2FE7 11 6A       res  [datamode_flag].0  ;audio (non-data)
2FE9 10 49       set  [49h].0
2FEB CD 40 73    call enter_cdda_audio_mode
2FEE 1D 46       res  [46h].6  ;mark no_set_loc_pending
2FF0 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_04h_forward:
2FF3 0A 41 1C    jnz  [41h].5,@@error_no_disc_or_toc    ;-  ;near_target_flag
2FF6 B6 6B       mov  a,[seek_task]                     ;\
2FF8 26 18       jnz  @@error_no_disc_or_toc            ;/
2FFA B6 6D       mov  a,[disc_task]                                 ;\
2FFC A1 04       cmp  a,(1 shl dt_2_whatever)                       ;
2FFE 27 0A       jz   @@accept                                      ;
3000 A1 0C       cmp  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;
3002 27 06       jz   @@accept                                      ;
3004 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)     ;
3006 27 02       jz   @@accept                                      ;/
3008 20 08       jr   @@error_no_disc_or_toc                        ;-
                ;---
                @@accept:
300A 1D 46       res  [46h].6  ;mark no_set_loc_pending
300C CD 29 91    call audio_fast_forward        ;------->
300F CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
3012 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
3014 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_05h_backward:
3017 0A 41 1C    jnz  [41h].5,@@error_no_disc_or_toc    ;-  ;near_target_flag
301A B6 6B       mov  a,[seek_task]                     ;\
301C 26 18       jnz  @@error_no_disc_or_toc            ;/
301E B6 6D       mov  a,[disc_task]                                 ;\
3020 A1 04       cmp  a,(1 shl dt_2_whatever)                       ;
3022 27 0A       jz   @@accept                                      ;
3024 A1 0C       cmp  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;
3026 27 06       jz   @@accept                                      ;
3028 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever)     ;
302A 27 02       jz   @@accept                                      ;/
302C 20 08       jr   @@error_no_disc_or_toc                        ;-
                ;---
                @@accept:
302E 1D 46       res  [46h].6  ;mark no_set_loc_pending
3030 CD 29 9D    call audio_fast_backward       ;------->
3033 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
3036 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
3038 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_06h_read_n:
303B 01 90 59    jz   [license_flags].0,cmd_read_invalid_command
303E 0E 9F 03    jnz  [secret_unlock_flags].7,@@accept_unlocked
3041 0E 90 53    jnz  [license_flags].7,cmd_read_invalid_command  ;---> DISC UNLICENSED
                @@accept_unlocked:
3044 15 47       res  [47h].2   ;ReadN/ReadS flag (0=ReadN/Play)
3046 20 0B       jr   cmd_read_n_read_s_inj
                ;--- --- --- ------
                cmd_1Bh_read_s:
3048 01 90 4C    jz   [license_flags].0,cmd_read_invalid_command
304B 0E 9F 03    jnz  [secret_unlock_flags].7,@@accept_unlocked
304E 0E 90 46    jnz  [license_flags].7,cmd_read_invalid_command  ;---> DISC UNLICENSED
                @@accept_unlocked:
3051 14 47       set  [47h].2   ;ReadN/ReadS flag (1=ReadS)
                ;- - - - - - ------
                cmd_read_n_read_s_inj:
3053 15 43       res  [43h].2
3055 CD 28 6D    call whatever_XXX_286Dh
                ;- - - -
3058 0D 46 30    jz   [46h].6,@@no_set_loc_pending
305B A6 1E       mov  a,1Eh  ;30 decimal                ;\
305D B7 78       mov  [test_timeout_1],a                ;/
305F C6 01 ED    mov  a,[drv_setloc_setting+0]      ;MM ;\
3062 B7 4D       mov  [wanted_data_mm],a                ;
3064 C6 01 EE    mov  a,[drv_setloc_setting+1]      ;SS ;
3067 B7 4E       mov  [wanted_data_ss],a                ;
3069 C6 01 EF    mov  a,[drv_setloc_setting+2]      ;FF ;
306C B7 4F       mov  [wanted_data_ff],a                ;/
306E C6 01 ED    mov  a,[drv_setloc_setting+0]      ;MM ;\
3071 B7 5D       mov  [wanted_subq_mm],a                ;
3073 C6 01 EE    mov  a,[drv_setloc_setting+1]      ;SS ;
3076 B7 5E       mov  [wanted_subq_ss],a                ;
3078 C6 01 EF    mov  a,[drv_setloc_setting+2]      ;FF ;
307B B7 5F       mov  [wanted_subq_ff],a                ;/
307D 14 42       set  [42h].2                           ;-
307F A6 01       mov  a,1h                              ;\
3081 B7 6B       mov  [seek_task],a                     ;/
3083 A6 7D       mov  a,7Dh ;125 decimal                ;\
3085 B7 70       mov  [seek_timeout],a                  ;/
3087 A6 20       mov  a,(1 shl dt_5_seek)               ;\
3089 B7 6D       mov  [disc_task],a                     ;/
                @@no_set_loc_pending:
                ;- - - -
308B 10 6A       set  [datamode_flag].0  ;data (non-audio)
308D 11 49       res  [49h].0
308F CD 40 32    call enter_cdrom_data_mode
3092 1D 46       res  [46h].6  ;mark no_set_loc_pending
3094 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;--- --- --- ------
                cmd_read_invalid_command:
3097 A6 06       mov  a,6h  ;invalid command
3099 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_07h_motor_on:    ;aka "standby" in buggy docs
309C 02 BC 19    jnz  [drv_stat].1,@@fail_motor_is_already_on ;spindle_motor
309F B6 6D       mov  a,[disc_task]                     ;\
30A1 A1 01       cmp  a,(1 shl dt_0_nodisk)             ; check if disc missing
30A3 27 0F       jz   @@error_no_disc_or_toc            ;/   ERROR if no disc ?
30A5 0C 40 0C    jnz  [40h].6,@@error_no_disc_or_toc    ;-   ERROR if ... ?
30A8 13 43       res  [43h].1
30AA CD 28 B3    call enter_pause_state
30AD 10 49       set  [49h].0         ;<---------- ?
30AF 15 43       res  [43h].2
30B1 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
30B4 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
30B6 20 02       jr   @@to_cmd_error_bit_a
                ;---
                @@fail_motor_is_already_on:
30B8 A6 05       mov  a,5h ;bad num params (aka "motor already on" in this case)
                ;- - -
                @@to_cmd_error_bit_a:
30BA CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_08h_stop:
30BD A6 01       mov  a,(1 shl dt_0_nodisk)     ;\
30BF B1 6D       cmp  a,[disc_task]             ; check if disc missing
30C1 27 4C       jz   cmd_error_no_disc_or_toc  ;/
30C3 B6 6D       mov  a,[disc_task]             ;\
30C5 A1 02       cmp  a,(1 shl dt_1_stopped)    ; check if already stopped
30C7 27 18       jz   @@already_stopped         ;/
                ;- - - -
30C9 15 43       res  [43h].2
30CB CD 28 E0    call force_motor_off
30CE CD 42 22    call mute_cd_da
                ;- - - -
                @@finish:
30D1 A6 00       mov  a,0h
30D3 C7 01 EE    mov  [drv_setloc_setting+1],a ;BUG! (should be "+0", not "+1")
30D6 C7 01 EE    mov  [drv_setloc_setting+1],a
30D9 C7 01 EF    mov  [drv_setloc_setting+2],a
30DC 1D 46       res  [46h].6  ;mark no_set_loc_pending
30DE CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@already_stopped:
30E1 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
30E3 A6 00       mov  a,0h                      ;\
30E5 C7 02 0C    mov  [cmd_2nd_response_type],a ;/
30E8 20 E7       jr   @@finish
                ;------------------
                cmd_09h_pause:
30EA B6 6D       mov  a,[disc_task]             ;\
30EC A1 01       cmp  a,(1 shl dt_0_nodisk)     ; check if disc missing
30EE 27 1F       jz   cmd_error_no_disc_or_toc  ;/
30F0 A1 04       cmp  a,(1 shl dt_2_whatever)   ;\
30F2 27 08       jz   @@cont                    ;/
30F4 A1 20       cmp  a,(1 shl dt_5_seek)       ;\
30F6 27 17       jz   cmd_error_no_disc_or_toc  ;/
30F8 A1 14       cmp  a,(1 shl dt_4_fast)+(1 shl dt_2_whatever) ;\check if
30FA 26 0A       jnz  @@already_paused                          ;/already paused
                @@cont:
                ;- - - -
30FC 13 43       res  [43h].1             ;??
30FE CD 28 B3    call enter_pause_state
3101 10 49       set  [49h].0             ;??
                ;- - - -
                @@finish:
3103 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@already_paused:
3106 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
3108 A6 00       mov  a,0h                      ;\
310A C7 02 0C    mov  [cmd_2nd_response_type],a ;/
310D 20 F4       jr   @@finish
                ;------------------
                cmd_error_no_disc_or_toc:
310F A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
3111 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_0Ah_init:
3114 CD 29 C6    call init_various_idx_stuff            ;-
3117 18 B7       set  [curr_idx_07h_w_chip_control].4   ;-select AUDIO mode (bit4=1)
3119 A6 01       mov  a,(1 shl dt_0_nodisk)     ;\
311B B1 6D       cmp  a,[disc_task]             ; check if disc missing
311D 27 37       jz   @@no_disc                 ;/
311F 0C 40 34    jnz  [40h].6,@@no_disc         ;-
                ;- - - -
3122 13 43       res  [43h].1
3124 11 43       res  [43h].0
3126 A6 02       mov  a,(1 shl dt_1_stopped)    ;\
3128 B7 6D       mov  [disc_task],a             ;/
312A CD 28 B3    call enter_pause_state
312D 10 49       set  [49h].0
312F 15 43       res  [43h].2
3131 CD 42 22    call mute_cd_da     ;----->
                ;- - - -
                @@finish:
3134 A6 00       mov  a,0h                      ;\
3136 C7 01 ED    mov  [drv_setloc_setting+0],a  ;
3139 C7 01 EE    mov  [drv_setloc_setting+1],a  ;
313C C7 01 EF    mov  [drv_setloc_setting+2],a  ;/
313F 1D 46       res  [46h].6                   ;-mark no_set_loc_pending
3141 A6 20       mov  a,20h                     ;\force mode=20h
3143 B7 BB       mov  [drv_mode],a              ;/
3145 B6 BC       mov  a,[drv_stat]              ;\
3147 A4 F2       and  a,0F2h ;clear error bits  ; clear error bits
3149 B7 BC       mov  [drv_stat],a              ;/
314B A6 00       mov  a,0h                      ;\
314D B7 BD       mov  [err_code_for_id],a       ; clear error codes
314F B7 BE       mov  [err_code_for_seek],a     ;
3151 B7 BF       mov  [err_code_for_cmd],a      ;/
3153 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@no_disc:
3156 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
3158 A6 00       mov  a,0h                      ;\
315A C7 02 0C    mov  [cmd_2nd_response_type],a ;/
315D 20 D5       jr   @@finish
                ;------------------
                cmd_0Bh_mute:
315F CD 31 65    call @@mute_core
3162 CC 3B C3    jmp  cmd_reply_int3_stat               ;-send INT3(stat)
                ;--- --- ---
                @@mute_core:
3165 12 40       set  [40h].1 ;mute_flag (1=mute)               ;-mute flag
3167 B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;\
3169 AA E0       or   a,0E0h ;[curr_idx_07h_w_chip_control].5-7 ; mute
316B B7 B7       mov  [curr_idx_07h_w_chip_control],a           ;/
                ;- - - - - --------
                cmd_mute_demute_injump:
316D AE 07       mov  x,idx_07h_w_chip_control                  ;\
316F BF 04       mov  [io_porte_idx],x                          ;
3171 B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;
3173 CC 40 FB    jmp  write_data_bus                            ;/
                ;------------------
                cmd_0Ch_demute:
3176 CD 31 7C    call @@demute_core
3179 CC 3B C3    jmp  cmd_reply_int3_stat               ;-send INT3(stat)
                ;--- --- ---
                @@demute_core:
317C 13 40       res  [40h].1 ;mute_flag (0=normal)             ;-demute flag
317E B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;\
3180 A4 1F       and  a,1Fh  ;[curr_idx_07h_w_chip_control].5-7 ; demute
3182 B7 B7       mov  [curr_idx_07h_w_chip_control],a           ;/
3184 20 E7       jr   cmd_mute_demute_injump                    ;-
                ;------------------
                cmd_0Dh_set_filter:
3186 B6 6D       mov  a,[disc_task]             ;\
3188 A1 01       cmp  a,(1 shl dt_0_nodisk)     ; check if disc missing
318A 27 0D       jz   @@error_no_disc_or_toc    ;/
318C C6 01 E1    mov  a,[cmd_param_buf+1]       ;\file
318F B7 6E       mov  [drv_filter_file],a       ;/
3191 C6 01 E2    mov  a,[cmd_param_buf+2]       ;\channel
3194 B7 6F       mov  [drv_filter_channel],a    ;/
3196 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
3199 CC 31 0F    jmp  cmd_error_no_disc_or_toc
                ;------------------
                cmd_0Eh_set_mode:
319C C6 01 E1    mov  a,[cmd_param_buf+1]
319F B7 BB       mov  [drv_mode],a
31A1 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_0Fh_get_param:
31A4 CD 3B FB    call cmd_response_begin
31A7 B6 BC       mov  a,[drv_stat]              ;\stat
31A9 C7 01 F0    mov  [drv_response+0],a        ;/
31AC B6 BB       mov  a,[drv_mode]              ;\mode
31AE C7 01 F1    mov  [drv_response+1],a        ;/
                ;- - - - -
31B1 B6 BC       mov  a,[drv_stat]                    ;\
31B3 A4 0D       and  a,0Dh ;id/seek/cmd/param error  ; BLAH, error_code
31B5 26 07       jnz  @@some_error                    ; BLAH, overwritten below!
31B7 A6 00       mov  a,00h ;no_error (okay)          ; ;\
31B9 C7 01 F2    mov  [drv_response+2],a              ; ; BLAH, no error
31BC 20 18       jr   @@not_any_error                 ; ;/
                ;---                                  ;
                @@some_error:                         ;
31BE 07 BC 05    jz   [drv_stat].3,@@no_id_error      ; ;\
31C1 B6 BD       mov  a,[err_code_for_id]             ; ; BLAH, id error
31C3 C7 01 F2    mov  [drv_response+2],a              ; ;
                @@no_id_error:                        ; ;/
31C6 05 BC 05    jz   [drv_stat].2,@@no_seek_error    ; ;\
31C9 B6 BE       mov  a,[err_code_for_seek]           ; ; BLAH, seek error
31CB C7 01 F2    mov  [drv_response+2],a              ; ;
                @@no_seek_error:                      ; ;/
31CE 01 BC 05    jz   [drv_stat].0,@@no_cmd_error     ; ;\
31D1 B6 BF       mov  a,[err_code_for_cmd]            ; ; BLAH, cmd/param error
31D3 C7 01 F2    mov  [drv_response+2],a              ; ;
                @@no_cmd_error:                       ; ;/
                @@not_any_error:                      ;/
                ;- - - - -
31D6 C6 01 F0    mov  a,[drv_response+0]        ;\
31D9 A4 F2       and  a,0F2h                    ; stat, FORCE no error
31DB C7 01 F0    mov  [drv_response+0],a        ;/
                ;- - - - -
31DE 4F          mov  a,00h,slow                ;\zero (instead of above BLAH)
31DF C7 01 F2    mov  [drv_response+2],a        ;/(this OVERWRITES above crap)
                ;- - - - -
31E2 B6 6E       mov  a,[drv_filter_file]       ;\filter.file
31E4 C7 01 F3    mov  [drv_response+3],a        ;/
31E7 B6 6F       mov  a,[drv_filter_channel]    ;\filter.channel
31E9 C7 01 F4    mov  [drv_response+4],a        ;/
                ;- - - - -
31EC AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
31EE BF 04       mov  [io_porte_idx],x          ;
31F0 AE 00       mov  x,0h                      ;
                @@reply_lop:                    ; send(stat,mode,zero,file,chn)
31F2 D6 01 F0    mov  a,[drv_response+x]        ;
31F5 CD 40 FB    call write_data_bus            ;
31F8 5C          inc  x                         ;
31F9 9F          mov  a,x                       ;
31FA A1 05       cmp  a,5h                      ;
31FC 26 F4       jnz  @@reply_lop               ;/
31FE CC 3B D5    jmp  cmd_reply_int3_inj        ;-sent INT3
                ;------------------
                cmd_11h_get_loc_p:
3201 CD 3B FB    call cmd_response_begin
3204 AE 04       mov  x,4h                      ;\
                @@lop:                          ;
3206 D6 02 11    mov  a,[subq_position+1+x]     ;
3209 D7 01 F0    mov  [drv_response+x],a        ;
320C 5A          dec  x                         ;
320D 2A F7       jns  @@lop                     ;/
320F C6 02 17    mov  a,[subq_position+7]       ;\
3212 C7 01 F5    mov  [drv_response+5],a        ;
3215 C6 02 18    mov  a,[subq_position+8]       ;
3218 C7 01 F6    mov  [drv_response+6],a        ;
321B C6 02 19    mov  a,[subq_position+9]       ;
321E C7 01 F7    mov  [drv_response+7],a        ;/
3221 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
3223 BF 04       mov  [io_porte_idx],x          ;
3225 AE 00       mov  x,0h                      ;
                @@reply_lop:                    ;
3227 D6 01 F0    mov  a,[drv_response+x]        ;
322A CD 40 FB    call write_data_bus            ;
322D 5C          inc  x                         ;
322E 9F          mov  a,x                       ;
322F A1 08       cmp  a,8h                      ;
3231 26 F4       jnz  @@reply_lop               ;/
3233 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_10h_get_loc_l:
3236 01 6A 23    jz   [datamode_flag].0,@@audio ;-
3239 CD 3B FB    call cmd_response_begin
323C AE 07       mov  x,7h                      ;\
                @@lop:                          ;
323E D6 02 20    mov  a,[sector_header+x]       ; data sector header/subheader
3241 D7 01 F0    mov  [drv_response+x],a        ;
3244 5A          dec  x                         ;
3245 2A F7       jns  @@lop                     ;/
3247 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
3249 BF 04       mov  [io_porte_idx],x          ;
324B AE 00       mov  x,0h                      ;
                @@reply_lop:                    ;
324D D6 01 F0    mov  a,[drv_response+x]        ;
3250 CD 40 FB    call write_data_bus            ;
3253 5C          inc  x                         ;
3254 9F          mov  a,x                       ;
3255 A1 08       cmp  a,8h                      ;
3257 26 F4       jnz  @@reply_lop               ;/
3259 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;---
                @@audio:
325C A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
325E CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_12h_set_session:
3261 C6 01 E1    mov  a,[cmd_param_buf+1]
3264 27 2B       jz   @@bad_param  ;reject session=00h
3266 C7 02 0D    mov  [drv_desired_session],a
3269 A6 01       mov  a,1h
326B C7 02 0E    mov  [drv_current_session],a
326E 1D 4C       res  [toc_flags].6 ;session_is_loaded (0=need loading)
3270 1B 4C       res  [toc_flags].5
3272 19 4C       res  [toc_flags].4
3274 15 43       res  [43h].2
3276 10 43       set  [43h].0
3278 12 43       set  [43h].1
327A 10 40       set  [40h].0 ;seek_pos0        ;-mark seeking pos0
327C 1F 40       res  [40h].7
327E 13 49       res  [49h].1
3280 15 49       res  [49h].2
3282 CD 41 9B    call fill_toc_info_by_FFh
3285 CD 3B C3    call cmd_reply_int3_stat       ;-send INT3(stat)
3288 A6 02       mov  a,(1 shl dt_1_stopped)    ;\  ... stop ?
328A B7 6D       mov  [disc_task],a             ;/
328C A6 9C       mov  a,9Ch  ;156 decimal       ;\
328E B7 67       mov  [toc_timeout],a           ;/
3290 81          ret
                ;---
                @@bad_param:
3291 A6 04       mov  a,4h  ;bad parameter value
3293 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_13h_get_tn:
3296 0F 40 31    jz   [40h].7,@@error_no_disc_or_toc
3299 CD 3B FB    call cmd_response_begin
329C C6 01 C6    mov  a,[toc_first_track_no]
329F C7 01 F1    mov  [drv_response+1],a
32A2 C6 01 C7    mov  a,[toc_last_track_no]
32A5 C7 01 F2    mov  [drv_response+2],a
32A8 B6 BC       mov  a,[drv_stat]              ;\
32AA A4 F2       and  a,0F2h ;clear error bits  ;
32AC B7 BC       mov  [drv_stat],a              ;
32AE C7 01 F0    mov  [drv_response+0],a        ;/
32B1 AE 17       mov  x,idx_17h_w_reply_to_psx
32B3 BF 04       mov  [io_porte_idx],x
32B5 C6 01 F0    mov  a,[drv_response+0]
32B8 CD 40 FB    call write_data_bus
32BB C6 01 F1    mov  a,[drv_response+1]
32BE CD 40 FB    call write_data_bus
32C1 C6 01 F2    mov  a,[drv_response+2]
32C4 CD 40 FB    call write_data_bus
32C7 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;---
                @@error_no_disc_or_toc:
32CA A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
32CC CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_14h_get_td:
32CF 0F 40 4E    jz   [40h].7,@@error_no_disc_or_toc
32D2 CD 3B FB    call cmd_response_begin
32D5 C6 01 E1    mov  a,[cmd_param_buf+1]               ;\for 00h: get lead out
32D8 27 3A       jz   @@get_lead_out                    ;/
32DA CD 2F 5E    call verify_packed_bcd_a               ;\
32DD 24 3D       jnc  @@bad_param                       ;
32DF C1 01 C6    cmp  a,[toc_first_track_no]            ; for NNh: verify that
32E2 25 38       jc   @@bad_param                       ; track NN does exist
32E4 C1 01 C7    cmp  a,[toc_last_track_no]             ;
32E7 22 33       ja   @@bad_param                       ;/
                ;- - - -
32E9 CD 42 F5    call get_toc_entry_for_track_a_to_ax
                ;- - - -
                @@finish:
32EC C7 01 F1    mov  [drv_response+1],a  ;MM
32EF CF 01 F2    mov  [drv_response+2],x  ;SS
32F2 B6 BC       mov  a,[drv_stat]              ;\
32F4 A4 F2       and  a,0F2h ;clear error bits  ;
32F6 B7 BC       mov  [drv_stat],a              ;
32F8 C7 01 F0    mov  [drv_response+0],a        ;/
32FB AE 17       mov  x,idx_17h_w_reply_to_psx
32FD BF 04       mov  [io_porte_idx],x
32FF C6 01 F0    mov  a,[drv_response+0]
3302 CD 40 FB    call write_data_bus
3305 C6 01 F1    mov  a,[drv_response+1]
3308 CD 40 FB    call write_data_bus
330B C6 01 F2    mov  a,[drv_response+2]
330E CD 40 FB    call write_data_bus
3311 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;---
                @@get_lead_out:  ;aka get end of last track
3314 C6 01 C8    mov  a,[toc_lead_out_msf+0h]  ;MM
3317 CE 01 C9    mov  x,[toc_lead_out_msf+1h]  ;SS
331A 20 D0       jr   @@finish
                ;---
                @@bad_param:
331C A6 04       mov  a,4h  ;bad parameter value
331E 20 02       jr   @@to_cmd_error_bit_a
                ;---
                @@error_no_disc_or_toc:
3320 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
                @@to_cmd_error_bit_a:
3322 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_16h_seek_p:
3325 13 43       res  [43h].1
3327 CD 28 B3    call enter_pause_state                 ;-
332A C6 01 ED    mov  a,[drv_setloc_setting+0]      ;MM ;\
332D B7 5D       mov  [wanted_subq_mm],a                ;
332F C6 01 EE    mov  a,[drv_setloc_setting+1]      ;SS ;
3332 B7 5E       mov  [wanted_subq_ss],a                ;
3334 C6 01 EF    mov  a,[drv_setloc_setting+2]      ;FF ;
3337 B7 5F       mov  [wanted_subq_ff],a                ;/
3339 A6 20       mov  a,(1 shl dt_5_seek)               ;\seek task
333B B7 6D       mov  [disc_task],a                     ;/
333D 11 6A       res  [datamode_flag].0  ;audio (non-data)
333F 14 42       set  [42h].2
3341 A6 7D       mov  a,7Dh ;125 decimal                ;\
3343 B7 70       mov  [seek_timeout],a                  ;/
3345 10 49       set  [49h].0       ;<-- unlike seek_l
3347 15 43       res  [43h].2
3349 A6 01       mov  a,1h                              ;\
334B B7 6B       mov  [seek_task],a                     ;/
334D CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_15h_seek_l:
3350 13 43       res  [43h].1
3352 CD 28 B3    call enter_pause_state                 ;-
3355 C6 01 ED    mov  a,[drv_setloc_setting+0]      ;MM ;\
3358 B7 5D       mov  [wanted_subq_mm],a                ;
335A B7 4D       mov  [wanted_data_mm],a                ;
335C C6 01 EE    mov  a,[drv_setloc_setting+1]      ;SS ;
335F B7 5E       mov  [wanted_subq_ss],a                ;
3361 B7 4E       mov  [wanted_data_ss],a                ;
3363 C6 01 EF    mov  a,[drv_setloc_setting+2]      ;FF ;
3366 B7 5F       mov  [wanted_subq_ff],a                ;
3368 B7 4F       mov  [wanted_data_ff],a                ;/
336A A6 20       mov  a,(1 shl dt_5_seek)               ;\seek task
336C B7 6D       mov  [disc_task],a                     ;/
336E 10 6A       set  [datamode_flag].0  ;data (non-audio)
3370 14 42       set  [42h].2
3372 A6 7D       mov  a,7Dh ;125 decimal                ;\
3374 B7 70       mov  [seek_timeout],a                  ;/
3376 11 49       res  [49h].0
3378 15 43       res  [43h].2
337A A6 01       mov  a,1h                              ;\
337C B7 6B       mov  [seek_task],a                     ;/
337E CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_17h_dummy:   ;(not used, handled before jmp_table)
                cmd_18h_dummy:   ;(not used, handled before jmp_table)
3381 81          ret
                ;------------------
;:              ;:----------------- Test Commands (cmd 19h)
                ;------------------
                cmd_19h_xxh_test:   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
3382 C6 01 E1    mov  a,[cmd_param_buf+1]
3385 A4 F0       and  a,0F0h
3387 27 3E       jz   cmd_19h_0xh       ;drive mech and scex
3389 A1 10       cmp  a,10h
338B 27 22       jz   to_cmd_19h_1xh    ;drive mech
338D A1 20       cmp  a,20h
338F 27 21       jz   to_cmd_19h_2xh
3391 A1 30       cmp  a,30h
3393 27 20       jz   to_cmd_19h_3xh
3395 A1 40       cmp  a,40h
3397 27 1F       jz   to_cmd_19h_4xh
3399 A1 50       cmp  a,50h
339B 27 1E       jz   to_cmd_19h_5xh
339D A1 60       cmp  a,60h
339F 27 1D       jz   to_cmd_19h_6xh
33A1 A1 70       cmp  a,70h
33A3 27 1C       jz   to_cmd_19h_7xh   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
                ;- - - - - --------
                ;N/A  to_cmd_19h_8xh    ;-exist, but not handled (unimplemented)
                ;- - - - - --------
                cmd_19h_80h_through_FFh:
                cmd_19h_bad_subfunction:
33A5 A6 04       mov  a,4h  ;bad parameter value (aka invalid subfunction)
33A7 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_bad_num_params:
33AA A6 05       mov  a,5h  ;bad num params
33AC CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
33AF CC 35 18   to_cmd_19h_1xh: jmp cmd_19h_1xh  ;drive mech
33B2 CC 35 56   to_cmd_19h_2xh: jmp cmd_19h_2xh  ;get version and txt strings
33B5 CC 36 66   to_cmd_19h_3xh: jmp cmd_19h_3xh  ;debug_status
33B8 CC 37 45   to_cmd_19h_4xh: jmp cmd_19h_4xh  ;debug_status
33BB CC 37 76   to_cmd_19h_5xh: jmp cmd_19h_5xh  ;send cx(X)
33BE CC 37 D0   to_cmd_19h_6xh: jmp cmd_19h_6xh  ;read ram
33C1 CC 38 0E   to_cmd_19h_7xh: jmp cmd_19h_7xh  ;read/write idx  ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
33C4 CC 39 5A   to_cmd_19h_8xh: jmp cmd_19h_8xh  ;UNUSED!
                ;------------------
                cmd_19h_0xh:
33C7 C6 01 E1    mov  a,[cmd_param_buf+1]
33CA A1 06       cmp  a,6h              ;\
33CC 26 03       jnz  @@not6            ;
33CE CC 34 7B    jmp  cmd_19h_06h       ;
                @@not6:                 ;/
33D1 A1 07       cmp  a,7h              ;\
33D3 26 03       jnz  @@not7            ;
33D5 CC 34 B8    jmp  cmd_19h_07h       ;
                @@not7:                 ;/
33D8 A1 08       cmp  a,8h              ;\
33DA 26 03       jnz  @@not8            ;
33DC CC 34 DB    jmp  cmd_19h_08h       ;
                @@not8:                 ;/
33DF B6 88       mov  a,[scratch_num_params]    ;\
33E1 A1 01       cmp  a,1h                      ; verify num params
33E3 26 C5       jnz  cmd_bad_num_params        ;/
33E5 C6 01 E1    mov  a,[cmd_param_buf+1]
33E8 A1 00       cmp  a,0h
33EA 27 11       jz   cmd_19h_00h
33EC 4A          dec  a
33ED 27 23       jz   cmd_19h_01h
33EF 4A          dec  a
33F0 27 2C       jz   cmd_19h_02h
33F2 4A          dec  a
33F3 27 35       jz   cmd_19h_03h_force_motor_off
33F5 4A          dec  a
33F6 27 3B       jz   cmd_19h_04h_scex_start_reading
33F8 4A          dec  a
33F9 27 57       jz   cmd_19h_05h_scex_finish_and_get_counters
33FB 20 A8       jr   cmd_19h_bad_subfunction
                ;------------------
                cmd_19h_00h:
33FD 02 BC 0F    jnz  [drv_stat].1,@@motor_already_on  ;spindle_motor
                 ;- - - -
3400 16 41       set  [41h].3                   ;-test mode?  but, ONLY if motor wasn't already on
3402 18 41       set  [41h].4                   ;-
3404 13 43       res  [43h].1                   ;-
3406 10 43       set  [43h].0                   ;-
3408 A6 04       mov  a,(1 shl dt_2_whatever)   ;\
340A B7 6D       mov  [disc_task],a             ;/
340C CD 42 98    call whatever_XXX_4298h        ;-
                 ;- - - -
                @@motor_already_on:
340F CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_01h:
3412 16 41       set  [41h].3
3414 19 41       res  [41h].4
3416 A6 E6       mov  a,0E6h ;cx(E6)            ;\CXD2510Q Signal Processor
3418 CD 43 33    call send_8bit_to_cxd2510q     ;/AutomaticNormal
341B CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_02h:
341E 16 41       set  [41h].3
3420 18 41       set  [41h].4
3422 A6 EE       mov  a,0EEh ;cx(EE)            ;\CXD2510Q Signal Processor
3424 CD 43 33    call send_8bit_to_cxd2510q     ;/RoughServo
3427 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_03h_force_motor_off:
342A 03 BC 03    jz   [drv_stat].1,@@already_off ;spindle_motor
342D CD 28 E0    call force_motor_off
                @@already_off:
3430 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_04h_scex_start_reading:
3433 16 41       set  [41h].3
3435 1C 44       set  [scex_flags].6
3437 19 41       res  [41h].4
3439 13 43       res  [43h].1
343B 10 43       set  [43h].0
343D A6 04       mov  a,(1 shl dt_2_whatever)
343F B7 6D       mov  [disc_task],a
3441 02 BC 05    jnz  [drv_stat].1,@@do_start_scex_reading ;spindle_motor
3444 CD 42 98    call whatever_XXX_4298h   ;--->    ;stop motor??? or newly START it?
3447 20 06       jr   @@finish   ;uh, finish WITHOUT starting scex reading?
                ;---             ;or maybe above flags DID start scex reading, and only the below abort/restart isn't necessary when motor was off
                @@do_start_scex_reading:
3449 CD 48 5D    call stop_scex_reading                     ;\abort any old, and
344C CD 48 40    call start_scex_reading_and_reset_counters ;/start NEW reading
                ;- - - -
                @@finish:
344F CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_05h_scex_finish_and_get_counters:
3452 1D 44       res  [scex_flags].6
3454 C6 01 D8    mov  a,[scex_total_count]
3457 C7 01 F0    mov  [drv_response+0],a
345A C6 01 D9    mov  a,[scex_success_count]
345D C7 01 F1    mov  [drv_response+1],a
3460 17 41       res  [41h].3
3462 CD 48 5D    call stop_scex_reading
3465 CD 3B FB    call cmd_response_begin
3468 AE 17       mov  x,idx_17h_w_reply_to_psx
346A BF 04       mov  [io_porte_idx],x
346C C6 01 F0    mov  a,[drv_response+0]
346F CD 40 FB    call write_data_bus
3472 C6 01 F1    mov  a,[drv_response+1]
3475 CD 40 FB    call write_data_bus
3478 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_06h:        ;... adjust_balance
347B B6 88       mov  a,[scratch_num_params]    ;\
347D A1 02       cmp  a,2h                      ; reject if bad num params
347F 26 34       jnz  to_bad_num_params         ;/
3481 C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\memorize old_value
3484 B7 88       mov  [88h],a                   ;/
3486 C6 01 E2    mov  a,[cmd_param_buf+2]       ;\
3489 A4 F8       and  a,0F8h                    ; ignore if new > 07h
348B 26 0F       jnz  ignore_adj_test_command   ;/
348D C6 01 E2    mov  a,[cmd_param_buf+2]       ;\
3490 A8 FF       xor  a,0FFh                    ; apply new / inverse
3492 A4 07       and  a,7h                      ;
3494 C7 01 E9    mov  [curr_cx30_balance_adj],a ;/
3497 AB 30       add  a,30h  ;cx(30+n)          ;\and send it to hardware ;CXA1782BR Servo Amplifier
3499 CD 43 33    call send_8bit_to_cxa1782br    ;/BalanceAdjust
                ;- - - - - --------
                ignore_adj_test_command:
349C B6 88       mov  a,[88h]                   ;\
349E A8 FF       xor  a,0FFh                    ; send(old_value)
34A0 A4 07       and  a,7h                      ;
34A2 C7 01 F0    mov  [drv_response+0],a        ;/
34A5 CD 3B FB    call cmd_response_begin        ;\
34A8 AE 17       mov  x,idx_17h_w_reply_to_psx  ;
34AA BF 04       mov  [io_porte_idx],x          ; do send the response
34AC C6 01 F0    mov  a,[drv_response+0]        ;
34AF CD 40 FB    call write_data_bus            ;/
34B2 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                to_bad_num_params:
34B5 CC 33 AA    jmp  cmd_bad_num_params
                ;------------------
                cmd_19h_07h:     ;... adjust_gain
34B8 B6 88       mov  a,[scratch_num_params]    ;\
34BA A1 02       cmp  a,2h                      ; verify num params
34BC 26 F7       jnz  to_bad_num_params         ;/
34BE C6 01 EA    mov  a,[curr_cx38_gain_adj]
34C1 B7 88       mov  [88h],a
34C3 C6 01 E2    mov  a,[cmd_param_buf+2]
34C6 A4 F8       and  a,0F8h
34C8 26 D2       jnz  ignore_adj_test_command
34CA C6 01 E2    mov  a,[cmd_param_buf+2]
34CD A8 FF       xor  a,0FFh                        ;new, inverse
34CF A4 07       and  a,7h
34D1 C7 01 EA    mov  [curr_cx38_gain_adj],a
34D4 AB 38       add  a,38h  ;cx(38+n)          ;\CXA1782BR Servo Amplifier
34D6 CD 43 33    call send_8bit_to_cxa1782br    ;/GainAdjust
34D9 20 C1       jr   ignore_adj_test_command
                ;------------------
                cmd_19h_08h:     ;... adjust_RAM_ONLY_balance
34DB B6 88       mov  a,[scratch_num_params]    ;\
34DD A1 02       cmp  a,2h                      ; verify num params
34DF 26 34       jnz  @@bad_num_params          ;/
34E1 C6 01 E9    mov  a,[curr_cx30_balance_adj] ;\
34E4 B7 88       mov  [88h],a                   ; get old
34E6 B7 8F       mov  [8Fh],a              ;<-- ;/
34E8 C6 01 E2    mov  a,[cmd_param_buf+2]       ;\
34EB A4 F8       and  a,0F8h                    ; get/verify wanted new
34ED 26 0A       jnz  @@reject_skip_apply       ;/
34EF C6 01 E2    mov  a,[cmd_param_buf+2]       ;\
34F2 A8 FF       xor  a,0FFh                    ; apply wanted new in RAM
34F4 A4 07       and  a,7h                      ; (but without doing I/O here)
34F6 C7 01 E9    mov  [curr_cx30_balance_adj],a ;/            ;<--
                @@reject_skip_apply:
34F9 B6 88       mov  a,[88h]                   ;\
34FB A8 FF       xor  a,0FFh                    ;
34FD A4 07       and  a,7h                      ; response = old
34FF C7 01 F0    mov  [drv_response+0],a        ;
3502 CD 3B FB    call cmd_response_begin        ;/
3505 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
3507 BF 04       mov  [io_porte_idx],x          ; send(old)
3509 C6 01 F0    mov  a,[drv_response+0]        ;
350C CD 40 FB    call write_data_bus            ;/
350F CD 3B D5    call cmd_reply_int3_inj        ;-send INT3
3512 CC 27 BD    jmp  whatever_XXX_27BDh        ;------->   in: [8Fh]
                ;---
                @@bad_num_params:
3515 CC 33 AA    jmp  cmd_bad_num_params
                ;------------------
                cmd_19h_1xh:
3518 B6 88       mov  a,[scratch_num_params]    ;\
351A A1 01       cmp  a,1h                      ; verify num params
351C 26 28       jnz  @@bad_num_params          ;/
351E C6 01 E1    mov  a,[cmd_param_buf+1]
3521 A1 1B       cmp  a,1Bh                     ;\reject 19h,1Bh..1Fh
3523 24 24       jnc  @@bad_subfunction         ;/
3525 A4 0F       and  a,0Fh                     ;\redirect 19h,10h
3527 27 0D       jz   @@cmd_19h_10h     ;--->   ;/
3529 4A          dec  a                         ;\
352A 97          mov  x,a                       ; handle 19h,11h..1Ah
352B D6 35 4C    mov  a,[cmd_19h_1xh_array+x]   ;   <-- ;cx(Xx)
352E 1F 03       res  [io_portd].7              ;   ;LDON  ... IC723.Pin11
                ;- - - - - -                    ;/
                @@finish:    ;in: cx(Xx)
3530 CD 43 33    call send_8bit_to_cxd2510q_or_cxa1782br
3533 CC 3B C3    jmp  cmd_reply_int3_stat               ;-send INT3(stat)
                ;--- --- --- ---
                @@cmd_19h_10h:
3536 1E 03       set  [io_portd].7            ;LDON  ... IC723.Pin11
3538 A6 00       mov  a,00h  ;cx(00)            ;\CXA1782BR Servo Amplifier
353A CD 43 33    call send_8bit_to_cxa1782br    ;/AllFocusSwitchesOff
353D A6 20       mov  a,20h  ;cx(20)            ;\CXA1782BR Servo Amplifier
353F CD 43 33    call send_8bit_to_cxa1782br    ;/SledAndTrackingOff
3542 A6 E0       mov  a,0E0h ;cx(E0)            ;\CXD2510Q Signal Processor
3544 20 EA       jr   @@finish      ;--->       ;/SpindleMotorStop   ;STOP ???
                          ;XXX actually, on a PSone at least, this command ???
                          ;does FORCE MOTOR ON, anti-clockwise, super-fast ???
                ;---
                @@bad_num_params:
3546 CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@bad_subfunction:
3549 CC 33 A5    jmp  cmd_19h_bad_subfunction
                ;--- --- --- ------
                cmd_19h_1xh_array:
354C 03          db 003h ;cx(03) cmd_19h_11h ;CXA1782BR Servo Amplifier, FocusSearchVoltageRising
354D 02          db 002h ;cx(02) cmd_19h_12h ;CXA1782BR Servo Amplifier, FocusSearchVoltageFalling
354E 28          db 028h ;cx(28) cmd_19h_13h ;CXA1782BR Servo Amplifier, TrackingForwardJump
354F 2C          db 02Ch ;cx(2C) cmd_19h_14h ;CXA1782BR Servo Amplifier, TrackingReverseJump
3550 22          db 022h ;cx(22) cmd_19h_15h ;CXA1782BR Servo Amplifier, SledFastForward
3551 23          db 023h ;cx(23) cmd_19h_16h ;CXA1782BR Servo Amplifier, SledFastReverse
3552 E8          db 0E8h ;cx(E8) cmd_19h_17h ;CXD2510Q Signal Processor, SpindleMotorForward
3553 EA          db 0EAh ;cx(EA) cmd_19h_18h ;CXD2510Q Signal Processor, SpindleMotorReverse
3554 25          db 025h ;cx(25) cmd_19h_19h ;CXA1782BR Servo Amplifier, SledAndTrackingServoOn
3555 21          db 021h ;cx(21) cmd_19h_1Ah ;CXA1782BR Servo Amplifier, SledServoOn
                ;------------------
                cmd_19h_2xh:    ;get txt strings
3556 B6 88       mov  a,[scratch_num_params]    ;\
3558 A1 01       cmp  a,1h                      ; verify num params
355A 26 14       jnz  @@bad_num_params          ;/
355C C6 01 E1    mov  a,[cmd_param_buf+1]
355F A4 0F       and  a,0Fh
3561 A1 06       cmp  a,6h
3563 24 0E       jnc  @@bad_subfunction
3565 C7 01 E1    mov  [cmd_param_buf+1],a ;*1
3568 48          shl  a                   ;*2
3569 CB 01 E1    add  a,[cmd_param_buf+1] ;*3
356C 97          mov  x,a
356D DC 35 76    jmp  @@cmd_19h_2xh_jumplist+x
                ;---
                @@bad_num_params:
3570 CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@bad_subfunction:
3573 CC 33 A5    jmp  cmd_19h_bad_subfunction
                ;---
                @@cmd_19h_2xh_jumplist:
3576 CC 35 88    jmp  cmd_19h_20h_return_bcd_date_version
3579 CC 35 C2    jmp  cmd_19h_21h_get_pos0_and_door_open_switches
357C CC 35 ED    jmp  cmd_19h_22h_return_txt_for_u_c   ;... or other region
357F CC 36 03    jmp  cmd_19h_23h_return_txt_cxd1782br
3582 CC 36 19    jmp  cmd_19h_24h_return_txt_cxd2510q
3585 CC 36 2F    jmp  cmd_19h_25h_return_txt_cxd1199bq
                ;------------------
                cmd_19h_20h_return_bcd_date_version:
3588 CD 3B FB    call cmd_response_begin
358B C6 10 94    mov  a,[bcd_date_version+0]  ;year
358E C7 01 F0    mov  [drv_response+0],a
3591 C6 10 95    mov  a,[bcd_date_version+1]  ;month
3594 C7 01 F1    mov  [drv_response+1],a
3597 C6 10 96    mov  a,[bcd_date_version+2]  ;day
359A C7 01 F2    mov  [drv_response+2],a
359D C6 10 97    mov  a,[bcd_date_version+3]  ;version
35A0 C7 01 F3    mov  [drv_response+3],a
35A3 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
35A5 BF 04       mov  [io_porte_idx],x          ;
35A7 C6 01 F0    mov  a,[drv_response+0]        ;
35AA CD 40 FB    call write_data_bus            ; now send above bytes
35AD C6 01 F1    mov  a,[drv_response+1]        ; (YY,MM,DD,VER)
35B0 CD 40 FB    call write_data_bus            ;
35B3 C6 01 F2    mov  a,[drv_response+2]        ;
35B6 CD 40 FB    call write_data_bus            ;
35B9 C6 01 F3    mov  a,[drv_response+3]        ;
35BC CD 40 FB    call write_data_bus            ;/
35BF CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_21h_get_pos0_and_door_open_switches:
35C2 CD 3B FB    call cmd_response_begin                ;-
35C5 A6 00       mov  a,0h                              ;\initially zero
35C7 C7 01 F0    mov  [drv_response+0],a                ;/
35CA 04 01 08    jnz  [io_portb].2,@@this_pos0          ;\
35CD C6 01 F0    mov  a,[drv_response+0]                ;
35D0 AA 01       or   a,1h                              ; POS0 pin
35D2 C7 01 F0    mov  [drv_response+0],a                ;
                @@this_pos0:                            ;/
35D5 07 01 08    jz   [io_portb].3,@@door_closed ;DOOR  ;\
35D8 C6 01 F0    mov  a,[drv_response+0]                ;
35DB AA 02       or   a,2h                              ; DOOR pin
35DD C7 01 F0    mov  [drv_response+0],a                ;
                @@door_closed:                          ;/
35E0 AE 17       mov  x,idx_17h_w_reply_to_psx          ;\
35E2 BF 04       mov  [io_porte_idx],x                  ; send response flags
35E4 C6 01 F0    mov  a,[drv_response+0]                ;
35E7 CD 40 FB    call write_data_bus                    ;/
35EA CC 3B D5    jmp  cmd_reply_int3_inj                ;-send INT3
                ;------------------
                cmd_19h_22h_return_txt_for_u_c:
35ED CD 3B FB    call cmd_response_begin
35F0 AE 17       mov  x,idx_17h_w_reply_to_psx
35F2 BF 04       mov  [io_porte_idx],x
35F4 5F          mov  x,00h,slow
                @@lop:
35F5 D6 36 45    mov  a,[txt_for_u_c+x]
35F8 CD 40 FB    call write_data_bus
35FB 5C          inc  x
35FC A3 07       cmp  x,7h
35FE 26 F5       jnz  @@lop
3600 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_23h_return_txt_cxd1782br:
3603 CD 3B FB    call cmd_response_begin
3606 AE 17       mov  x,idx_17h_w_reply_to_psx
3608 BF 04       mov  [io_porte_idx],x
360A 5F          mov  x,00h,slow
                @@lop:
360B D6 36 4C    mov  a,[txt_cxd1782br+x]
360E CD 40 FB    call write_data_bus
3611 5C          inc  x
3612 A3 09       cmp  x,9h
3614 26 F5       jnz  @@lop
3616 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_24h_return_txt_cxd2510q:
3619 CD 3B FB    call cmd_response_begin
361C AE 17       mov  x,idx_17h_w_reply_to_psx
361E BF 04       mov  [io_porte_idx],x
3620 5F          mov  x,00h,slow
                @@lop:
3621 D6 36 55    mov  a,[txt_cxd2510q+x]
3624 CD 40 FB    call write_data_bus
3627 5C          inc  x
3628 A3 08       cmp  x,8h
362A 26 F5       jnz  @@lop
362C CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_25h_return_txt_cxd1199bq:
362F CD 3B FB    call cmd_response_begin
3632 AE 17       mov  x,idx_17h_w_reply_to_psx
3634 BF 04       mov  [io_porte_idx],x
3636 5F          mov  x,00h,slow
                @@lop:
3637 D6 36 5D    mov  a,[txt_cxd1199bq+x]
363A CD 40 FB    call write_data_bus
363D 5C          inc  x
363E A3 09       cmp  x,9h
3640 26 F5       jnz  @@lop
3642 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                txt_for_u_c:
3645             db 'for U/C'         ;XXX or other regions
                txt_cxd1782br:
364C             db 'CXD1782BR'  ;Servo Amplifier (actual chip is CXA, not CXD though)
                txt_cxd2510q:
3655             db 'CXD2510Q'   ;Signal Processor
                txt_cxd1199bq:
365D             db 'CXD1199BQ'  ;FIFO (actual chip name is different though)
                ;------------------
                cmd_19h_3xh:
3666 C6 01 E1    mov  a,[cmd_param_buf+1]
3669 A4 0F       and  a,0Fh
366B 27 06       jz   cmd_19h_30h
366D 4A          dec  a
366E 27 50       jz   cmd_19h_31h
3670 CC 33 A5    jmp  cmd_19h_bad_subfunction
                ;------------------
                cmd_19h_30h:
3673 B6 88       mov  a,[scratch_num_params]    ;\
3675 A1 04       cmp  a,4h                      ; verify num params
3677 26 36       jnz  @@bad_num_params          ;/
3679 CD 47 F7    call debug_status_send_snippet_30h_00h_00h            ;--> SEND
367C C6 01 E3    mov  a,[cmd_param_buf+3]       ;\dat'1
367F B7 89       mov  [89h],a                   ;/
3681 C6 01 E4    mov  a,[cmd_param_buf+4]       ;\dat'2
3684 B7 88       mov  [88h],a                   ;/
3686 C6 01 E2    mov  a,[cmd_param_buf+2]       ;\
3689 A4 C0       and  a,0C0h                    ;
368B 26 25       jnz  @@force_10h               ; index
368D C6 01 E2    mov  a,[cmd_param_buf+2]       ;
3690 AA 40       or   a,40h                     ;
                @@force_back:  ;<-- in: A=10h   ;/
3692 CD 47 77    call debug_status_send_snippet ;------> SEND SNIPPET  ;--> SEND
3695 AE 1E       mov  x,1Eh ;30 decimal         ;\delay 30ms
3697 CD 41 C5    call delay_x_timer2_steps      ;/
369A CD 37 BA    call databus_direction_for_debug_status
369D 1A 02       set  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
369F 9D          nop
36A0 9D          nop
36A1 01 00 12    jz   [io_porta_dta].0,@@error    ;-------> no reply ?
36A4 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
36A6 CD 37 C5    call restore_default_databus_direction
36A9 CD 47 EE    call debug_status_send_snippet_00h_00h_00h            ;--> SEND
36AC CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@bad_num_params:
36AF CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@force_10h:
36B2 A6 10       mov  a,10h
36B4 20 DC       jr   @@force_back
                ;---
                @@error:
36B6 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
36B8 CD 37 C5    call restore_default_databus_direction
36BB A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
36BD CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_19h_31h:
36C0 B6 88       mov  a,[scratch_num_params]    ;\
36C2 A1 03       cmp  a,3h                      ; verify num params
36C4 26 6F       jnz  @@bad_num_params          ;/
36C6 A6 00       mov  a,0h                              ;\receive      ;<-- RECV
36C8 CD 46 EB    call debug_status_receive_snippet      ;/
36CB B6 88       mov  a,[88h]                           ;\
36CD A1 00       cmp  a,0h                              ;
36CF 26 06       jnz  @@force_index0                    ; handle received
36D1 B6 89       mov  a,[89h]                           ; value(s)
36D3 A1 04       cmp  a,4h                              ;
36D5 25 02       jc   @@index_inrange                   ;
                @@force_index0:                         ;
36D7 A6 00       mov  a,0h                              ;
                @@index_inrange:                        ;
36D9 B7 8A       mov  [8Ah],a       ;<-- use as index   ;/
36DB CD 47 F7    call debug_status_send_snippet_30h_00h_00h ;--> send  ;--> SEND
36DE C6 01 E2    mov  a,[cmd_param_buf+2] ;\dat'1       ;\
36E1 B7 89       mov  [89h],a             ;/            ;
36E3 C6 01 E3    mov  a,[cmd_param_buf+3] ;\dat'2       ;
36E6 B7 88       mov  [88h],a             ;/            ; send ....
36E8 B6 8A       mov  a,[8Ah]             ;\            ;
36EA 4C          inc  a                   ; index       ;
36EB 4C          inc  a                   ;             ;
36EC AA 40       or   a,40h               ;/            ;
36EE CD 47 77    call debug_status_send_snippet         ;/             ;--> SEND
36F1 AE 1E       mov  x,1Eh ;30 decimal                 ;\delay 30ms
36F3 CD 41 C5    call delay_x_timer2_steps              ;/
36F6 CD 37 BA    call databus_direction_for_debug_status
36F9 1A 02       set  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
36FB 9D          nop
36FC 9D          nop
36FD 01 00 38    jz   [io_porta_dta].0,@@error            ;---> error
3700 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
3702 CD 37 C5    call restore_default_databus_direction
3705 9D          nop
3706 B6 8A       mov  a,[8Ah]           ;\
3708 4C          inc  a      ;plus      ;
3709 A1 04       cmp  a,4h              ; dat'1 (index plus 1)
370B 26 02       jnz  @@keep_dat1       ; (with index 04h wrapped to 00h)
370D A6 00       mov  a,0h   ;force=0   ;
                @@keep_dat1:            ;
370F B7 89       mov  [89h],a           ;/
3711 A6 00       mov  a,0h              ;\dat'2
3713 B7 88       mov  [88h],a           ;/
3715 AA 40       or   a,40h   ;=40h     ;-index
3717 CD 47 77    call debug_status_send_snippet                        ;--> SEND
371A AE 1E       mov  x,1Eh ;30 decimal                 ;\delay 30ms
371C CD 41 C5    call delay_x_timer2_steps              ;/
371F CD 37 BA    call databus_direction_for_debug_status
3722 1A 02       set  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
3724 9D          nop
3725 9D          nop
3726 01 00 0F    jz   [io_porta_dta].0,@@error            ;---> error 2
3729 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
372B CD 37 C5    call restore_default_databus_direction
372E 9D          nop
372F CD 47 EE    call debug_status_send_snippet_00h_00h_00h            ;--> SEND
3732 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@bad_num_params:
3735 CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@error:
3738 1B 02       res  [io_portc].5              ;"ROMSEL" aka "SCLK" ?
373A CD 37 C5    call restore_default_databus_direction
373D CD 47 EE    call debug_status_send_snippet_00h_00h_00h            ;--> SEND
3740 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
3742 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_19h_4xh:
3745 B6 88       mov  a,[scratch_num_params]    ;\
3747 A1 02       cmp  a,2h                      ; verify num params
3749 26 28       jnz  @@bad_num_params          ;/
374B C6 01 E2    mov  a,[cmd_param_buf+2]               ;\
374E A4 3F       and  a,3Fh                             ;     <--------- RECV
3750 CD 46 EB    call debug_status_receive_snippet      ;/
3753 B6 89       mov  a,[89h]                   ;\copy 1st response byte
3755 C7 01 F0    mov  [drv_response+0],a        ;/
3758 B6 88       mov  a,[88h]                   ;\copy 2nd response byte
375A C7 01 F1    mov  [drv_response+1],a        ;/
375D CD 3B FB    call cmd_response_begin        ;-
3760 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
3762 BF 04       mov  [io_porte_idx],x          ;
3764 C6 01 F0    mov  a,[drv_response+0]        ; send(1st,2nd)
3767 CD 40 FB    call write_data_bus            ;
376A C6 01 F1    mov  a,[drv_response+1]        ;
376D CD 40 FB    call write_data_bus            ;/
3770 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;---
                @@bad_num_params:
3773 CC 33 AA    jmp  cmd_bad_num_params
                ;------------------
                cmd_19h_5xh:
3776 C6 01 E1    mov  a,[cmd_param_buf+1]               ;\
3779 A1 50       cmp  a,50h                             ;
377B 26 0C       jnz  @@to_cmd_19h_bad_subfunction      ;/
                ;- - - - - --------
                ;cmd_19h_50h:
377D B6 88       mov  a,[scratch_num_params]    ;\
377F A1 01       cmp  a,1h                      ; verify num params
3781 27 09       jz   @@bad_num_params          ;/
3783 CD 37 8F    call cmd_19h_50h_core  ;--> send 1..3 bytes serially to cx(X)
3786 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@to_cmd_19h_bad_subfunction
3789 CC 33 A5    jmp  cmd_19h_bad_subfunction
                ;---
                @@bad_num_params:
378C CC 33 AA    jmp  cmd_bad_num_params
                ;--- --- ---
                cmd_19h_50h_core:
378F B6 88       mov  a,[scratch_num_params]
3791 A1 02       cmp  a,1+1  ;subcmd(50h) plus ONE param
3793 27 14       jz   @@send_one_byte
3795 A1 03       cmp  a,1+2  ;subcmd(50h) plus TWO params
3797 27 16       jz   @@send_two_bytes
                ;- - -       ;subcmd(50h) plus THREE params (or more/ignored params)
                @@send_three_bytes:
3799 C6 01 E4    mov  a,[cmd_param_buf+4]          ;lsb ;\
379C B7 89       mov  [scratch_cxd_lsb],a          ;lsb ;
379E C6 01 E3    mov  a,[cmd_param_buf+3]          ;mid ; cx(Xxxxxx)
37A1 B7 88       mov  [scratch_cxd_mid],a          ;mid ;
37A3 C6 01 E2    mov  a,[cmd_param_buf+2] ;cx(X)   ;msb ;
37A6 CC 43 1D    jmp  send_24bit_to_cxd2510q            ;/
                ;---
                @@send_one_byte:
37A9 C6 01 E2    mov  a,[cmd_param_buf+2] ;cx(X)   ;msb ;\cx(Xx)
37AC CC 43 33    jmp  send_8bit_to_cxd2510q_or_cxa1782br;/
                ;---
                @@send_two_bytes:
37AF C6 01 E3    mov  a,[cmd_param_buf+3]          ;mid ;\
37B2 B7 88       mov  [scratch_cxd_mid],a          ;mid ; cx(Xxxx)
37B4 C6 01 E2    mov  a,[cmd_param_buf+2] ;cx(X)   ;msb ;
37B7 CC 43 2B    jmp  send_16bit_to_cxd2510q            ;/
                ;------------------
                databus_direction_for_debug_status:
37BA 9B          di
37BB 10 3E       set  [io_misc].0
37BD AE 06       mov  x,06h
37BF BF 00       mov  [io_hi_ddra],x       ;...direction...
37C1 11 3E       res  [io_misc].0
37C3 9A          ei
37C4 81          ret
                ;------------------
                restore_default_databus_direction:   ;(used after debug_status)
37C5 9B          di                                     ;\
37C6 10 3E       set  [io_misc].0                       ;
37C8 AE 00       mov  x,00h          ;bit0..7 = input   ; restore default
37CA BF 00       mov  [io_hi_ddra],x                    ; direction = INPUT
37CC 11 3E       res  [io_misc].0                       ;
37CE 9A          ei                                     ;/
37CF 81          ret
                ;------------------
                cmd_19h_6xh:    ;read ram
37D0 C6 01 E1    mov  a,[cmd_param_buf+1]       ;\
37D3 A4 0F       and  a,0Fh                     ; accept 60h --> Read RAM
37D5 27 03       jz   cmd_19h_60h_read_ram      ;/
37D7 CC 33 A5    jmp  cmd_19h_bad_subfunction   ;-reject 61h..6Fh
                ;------------------
                cmd_19h_60h_read_ram:
37DA B6 88       mov  a,[scratch_num_params]    ;\
37DC A1 03       cmp  a,3h                      ; verify num params
37DE 26 2B       jnz  @@bad_num_params          ;/
37E0 CE 01 E2    mov  x,[cmd_param_buf+2]
37E3 C6 01 E3    mov  a,[cmd_param_buf+3]
37E6 A4 03       and  a,3h
37E8 27 08       jz   @@area_0
37EA 4A          dec  a
37EB 27 08       jz   @@area_1
                @@area_2:
37ED D6 02 00    mov  a,[0200h+x]  ;0200h..02FFh
37F0 20 06       jr   @@this
                @@area_0:
37F2 F6          mov  a,[0000h+x]  ;0000h..00FFh
37F3 20 03       jr   @@this
                @@area_1:
37F5 D6 01 00    mov  a,[0100h+x]  ;0100h..01FFh
                @@this:
37F8 C7 01 F0    mov  [drv_response+0],a
37FB CD 3B FB    call cmd_response_begin
37FE AE 17       mov  x,idx_17h_w_reply_to_psx
3800 BF 04       mov  [io_porte_idx],x
3802 C6 01 F0    mov  a,[drv_response+0]
3805 CD 40 FB    call write_data_bus
3808 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;---
                @@bad_num_params:
380B CC 33 AA    jmp  cmd_bad_num_params
                ;------------------
                cmd_19h_7xh:   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
380E C6 01 E1    mov  a,[cmd_param_buf+1]
3811 A1 70       cmp  a,70h                     ;\
3813 26 03       jnz  @@not70h                  ; reject 70h
3815 CC 33 A5    jmp  cmd_19h_bad_subfunction   ;
                @@not70h:                       ;/
3818 A1 71       cmp  a,71h                     ;\
381A 26 02       jnz  @@not71h                  ; read(idx)
381C 20 25       jr   cmd_19h_71h               ;
                @@not71h:                       ;/
381E A1 72       cmp  a,72h                     ;\
3820 26 02       jnz  @@not72h                  ; write(idx,data)
3822 20 43       jr   cmd_19h_72h               ;
                @@not72h:                       ;/
3824 A1 73       cmp  a,73h                     ;\
3826 26 03       jnz  @@not73h                  ; read(idx,len)
3828 CC 38 7E    jmp  cmd_19h_73h               ; BUGGED
                @@not73h:                       ;/
382B A1 74       cmp  a,74h                     ;\   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
382D 26 03       jnz  @@not74h                  ; write(idx,len,data...)
382F CC 38 B1    jmp  cmd_19h_74h               ; BUGGED
                @@not74h:                       ;/
3832 A1 75       cmp  a,75h                     ;\   ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
3834 26 03       jnz  @@not75h                  ; read_four_idx_bytes()
3836 CC 38 D3    jmp  cmd_19h_75h               ;
                @@not75h:                       ;/
3839 A1 76       cmp  a,76h                     ;\
383B 26 03       jnz  @@not76h                  ; write_four_idx_bytes(a,b,c,d)
383D CC 39 20    jmp  cmd_19h_76h               ;
                @@not76h:                       ;/
3840 CC 33 A5    jmp  cmd_19h_bad_subfunction   ;-
                ;------------------
                cmd_19h_71h:
3843 B6 88       mov  a,[scratch_num_params]    ;\
3845 A1 02       cmp  a,2h                      ;
3847 27 03       jz   @@good_num_params         ; verify num params
3849 CC 33 AA    jmp  cmd_bad_num_params        ;
                ;---                            ;
                @@good_num_params:              ;/
384C CE 01 E2    mov  x,[cmd_param_buf+2]       ;\
384F BF 04       mov  [io_porte_idx],x ;idx_XXX ;
3851 CD 40 EF    call read_data_bus             ;
3854 C7 01 F0    mov  [drv_response+0],a ;dta   ;/
3857 CD 3B FB    call cmd_response_begin        ;-
385A AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
385C BF 04       mov  [io_porte_idx],x          ;
385E C6 01 F0    mov  a,[drv_response+0]        ;
3861 CD 40 FB    call write_data_bus            ;/
3864 CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_72h:
3867 B6 88       mov  a,[scratch_num_params]    ;\
3869 A1 03       cmp  a,3h                      ;
386B 27 03       jz   @@good_num_params         ; verify num params
386D CC 33 AA    jmp  cmd_bad_num_params        ;
                ;---                            ;
                @@good_num_params:              ;/
3870 CE 01 E2    mov  x,[cmd_param_buf+2]       ;\
3873 BF 04       mov  [io_porte_idx],x ;idx_XXX ;
3875 C6 01 E3    mov  a,[cmd_param_buf+3]  ;dta ;
3878 CD 40 FB    call write_data_bus            ;/
387B CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_73h:       ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
387E B6 88       mov  a,[scratch_num_params]
3880 A1 03       cmp  a,3h
3882 27 04       jz   @@cont_bugged    ;BUG: should be @@cont_correct, not @@cont_bugged
3884 CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@cont_correct:  ;UNUSED! (=BUG)
3887 5F          mov  x,00h,slow
                @@cont_bugged:   ;USED!   (=BUG)
                @@lop:                          ;\
3888 9F          mov  a,x            ;lop.index ;
3889 CB 01 E2    add  a,[cmd_param_buf+2] ;base ;
388C B7 04       mov  [io_porte_idx],a ;idx_XXX ;
388E CD 40 EF    call read_data_bus             ;
3891 D7 01 F0    mov  [drv_response+x],a        ;
3894 5C          inc  x                         ;
3895 C3 01 E3    cmp  x,[cmd_param_buf+3] ;len  ;
3898 26 EE       jnz  @@lop                     ;/
389A CD 3B FB    call cmd_response_begin        ;-
389D AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
389F BF 04       mov  [io_porte_idx],x          ;
38A1 5F          mov  x,00h,slow                ;
                @@reply_lop:                    ;
38A2 D6 01 F0    mov  a,[drv_response+x]        ;
38A5 CD 40 FB    call write_data_bus            ;
38A8 5C          inc  x                         ;
38A9 C3 01 E3    cmp  x,[cmd_param_buf+3] ;len  ;
38AC 26 F4       jnz  @@reply_lop               ;/
38AE CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_74h:       ;in: X=48h=(19h-1)*3=index in "cmd_proc_jump_list"
38B1 B6 88       mov  a,[scratch_num_params]
38B3 A0 03       sub  a,3h
38B5 C1 01 E3    cmp  a,[cmd_param_buf+3]
38B8 27 04       jz   @@cont_bugged    ;BUG: should be @@cont_correct, not @@cont_bugged
38BA CC 33 AA    jmp  cmd_bad_num_params
                ;---
                @@cont_correct:  ;UNUSED! (=BUG)
38BD 5F          mov  x,00h,slow
                @@cont_bugged:   ;USED!   (=BUG)
                @@output_lop:                   ;\
38BE 9F          mov  a,x            ;lop.index ;
38BF CB 01 E2    add  a,[cmd_param_buf+2] ;base ;
38C2 B7 04       mov  [io_porte_idx],a ;idx_XXX ;
38C4 D6 01 E4    mov  a,[cmd_param_buf+4+x] ;src;
38C7 CD 40 FB    call write_data_bus            ;
38CA 5C          inc  x                         ;
38CB C3 01 E3    cmp  x,[cmd_param_buf+3] ;len  ;
38CE 26 EE       jnz  @@output_lop              ;/
38D0 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_75h:
38D3 B6 88       mov  a,[scratch_num_params]    ;\
38D5 A1 01       cmp  a,1h                      ;
38D7 27 03       jz   @@good_num_params         ; verify num params
38D9 CC 33 AA    jmp  cmd_bad_num_params        ;
                ;---                            ;
                @@good_num_params:              ;/
38DC AE 03       mov  x,idx_03h_w_decoder_control       ;\
38DE BF 04       mov  [io_porte_idx],x                  ;       ...
38E0 A6 08       mov  a,08h                             ;
38E2 CD 40 FB    call write_data_bus                    ;/
38E5 AE 0A       mov  x,idx_0Ah_r_host_remain_lo        ;\
38E7 BF 04       mov  [io_porte_idx],x                  ; read(a) ;Host Transfer Remain, lsb
38E9 CD 40 EF    call read_data_bus                     ;
38EC C7 01 F0    mov  [drv_response+0],a                ;/
38EF 5C          inc  x ;=0Bh=idx_0Bh_r_host_remain_hi  ;\
38F0 BF 04       mov  [io_porte_idx],x                  ; read(b) ;Host Transfer Remain, msb
38F2 CD 40 EF    call read_data_bus                     ;
38F5 C7 01 F1    mov  [drv_response+1],a                ;/
38F8 5C          inc  x ;=0Ch=idx_0Ch_r_host_address_lo ;\
38F9 BF 04       mov  [io_porte_idx],x                  ; read(c) ;Host Transfer Address, lsb
38FB CD 40 EF    call read_data_bus                     ;
38FE C7 01 F2    mov  [drv_response+2],a                ;/
3901 5C          inc  x ;=0Dh=idx_0Dh_r_host_address_hi ;\
3902 BF 04       mov  [io_porte_idx],x                  ; read(d) ;Host Transfer Address, msb
3904 CD 40 EF    call read_data_bus                     ;
3907 C7 01 F3    mov  [drv_response+3],a                ;/
390A CD 3B FB    call cmd_response_begin        ;-
390D AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
390F BF 04       mov  [io_porte_idx],x          ;
3911 5F          mov  x,00h,slow                ;
                @@reply_lop:                    ; send(a,b,c,d)
3912 D6 01 F0    mov  a,[drv_response+x]        ;
3915 CD 40 FB    call write_data_bus            ;
3918 5C          inc  x                         ;
3919 A3 04       cmp  x,4h                      ;
391B 25 F5       jc   @@reply_lop               ;/
391D CC 3B D5    jmp  cmd_reply_int3_inj        ;-send INT3
                ;------------------
                cmd_19h_76h:
3920 B6 88       mov  a,[scratch_num_params]    ;\
3922 A1 05       cmp  a,5h                      ;
3924 27 03       jz   @@good_num_params         ; verify num params
3926 CC 33 AA    jmp  cmd_bad_num_params        ;
                ;---                            ;
                @@good_num_params:              ;/

                        ;... set parameters for READING CUSTOM area
                        ;     from the 32Kbyte sector buffer ?

3929 AE 03       mov  x,idx_03h_w_decoder_control               ;\
392B BF 04       mov  [io_porte_idx],x                          ; disable
392D A6 08       mov  a,08h                    ;<-- CONST !     ; decoder
392F CD 40 FB    call write_data_bus                            ;/
3932 AE 0C       mov  x,idx_0Ch_w_host_len_lo               ;\  ;\
3934 BF 04       mov  [io_porte_idx],x                      ;   ;
3936 C6 01 E2    mov  a,[cmd_param_buf+2]                   ;   ; length
3939 CD 40 FB    call write_data_bus                        ;/  ;
393C 5C          inc  x  ;=0Dh=idx_0Dh_w_host_len_hi        ;\  ;
393D BF 04       mov  [io_porte_idx],x                      ;   ;
393F C6 01 E3    mov  a,[cmd_param_buf+3]                   ;   ;
3942 CD 40 FB    call write_data_bus                        ;/  ;/
3945 5C          inc  x  ;=0Eh=idx_0Eh_w_host_address_lo    ;\  ;\
3946 BF 04       mov  [io_porte_idx],x                      ;   ;
3948 C6 01 E4    mov  a,[cmd_param_buf+4]                   ;   ; address
394B CD 40 FB    call write_data_bus                        ;/  ;
394E 5C          inc  x  ;=0Fh=idx_0Fh_w_host_address_hi    ;\  ;
394F BF 04       mov  [io_porte_idx],x                      ;   ;
3951 C6 01 E5    mov  a,[cmd_param_buf+5]                   ;   ;
3954 CD 40 FB    call write_data_bus                        ;/  ;/
3957 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
                cmd_19h_8xh:  ;UNUSED!
395A B6 88       mov  a,[scratch_num_params]    ;\
395C A1 02       cmp  a,2h                      ;
395E 27 03       jz   @@good_num_params         ; verify num params
3960 CC 33 AA    jmp  cmd_bad_num_params        ;
                ;---                            ;
                @@good_num_params:              ;/
3963 C6 01 E1    mov  a,[cmd_param_buf+1]
3966 A1 80       cmp  a,80h                     ;\
3968 27 03       jz   @@not80h                  ; want subfunction 81h..8Fh
396A CC 33 A5    jmp  cmd_19h_bad_subfunction   ; (reject 80h)
                @@not80h:                       ;/
396D C6 01 E2    mov  a,[cmd_param_buf+2]       ;\copy whatever parameter
3970 C7 01 F8    mov  [rather_unused_value],a   ;/  <-- "used" only here
3973 CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;------------------
;:              ;:-----------------
                ;------------------
                cmd_1Ah_get_id:
3976 B6 6D       mov  a,[disc_task]                     ;\
3978 A1 01       cmp  a,(1 shl dt_0_nodisk)             ; check if disc missing
397A 27 15       jz   @@error_no_disc_or_toc            ;/
397C 01 90 12    jz   [license_flags].0,@@error_no_disc_or_toc  ;...bit0=scex read busy ?
397F 0C 40 03    jnz  [40h].6,@@cont                ;<----- ..disc missing ??
3982 0F 40 0C    jz   [40h].7,@@error_no_disc_or_toc  ;...bit7=toc_loaded ?
                @@cont:
3985 1E 47       set  [47h].7           ;request "get_id" response !
3987 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
3989 A6 00       mov  a,0h
398B C7 02 0C    mov  [cmd_2nd_response_type],a
398E CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
3991 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
3993 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_1Ch_reset_dummy:   ;(not used, handled before jmp_table)
3996 CD 3B C3    call cmd_reply_int3_stat       ;-send INT3(stat)
3999 CC 10 00    jmp  sony_soft_reset           ;-reboot
                ;------------------
                cmd_1Dh_get_q:
399C B6 6D       mov  a,[disc_task]
399E A1 01       cmp  a,(1 shl dt_0_nodisk)             ;\check if disc missing
39A0 27 12       jz   @@error_no_disc_or_toc            ;/
39A2 A1 02       cmp  a,(1 shl dt_1_stopped)            ;\
39A4 27 0E       jz   @@error_no_disc_or_toc            ;/
39A6 0C 40 0B    jnz  [40h].6,@@error_no_disc_or_toc    ;-
                ;- - -
39A9 14 45       set  [45h].2
39AB 18 45       set  [45h].4 ;get_q_command = true
39AD A6 9C       mov  a,9Ch  ;156 decimal               ;\
39AF B7 67       mov  [toc_timeout],a                   ;/
39B1 CC 3B C3    jmp  cmd_reply_int3_stat               ;-send INT3(stat)
                ;---
                @@error_no_disc_or_toc:
39B4 A6 07       mov  a,7h  ;no disk, or toc-not-yet-read
39B6 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_1Eh_read_toc:
39B9 14 48       set  [48h].2
39BB CD 29 C6    call init_various_idx_stuff            ;-
39BE 18 B7       set  [curr_idx_07h_w_chip_control].4   ;-select AUDIO mode (bit4=1)
39C0 A6 01       mov  a,(1 shl dt_0_nodisk)             ;\
39C2 B1 6D       cmp  a,[disc_task]                     ; check if disc missing
39C4 27 0D       jz   @@to_error_no_disc_or_toc         ;/
39C6 B6 6C       mov  a,[mech_task]                             ;-get task
39C8 27 04       jz   @@stopped  ;mt_00h_stopped                ;-
39CA A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok (or above) ;\
39CC 25 08       jc   @@to_error_no_disc_or_toc_too             ;/
                @@stopped:
39CE 0C 40 02    jnz  [40h].6,@@to_error_no_disc_or_toc ;-
39D1 20 06       jr   @@cont
                ;--- --- ---
                @@to_error_no_disc_or_toc:
39D3 CC 3A 0F    jmp  @@error_no_disc_or_toc
                ;---
                @@to_error_no_disc_or_toc_too:
39D6 CC 3A 19    jmp  @@error_no_disc_or_toc_too
                ;--- --- ---
                @@cont:
39D9 13 43       res  [43h].1
39DB 11 43       res  [43h].0
39DD A6 02       mov  a,(1 shl dt_1_stopped)    ;\
39DF B7 6D       mov  [disc_task],a             ;/
39E1 CD 28 B3    call enter_pause_state
39E4 10 49       set  [49h].0
39E6 15 43       res  [43h].2
39E8 CD 42 22    call mute_cd_da
39EB 14 45       set  [45h].2                      ;\this part is other as
39ED 16 45       set  [45h].3                      ;/in "init" command
39EF B6 90       mov  a,[license_flags]         ;\
39F1 A4 10       and  a,10h ;=[license_flags].4 ;
39F3 B7 90       mov  [license_flags],a         ;/
                ;- - - -
                @@finish:
39F5 1D 46       res  [46h].6                   ;-mark no_set_loc_pending
39F7 A6 20       mov  a,20h                     ;\force mode=20h
39F9 B7 BB       mov  [drv_mode],a              ;/
39FB B6 BC       mov  a,[drv_stat]              ;\
39FD A4 F2       and  a,0F2h ;clear error bits  ; clear error bits
39FF B7 BC       mov  [drv_stat],a              ;/
3A01 4F          mov  a,00h,slow                ;\
3A02 B7 BD       mov  [err_code_for_id],a       ; clear error codes
3A04 B7 BE       mov  [err_code_for_seek],a     ;
3A06 B7 BF       mov  [err_code_for_cmd],a      ;/
3A08 A6 4E       mov  a,4Eh                     ;\   ??
3A0A B7 75       mov  [boot_scex_timeout],a     ;/
3A0C CC 3B C3    jmp  cmd_reply_int3_stat       ;-send INT3(stat)
                ;--- --- ---
                @@error_no_disc_or_toc:
3A0F 1C 47       set  [47h].6   ;second response pending (INT2 or INT5)
3A11 A6 00       mov  a,0h                      ;\
3A13 C7 02 0C    mov  [cmd_2nd_response_type],a ;/
3A16 CC 39 F5    jmp  @@finish
                ;--- --- ---
                @@error_no_disc_or_toc_too:
3A19 20 F4       jr   @@error_no_disc_or_toc
                ;------------------
                cmd_00h_17h_18h_or_1Fh_thru_FFh:
3A1B C6 01 E0    mov  a,[cmd_param_buf+0]
3A1E A4 F0       and  a,0F0h
3A20 A1 50       cmp  a,50h
3A22 27 05       jz   cmd_5xh_verify_secret     ;WHEW :-) !!!!!
                ;- - - - - --------
                cmd_invalid_command:  ;<--this also for "hidden" secret commands
3A24 A6 06       mov  a,6h  ;invalid command
3A26 CC 3C 09    jmp  cmd_error_bit_a
                ;------------------
                cmd_5xh_verify_secret:
3A29 4F          mov  a,00h,slow
3A2A B7 8B       mov  [8Bh],a
                @@read_lop:
3A2C AE 11       mov  x,idx_11h_r_psx_fifo_flags                ;\
3A2E BF 04       mov  [io_porte_idx],x                          ;
3A30 CD 40 EF    call read_data_bus                             ;
3A33 B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a         ;/
3A35 09 B5 10    jz   [curr_idx_11h_r_psx_fifo_flags].4,@@read_done ;... param_fifo empty
3A38 AE 12       mov  x,idx_12h_r_param_from_psx
3A3A BF 04       mov  [io_porte_idx],x
3A3C CD 40 EF    call read_data_bus
3A3F BE 8B       mov  x,[8Bh]
3A41 D7 02 30    mov  [secret_string_buffer+x],a
3A44 3C 8B       inc  [8Bh]
3A46 20 E4       jr   @@read_lop
                @@read_done:
                ;- - -
3A48 C6 01 E0    mov  a,[cmd_param_buf+0]
3A4B A4 0F       and  a,0Fh           ;XXXX no range check here !!!!
3A4D B7 88       mov  [88h],a           ;cmd_58h_thru_5Fh could CRASH (though... doesn't look useful)
3A4F 48          shl  a        ;mul2
3A50 BB 88       add  a,[88h]  ;mul3
3A52 97          mov  x,a
3A53 DD 3A 5B    call @@proc_list+x           ;------------>
3A56 CD 3B B6    call cmd_5xh_zerofill_secret_string_buffer ;<-- hide
3A59 20 C9       jr   cmd_invalid_command       ;<-- respond "invalid" (as if the secret command wouldn't exist)
                ;---
                @@proc_list:
3A5B CC 3A EA    jmp  cmd_50h_verify_txt_nul_begin      ;\
3A5E CC 3A F1    jmp  cmd_51h_verify_txt_licensed_by    ;
3A61 CC 3B 0E    jmp  cmd_52h_verify_txt_sony           ;
3A64 CC 3B 2E    jmp  cmd_53h_verify_txt_computer       ;
3A67 CC 3B 51    jmp  cmd_54h_verify_txt_entertainment  ;
3A6A CC 3B 77    jmp  cmd_55h_verify_txt_of_america     ;
3A6D CC 3B A0    jmp  cmd_56h_verify_txt_nul_finish     ;/
3A70 CC 3B B2    jmp  cmd_57h_verify_fallback           ;-
N/A             ;jmp  cmd_58h_thru_5Fh_crash            ;<-- undefined/crash
                ;------------------
3A73            txt_licensed_by:    db 'Licensed by'
3A7E            txt_sony:           db 'Sony'
3A82            txt_computer:       db 'Computer'
3A8A            txt_entertainment:  db 'Entertainment'
3A97            txt_of_america:     db 'of America'      ;<-- for US region
3AA1             db 009h,009h,';for North America area'  ;<-- UNUSED!
3ABA             db '(Europe)'                           ;<-- would be used for europe (verified on PAL PSone)
3AC2             db 009h,009h,';for Europe area'         ;<-- UNUSED!
3AD4             db 'Inc.'                               ;<-- would be used for japan
3AD8             db 009h,009h,009h,';for Japan area'     ;<-- UNUSED!
                ;note: the above unused tab-stops and unused ";comments" might
                ;be caused by missing ending quotes in original source code.
                ;------------------
                cmd_50h_verify_txt_nul_begin:
3AEA B6 8B       mov  a,[8Bh]
3AEC 26 02       jnz  @@bad_length
3AEE 10 9F       set  [secret_unlock_flags].0   ;<-- mark cmd 50h OKAY
                @@bad_length:
3AF0 81          ret
                ;------------------
                cmd_51h_verify_txt_licensed_by:
3AF1 B6 8B       mov  a,[8Bh]
3AF3 A1 0B       cmp  a,0Bh
3AF5 26 14       jnz  @@bad_length
3AF7 5F          mov  x,00h,slow
                @@lop:
3AF8 D6 3A 73    mov  a,[txt_licensed_by+x]
3AFB D1 02 30    cmp  a,[secret_string_buffer+x]
3AFE 26 0B       jnz  @@mismatch
3B00 5C          inc  x
3B01 A3 0B       cmp  x,0Bh
3B03 26 F3       jnz  @@lop
3B05 01 9F 03    jz   [secret_unlock_flags].0,@@bad_preceeding_command
3B08 12 9F       set  [secret_unlock_flags].1   ;<-- mark cmd 51h OKAY
3B0A 81          ret
                ;---
                @@bad_preceeding_command:
                @@bad_length:
                @@mismatch:
3B0B CC 3B B2    jmp  cmd_5xh_error_fallback
                ;------------------
                cmd_52h_verify_txt_sony:
3B0E B6 8B       mov  a,[8Bh]
3B10 A1 04       cmp  a,4h
3B12 26 17       jnz  @@bad_length
3B14 5F          mov  x,00h,slow
                @@lop:
3B15 D6 3A 7E    mov  a,[txt_sony+x]
3B18 D1 02 30    cmp  a,[secret_string_buffer+x]
3B1B 26 0E       jnz  @@mismatch
3B1D 5C          inc  x
3B1E A3 04       cmp  x,4h
3B20 26 F3       jnz  @@lop
3B22 01 9F 06    jz   [secret_unlock_flags].0,@@bad_preceeding_command
3B25 03 9F 03    jz   [secret_unlock_flags].1,@@bad_preceeding_command
3B28 14 9F       set  [secret_unlock_flags].2   ;<-- mark cmd 52h OKAY
3B2A 81          ret
                ;---
                @@bad_preceeding_command:
                @@bad_length:
                @@mismatch:
3B2B CC 3B B2    jmp  cmd_5xh_error_fallback
                ;------------------
                cmd_53h_verify_txt_computer:
3B2E B6 8B       mov  a,[8Bh]
3B30 A1 08       cmp  a,8h
3B32 26 1A       jnz  @@bad_length
3B34 5F          mov  x,00h,slow
                @@lop:
3B35 D6 3A 82    mov  a,[txt_computer+x]
3B38 D1 02 30    cmp  a,[secret_string_buffer+x]
3B3B 26 11       jnz  @@mismatch
3B3D 5C          inc  x
3B3E A3 08       cmp  x,8h
3B40 26 F3       jnz  @@lop
3B42 01 9F 09    jz   [secret_unlock_flags].0,@@bad_preceeding_command
3B45 03 9F 06    jz   [secret_unlock_flags].1,@@bad_preceeding_command
3B48 05 9F 03    jz   [secret_unlock_flags].2,@@bad_preceeding_command
3B4B 16 9F       set  [secret_unlock_flags].3   ;<-- mark cmd 53h OKAY
3B4D 81          ret
                ;---
                @@bad_preceeding_command:
                @@bad_length:
                @@mismatch:
3B4E CC 3B B2    jmp  cmd_5xh_error_fallback
                ;------------------
                cmd_54h_verify_txt_entertainment:
3B51 B6 8B       mov  a,[8Bh]
3B53 A1 0D       cmp  a,0Dh
3B55 26 1D       jnz  @@bad_length
3B57 5F          mov  x,00h,slow
                @@lop:
3B58 D6 3A 8A    mov  a,[txt_entertainment+x]
3B5B D1 02 30    cmp  a,[secret_string_buffer+x]
3B5E 26 14       jnz  @@mismatch
3B60 5C          inc  x
3B61 A3 0D       cmp  x,0Dh
3B63 26 F3       jnz  @@lop
3B65 01 9F 0C    jz   [secret_unlock_flags].0,@@bad_preceeding_command
3B68 03 9F 09    jz   [secret_unlock_flags].1,@@bad_preceeding_command
3B6B 05 9F 06    jz   [secret_unlock_flags].2,@@bad_preceeding_command
3B6E 07 9F 03    jz   [secret_unlock_flags].3,@@bad_preceeding_command
3B71 18 9F       set  [secret_unlock_flags].4   ;<-- mark cmd 54h OKAY
3B73 81          ret
                ;---
                @@bad_preceeding_command:
                @@bad_length:
                @@mismatch:
3B74 CC 3B B2    jmp  cmd_5xh_error_fallback
                ;------------------
                cmd_55h_verify_txt_of_america:
3B77 B6 8B       mov  a,[8Bh]
3B79 A1 0A       cmp  a,0Ah                     ;<-- or else for other region
3B7B 26 20       jnz  @@bad_length
3B7D 5F          mov  x,00h,slow
                @@lop:
3B7E D6 3A 97    mov  a,[txt_of_america+x]      ;<-- or else for other region
3B81 D1 02 30    cmp  a,[secret_string_buffer+x]
3B84 26 17       jnz  @@mismatch
3B86 5C          inc  x
3B87 A3 0A       cmp  x,0Ah                     ;<-- or else for other region
3B89 26 F3       jnz  @@lop
3B8B 01 9F 0F    jz   [secret_unlock_flags].0,@@bad_preceeding_command
3B8E 03 9F 0C    jz   [secret_unlock_flags].1,@@bad_preceeding_command
3B91 05 9F 09    jz   [secret_unlock_flags].2,@@bad_preceeding_command
3B94 07 9F 06    jz   [secret_unlock_flags].3,@@bad_preceeding_command
3B97 09 9F 03    jz   [secret_unlock_flags].4,@@bad_preceeding_command
3B9A 1A 9F       set  [secret_unlock_flags].5   ;<-- mark cmd 55h OKAY
3B9C 81          ret
                ;---
                @@bad_preceeding_command:
                @@bad_length:
                @@mismatch:
3B9D CC 3B B2    jmp  cmd_5xh_error_fallback
                ;------------------
                cmd_56h_verify_txt_nul_finish:
3BA0 B6 8B       mov  a,[8Bh]                           ;\reject if txt<>""
3BA2 26 0E       jnz  cmd_5xh_error_fallback   ;bad_len ;/
3BA4 0A 9F 02    jnz  [secret_unlock_flags].5,@@okay    ;\reject if prior cmd's
3BA7 20 09       jr   cmd_5xh_error_fallback            ;/50h..55h were bad
                ;---
                @@okay:
3BA9 1E 9F       set  [secret_unlock_flags].7   ;<-- mark ALL cmds OKAY
3BAB B6 9F       mov  a,[secret_unlock_flags]   ;\
3BAD A4 80       and  a,80h                     ; strip lower bits
3BAF B7 9F       mov  [secret_unlock_flags],a   ;/
3BB1 81          ret
                ;------------------
                cmd_57h_verify_fallback:
                cmd_5xh_error_fallback:
3BB2 4F          mov  a,00h,slow
3BB3 B7 9F       mov  [secret_unlock_flags],a
3BB5 81          ret
                ;------------------
                cmd_5xh_zerofill_secret_string_buffer:
3BB6 4F          mov  a,00h,slow                ;\
3BB7 AE 0F       mov  x,0Fh                     ;
                @@lop:                          ; zerofill secret string buffer
3BB9 D7 02 30    mov  [secret_string_buffer+x],a;
3BBC 5A          dec  x                         ;
3BBD 26 FA       jnz  @@lop                     ;
3BBF C7 02 30    mov  [secret_string_buffer],a  ;/
3BC2 81          ret
                ;------------------
                cmd_reply_int3_stat:    ;send INT3(stat)
3BC3 AD 36       call relative cmd_response_begin       ;-
3BC5 B6 BC       mov  a,[drv_stat]                      ;\
3BC7 A4 F2       and  a,0F2h ;clear error bits          ;
3BC9 B7 BC       mov  [drv_stat],a                      ;
3BCB C7 01 F0    mov  [drv_response+0],a                ; reply stat
3BCE AE 17       mov  x,idx_17h_w_reply_to_psx          ;
3BD0 BF 04       mov  [io_porte_idx],x                  ;
3BD2 CD 40 FB    call write_data_bus                    ;/
                ;- - - - - --------
                cmd_reply_int3_inj:
3BD5 CD 3B DE    call cmd_response_finish_part1         ;\
3BD8 CD 3B ED    call cmd_response_finish_part2         ;/
3BDB CC 40 C6    jmp  fire_irq_3                        ;-fire INT3
                ;------------------
                cmd_response_finish_part1:       ;... does WHATEVER ?
3BDE B6 B3       mov  a,[curr_idx_07h_r_int_stat]       ;\simulate below
3BE0 A4 FD       and  a,0FDh  ;not bit1                 ; acknowledge in RAM
3BE2 B7 B3       mov  [curr_idx_07h_r_int_stat],a       ;/
3BE4 A6 02       mov  a,02h   ;bit1                     ;\
3BE6 AE 0B       mov  x,idx_0Bh_w_int_ack               ; acknowledge HostCmd
3BE8 BF 04       mov  [io_porte_idx],x                  ; "interrupt"
3BEA CC 40 FB    jmp  write_data_bus                    ;/
                ;------------------
                cmd_response_finish_part2:
                           ;... MAYBE unlock/send response fifo ? or whatever
3BED 1C BA       set  [curr_idx_0Ah_w_clrctl].6
3BEF AE 0A       mov  x,idx_0Ah_w_clrctl
3BF1 BF 04       mov  [io_porte_idx],x
3BF3 B6 BA       mov  a,[curr_idx_0Ah_w_clrctl]
3BF5 CD 40 FB    call write_data_bus
3BF8 1D BA       res  [curr_idx_0Ah_w_clrctl].6
3BFA 81          ret
                ;------------------
                cmd_response_begin:          ;... MAYBE clear response fifo ?
3BFB 1A BA       set  [curr_idx_0Ah_w_clrctl].5    ;<-- "ack param"
3BFD AE 0A       mov  x,idx_0Ah_w_clrctl
3BFF BF 04       mov  [io_porte_idx],x
3C01 B6 BA       mov  a,[curr_idx_0Ah_w_clrctl]
3C03 CD 40 FB    call write_data_bus
3C06 1B BA       res  [curr_idx_0Ah_w_clrctl].5 ;-back off (for next write)
3C08 81          ret
                ;------------------
                cmd_error_bit_a:   ;in: a=4,5,6,7
3C09 AE 00       mov  x,0h                      ;\
3C0B CF 02 0C    mov  [cmd_2nd_response_type],x ;/
3C0E 97          mov  x,a                       ;\
3C0F D6 3C 4D    mov  a,[errcode_xlat_list+x]   ; xlat error code to "1 SHL N"
3C12 B7 BF       mov  [err_code_for_cmd],a      ;
3C14 C7 01 F1    mov  [drv_response+1],a        ;/
3C17 B6 BC       mov  a,[drv_stat]              ;\
3C19 A4 F2       and  a,0F2h ;clear error bits  ;
3C1B AA 01       or   a,1h  ;bit0               ; stat
                ;aka [drv_stat].0 ;cmd_error    ;
3C1D B7 BC       mov  [drv_stat],a              ;
3C1F C7 01 F0    mov  [drv_response+0],a        ;/
3C22 CD 3C 55    call send_2_byte_response      ;-send(stat,error_code)
3C25 CD 3B DE    call cmd_response_finish_part1 ;\
3C28 CD 3B ED    call cmd_response_finish_part2 ;/
3C2B CD 40 D8    call fire_irq_5                ;<-- fire INT5 NOW
3C2E B6 BF       mov  a,[err_code_for_cmd]      ;\
3C30 CC 41 70    jmp  send_debug_status_packet  ;/
                ;------------------
                enqueue_int5_error_bit_a:
3C33 AE 00       mov  x,0h                      ;\
3C35 CF 02 0C    mov  [cmd_2nd_response_type],x ;/
3C38 97          mov  x,a                       ;\
3C39 D6 3C 4D    mov  a,[errcode_xlat_list+x]   ; xlat error code to "1 SHL N"
3C3C B7 BE       mov  [err_code_for_seek],a     ;/
3C3E B6 BC       mov  a,[drv_stat]              ;\
3C40 A4 F2       and  a,0F2h ;clear error bits  ;
3C42 B7 BC       mov  [drv_stat],a              ;
3C44 14 BC       set  [drv_stat].2 ;seek_error  ;/
3C46 18 47       set  [47h].4                   ;<-- request INT5 LATER
3C48 B6 BE       mov  a,[err_code_for_seek]     ;\
3C4A CC 41 70    jmp  send_debug_status_packet  ;/
                ;------------------
                errcode_xlat_list:
3C4D             db 001h,002h,004h,008h,010h,020h,040h,080h
                ;------------------
                send_2_byte_response:
3C55 CD 3B FB    call cmd_response_begin
3C58 AE 17       mov  x,idx_17h_w_reply_to_psx
3C5A BF 04       mov  [io_porte_idx],x
3C5C C6 01 F0    mov  a,[drv_response+0]
3C5F CD 40 FB    call write_data_bus
3C62 C6 01 F1    mov  a,[drv_response+1]
3C65 CC 40 FB    jmp  write_data_bus
                ;------------------
;:              ;:-----------------
                ;------------------
                stop_and_soft_reset:
3C68 CD 42 05    call stop_spindle_motor        ;-motor off
3C6B CC 10 00    jmp  sony_soft_reset           ;-reboot
                ;------------------
                enter_data_or_audio_mode:
3C6E B6 6D       mov  a,[disc_task]
3C70 A1 01       cmp  a,(1 shl dt_0_nodisk)             ;\check if disc missing
3C72 27 10       jz   @@data     ;--> force data ?      ;/
3C74 A1 02       cmp  a,(1 shl dt_1_stopped)            ;\
3C76 27 0C       jz   @@data     ;--> force data        ;/
3C78 0C 50 09    jnz  [subq_rx_buf+0].6,@@data     ;ADR/Control Bit6=Data
3C7B 01 6A 03    jz   [datamode_flag].0,@@audio  ;-----> audio/play
3C7E 01 BB 03    jz   [drv_mode].0,@@data  ;cdda (0=off, 1=allow reading edc-less cdda sectors)
                @@audio:
3C81 CC 40 73    jmp  enter_cdda_audio_mode
                ;---
                @@data:
3C84 CD 40 32    call enter_cdrom_data_mode
3C87 81          ret
                ;------------------
                whatever_XXX_3C88h:
3C88 B6 6B       mov  a,[seek_task]             ;\
3C8A A1 0D       cmp  a,0Dh                     ;
3C8C 24 1D       jnc  to_ret  ;aka @@exit       ;/
3C8E CD 3D BF    call whatever_XXX_3DBFh        ;-    ;--------->
3C91 B6 7D       mov  a,[distance_mm]       ;MM ;\
3C93 26 07       jnz  @@cont                    ;
3C95 B6 7E       mov  a,[distance_ss]       ;SS ;
3C97 26 03       jnz  @@cont                    ;/
3C99 CC 3D 82    jmp  whatever_XXX_3D82h        ;-   SHORT distance !
                ;---
                @@cont:
3C9C CD 19 2F    call xlat_msf_distance_to_16bit_origin_curr_subq
3C9F CC 17 22    jmp  whatever_XXX_1722h
                ;------------------
                whatever_XXX_3CA2h:
3CA2 0F BB 02    jz   [drv_mode].7,@@this_speed  ;speed ;\
3CA5 16 02       set  [io_portc].3      ;SPEED pin      ; speed
                @@this_speed:                           ;/
3CA7 A6 0D       mov  a,0Dh                             ;\
3CA9 B7 6B       mov  [seek_task],a                     ;/
                ;- - - - - --------
                to_ret:
3CAB 81          ret
                ;------------------
                whatever_XXX_3CACh:     ;... check if SEEK DONE ?
3CAC B6 6B       mov  a,[seek_task]                     ;\
3CAE 27 2F       jz   @@exit                            ;/
3CB0 B6 6B       mov  a,[seek_task]                     ;\
3CB2 A1 0D       cmp  a,0Dh                             ;
3CB4 25 29       jc   @@exit                            ;/
3CB6 0A 42 26    jnz  [42h].5,@@exit
3CB9 0C 42 23    jnz  [42h].6,@@exit
3CBC B6 6C       mov  a,[mech_task]                     ;\
3CBE A1 0A       cmp  a,0Ah  ;mt_0Ah_normal_speed_ok    ;
3CC0 27 05       jz   @@speed_shall_be_stable           ; check if speed stable
3CC2 A1 0C       cmp  a,0Ch  ;mt_0Ch_double_speed_ok    ; (exit otherwise)
3CC4 27 01       jz   @@speed_shall_be_stable           ;
3CC6 81          ret                                    ;
                ;---                                    ;
                @@speed_shall_be_stable:                ;/
3CC7 01 41 15    jz   [41h].0,@@exit
3CCA CD 3E 56    call calc_difference_between_data_and_wanted_msf
3CCD 06 42 10    jnz  [42h].3,@@distance_is_negative  ;sled direction
3CD0 B6 7D       mov  a,[distance_mm]       ;MM ;\
3CD2 BA 7E       or   a,[distance_ss]       ;SS ;
3CD4 BA 7F       or   a,[distance_ff]       ;FF ;
3CD6 27 08       jz   @@distance_is_zero        ;/
3CD8 A6 01       mov  a,1h                      ;\
3CDA B7 7A       mov  [seek_dist_8bit],a        ;/
3CDC CC 1C 70    jmp  seek_one_step_ahead_or_back
                ;---
                @@exit:
3CDF 81          ret
                ;---
                @@distance_is_negative:
                @@distance_is_zero:
3CE0 07 42 13    jz   [42h].3,@@act_as_near_distance  ;dir    ;act as NEAR dist
3CE3 04 42 03    jnz  [42h].2,@@check_if_near_or_far_distance ;check if NEAR/FAR
3CE6 CC 3D 37    jmp  @@ignore_target    ;--> reload & exit
                ;--- --- ---
                @@check_if_near_or_far_distance:
3CE9 B6 7D       mov  a,[distance_mm]       ;MM ;\
3CEB 26 06       jnz  @@to_finish1              ;   FAR distance
3CED B6 7E       mov  a,[distance_ss]       ;SS ;
3CEF 26 02       jnz  @@to_finish1              ;/
3CF1 20 03       jr   @@act_as_near_distance    ;-  NEAR distance
                ;---
                @@to_finish1:
3CF3 CC 3D 79    jmp  @@finish1         ;(on FAR distance)
                ;--- --- ---
                @@act_as_near_distance:
3CF6 B6 6B       mov  a,[seek_task]                             ;\
3CF8 A1 0E       cmp  a,0Eh                                     ;
3CFA 24 13       jnc  @@act_as_ultranear_distance2              ;/
3CFC 07 42 06    jz   [42h].3,@@act_as_ultranear_distance1      ;-sled direction
3CFF B6 7F       mov  a,[distance_ff]               ;FF ;\
3D01 A1 03       cmp  a,3h                              ;
3D03 24 36       jnc  @@notyet_ultranear_target         ;/
                @@act_as_ultranear_distance1:
3D05 02 43 36    jnz  [43h].1,@@abort_seek_play_read    ;-->
                ;- - - - - -
3D08 A6 0E       mov  a,0Eh                     ;\
3D0A B7 6B       mov  [seek_task],a             ;/
3D0C CD 42 33    call mute_or_demute_cd_da      ;-
                @@act_as_ultranear_distance2:
3D0F 06 42 2B    jnz  [42h].3,@@exit2           ;-sled direction
3D12 B6 7F       mov  a,[distance_ff]       ;FF ;\
3D14 A1 01       cmp  a,1h  ;aka check if ZERO  ; check if NEAREST (dist=0)
3D16 24 25       jnc  @@exit2                   ;/
                ;- - - - - - NEAREST (this sector is target!) start read/play!
3D18 3F 6B       mov  [seek_task],00h                   ;-
3D1A A6 04       mov  a,(1 shl dt_2_whatever)           ;\change task !
3D1C B7 6D       mov  [disc_task],a                     ;/
3D1E 19 46       res  [46h].4                           ;-
3D20 A6 78       mov  a,78h ;120 decimal                ;\
3D22 B7 9E       mov  [test_timeout_2],a                ;/
3D24 13 47       res  [47h].1                           ;-
3D26 10 45       set  [45h].0    ;... sector_needs_processing = TRUE  ;uh, but this function is called ONLY when that flag was ALREADY set anyways?
                ;- - - below is similar as in "do_medium_fine_search" - - -
3D28 1D BC       res  [drv_stat].6 ;seek_active = false ;\
3D2A 00 6A 05    jnz  [datamode_flag].0,@@non_audio     ;
3D2D 1E BC       set  [drv_stat].7 ;play_active = true  ;
3D2F 1B BC       res  [drv_stat].5 ;read_active = false ; switch to read or play
3D31 81          ret                                    ; and exit
                ;---                                    ;
                @@non_audio:                            ;
3D32 1A BC       set  [drv_stat].5 ;read_active = true  ;
3D34 1F BC       res  [drv_stat].7 ;play_active = false ;
3D36 81          ret                                    ;/
                ;--- --- ---
N/A             ;N/A  ;\(similar proc has extra opcodes here)
N/A             ;N/A  ;/
                ;--- --- ---
                @@ignore_target:
3D37 A6 0C       mov  a,0Ch                     ;\
3D39 B7 6B       mov  [seek_task],a             ;/
                @@notyet_ultranear_target:
3D3B 14 42       set  [42h].2                   ;-
                @@exit2:
3D3D 81          ret
                ;--- --- ---
                @@abort_seek_play_read:
3D3E 1D BC       res  [drv_stat].6 ;seek_active = false         ;\
3D40 1F BC       res  [drv_stat].7 ;play_active = false         ;
3D42 1B BC       res  [drv_stat].5 ;read_active = false         ;/
3D44 A6 01       mov  a,1h ;for cmp a,[cmd_2nd_response_type]   ;\
3D46 CD 45 A9    call discard_response_type_A                   ;
N/A             ;N/A  a,4h ;for cmp a,[cmd_2nd_response_type]   ;
N/A             ;N/A  discard_response_type_A                   ;
3D49 A6 04       mov  a,4h ;for cmp a,[cmd_2nd_response_type]   ;
3D4B CD 45 A9    call discard_response_type_A                   ;/
                ;- - -
3D4E A6 0C       mov  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;\
3D50 B7 6D       mov  [disc_task],a                                 ;
3D52 04 42 20    jnz  [42h].2,@@finish2                             ;/
3D55 C6 02 20    mov  a,[sector_header+0]           ;MM ;\
3D58 B7 4D       mov  [wanted_data_mm],a                ;
3D5A C6 02 21    mov  a,[sector_header+1]           ;SS ;  <-- DATA position
3D5D B7 4E       mov  [wanted_data_ss],a                ;
3D5F C6 02 22    mov  a,[sector_header+2]           ;FF ;
3D62 B7 4F       mov  [wanted_data_ff],a                ;/
3D64 C6 02 17    mov  a,[subq_position+7]           ;MM ;\
3D67 B7 5D       mov  [wanted_subq_mm],a                ;
3D69 C6 02 18    mov  a,[subq_position+8]           ;SS ;
3D6C B7 5E       mov  [wanted_subq_ss],a                ;
3D6E C6 02 19    mov  a,[subq_position+9]           ;FF ;
3D71 B7 5F       mov  [wanted_subq_ff],a                ;/
3D73 14 42       set  [42h].2                           ;-
                @@finish2:
3D75 A6 7D       mov  a,7Dh ;125 decimal                ;\
3D77 B7 70       mov  [seek_timeout],a                  ;/
                ;- - - - -
                @@finish1:
3D79 A6 01       mov  a,1h                              ;\
3D7B B7 6B       mov  [seek_task],a                     ;/
3D7D 16 40       set  [40h].3                           ;-
3D7F CC 42 22    jmp  mute_cd_da                        ;-
                ;------------------
                whatever_XXX_3D82h:
3D82 B6 4D       mov  a,[wanted_data_mm]            ;MM ;\
3D84 CD 43 E9    call packed_bcd_to_binary              ;
3D87 97          mov  x,a      ;minute                  ;/
3D88 CD 19 91    call get_x_from_minute_table  ;in/out: X
3D8B B7 8C       mov  [8Ch],a  ;divider
3D8D A6 08       mov  a,8h              ;\
3D8F B7 8A       mov  [8Ah],a           ; 8CAh = 2250 = 30*75   ...?
3D91 A6 CA       mov  a,0CAh            ;
3D93 B7 8B       mov  [8Bh],a           ;/
3D95 CD 1C A0    call maths_divide_16bit_by_8bit
3D98 B6 7F       mov  a,[distance_ff]
3D9A CD 43 E9    call packed_bcd_to_binary
3D9D BE 8B       mov  x,[8Bh]
3D9F BF 89       mov  [89h],x
3DA1 5F          mov  x,00h,slow                        ;\
                @@divide_lop:                           ;
3DA2 5C          inc  x        ;result                  ;
3DA3 B0 89       sub  a,[89h]  ;remainder               ;
3DA5 24 FB       jnc  @@divide_lop                      ;
3DA7 5A          dec  x        ;result                  ;/
3DA8 07 42 07    jz   [42h].3,@@round_up ;sled direction;\
3DAB A3 01       cmp  x,1h                              ;
3DAD 25 0D       jc   @@too_small                       ;
3DAF 06 42 01    jnz  [42h].3,@@do_not_round_up  ;dir   ;
                @@round_up:                             ;
3DB2 5C          inc  x                                 ;
                @@do_not_round_up:                      ;/
3DB3 A6 00       mov  a,0h                              ;\
3DB5 B7 7B       mov  [seek_dist_16bit_msb],a ;msb=00h  ;
3DB7 BF 7C       mov  [seek_dist_16bit_lsb],x ;lsb=x    ;
3DB9 CC 1B 96    jmp  seek_dist_16bit                   ;/ ;in: [seek_dist_16bit_msb]:[seek_dist_16bit_lsb]
                ;---
                @@too_small:
3DBC CC 3C A2    jmp  whatever_XXX_3CA2h        ;--->
                ;------------------
                whatever_XXX_3DBFh:
3DBF 0D 45 3A    jz   [45h].6,@@skip_add_sub
                ;- - - - - - - -
3DC2 B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
3DC4 B7 88       mov  [scratch_msf_mm1],a       ;
3DC6 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
3DC8 B7 89       mov  [scratch_msf_ss1],a       ;
3DCA B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
3DCC B7 8A       mov  [scratch_msf_ff1],a       ;/
3DCE C6 01 CB    mov  a,[mismatch_msf+0]    ;MM ;\
3DD1 B7 8B       mov  [scratch_msf_mm2],a       ;
3DD3 C6 01 CC    mov  a,[mismatch_msf+1]    ;SS ;
3DD6 B7 8C       mov  [scratch_msf_ss2],a       ;
3DD8 C6 01 CD    mov  a,[mismatch_msf+2]    ;FF ;
3DDB B7 8D       mov  [scratch_msf_ff2],a       ;/
3DDD AE 03       mov  x,3h
3DDF 98          clc
3DE0 0E 45 05    jnz  [45h].7,@@subtract
3DE3 CD 43 8E    call bcd_addition_msf_plus_msf ;--> ADD ;[result_msf]=[msf1]+[msf2]+cy
3DE6 20 14       jr   @@add_done        ;uh, this does NOT use [result_xx] ???!
                ;---
                @@subtract:
3DE8 CD 43 54    call bcd_subtract_msf_minus_msf;--> SUBTRACT ;[result_msf]=[msf1]-[msf2]-cy
3DEB C6 01 FD    mov  a,[result_mm]         ;MM ;\
3DEE B7 7D       mov  [distance_mm],a           ;
3DF0 C6 01 FE    mov  a,[result_ss]         ;SS ;
3DF3 B7 7E       mov  [distance_ss],a           ;
3DF5 C6 01 FF    mov  a,[result_ff]         ;FF ;
3DF8 B7 7F       mov  [distance_ff],a           ;/
3DFA 20 0C       jr   @@sub_done
                ;---
                @@add_done:
                @@skip_add_sub:
3DFC B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
3DFE B7 7D       mov  [distance_mm],a           ;
3E00 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
3E02 B7 7E       mov  [distance_ss],a           ;
3E04 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
3E06 B7 7F       mov  [distance_ff],a           ;/
                @@sub_done:
                ;- - - - - - - -
3E08 B6 7D       mov  a,[distance_mm]       ;MM ;\
3E0A B7 88       mov  [scratch_msf_mm1],a       ;
3E0C B6 7E       mov  a,[distance_ss]       ;SS ;
3E0E B7 89       mov  [scratch_msf_ss1],a       ;
3E10 B6 7F       mov  a,[distance_ff]       ;FF ;
3E12 B7 8A       mov  [scratch_msf_ff1],a       ;/
3E14 B6 4D       mov  a,[wanted_data_mm]    ;MM ;\
3E16 B7 8B       mov  [scratch_msf_mm2],a       ;
3E18 B6 4E       mov  a,[wanted_data_ss]    ;SS ;
3E1A B7 8C       mov  [scratch_msf_ss2],a       ;
3E1C B6 4F       mov  a,[wanted_data_ff]    ;MM ;
3E1E B7 8D       mov  [scratch_msf_ff2],a       ;/
3E20 AE 03       mov  x,3h ;blah
3E22 CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
3E25 CD 19 22    call set_direction_to_cy       ;
3E28 24 18       jnc  @@positive                ;/
3E2A B6 4D       mov  a,[wanted_data_mm]    ;MM ;\
3E2C B7 88       mov  [scratch_msf_mm1],a       ;
3E2E B6 4E       mov  a,[wanted_data_ss]    ;SS ;
3E30 B7 89       mov  [scratch_msf_ss1],a       ;
3E32 B6 4F       mov  a,[wanted_data_ff]    ;FF ;
3E34 B7 8A       mov  [scratch_msf_ff1],a       ;/
3E36 B6 7D       mov  a,[distance_mm]       ;MM ;\
3E38 B7 8B       mov  [scratch_msf_mm2],a       ;
3E3A B6 7E       mov  a,[distance_ss]       ;SS ;
3E3C B7 8C       mov  [scratch_msf_ss2],a       ;
3E3E B6 7F       mov  a,[distance_ff]       ;FF ;
3E40 B7 8D       mov  [scratch_msf_ff2],a       ;/
                @@positive:
3E42 98          clc
3E43 CD 43 54    call bcd_subtract_msf_minus_msf        ;--> SUBTRACT ;[result_msf]=[msf1]-[msf2]-cy
3E46 C6 01 FD    mov  a,[result_mm]         ;MM ;\
3E49 B7 7D       mov  [distance_mm],a           ;
3E4B C6 01 FE    mov  a,[result_ss]         ;SS ;
3E4E B7 7E       mov  [distance_ss],a           ;
3E50 C6 01 FF    mov  a,[result_ff]         ;FF ;
3E53 B7 7F       mov  [distance_ff],a           ;/
3E55 81          ret
                ;------------------
                calc_difference_between_data_and_wanted_msf:
                 ;somewhat similar to "verify_sector_hdr_vs_subq_pos"
3E56 B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
3E58 B7 88       mov  [scratch_msf_mm1],a       ;
3E5A B6 81       mov  a,[rx_sect_header+1]  ;SS ;
3E5C B7 89       mov  [scratch_msf_ss1],a       ;
3E5E B6 82       mov  a,[rx_sect_header+2]  ;FF ;
3E60 B7 8A       mov  [scratch_msf_ff1],a       ;/
3E62 B6 4D       mov  a,[wanted_data_mm]    ;MM ;\
3E64 B7 8B       mov  [scratch_msf_mm2],a       ;
3E66 B6 4E       mov  a,[wanted_data_ss]    ;SS ;
3E68 B7 8C       mov  [scratch_msf_ss2],a       ;
3E6A B6 4F       mov  a,[wanted_data_ff]    ;FF ;
3E6C B7 8D       mov  [scratch_msf_ff2],a       ;/
3E6E AE 03       mov  x,3h ;blah
3E70 CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
3E73 CD 19 22    call set_direction_to_cy       ;
3E76 24 1B       jnc  @@positive                ;/
3E78 B6 4D       mov  a,[wanted_data_mm]    ;MM ;\
3E7A B7 88       mov  [scratch_msf_mm1],a       ;
3E7C B6 4E       mov  a,[wanted_data_ss]    ;SS ;
3E7E B7 89       mov  [scratch_msf_ss1],a       ;
3E80 B6 4F       mov  a,[wanted_data_ff]    ;FF ;
3E82 B7 8A       mov  [scratch_msf_ff1],a       ;/
3E84 C6 02 20    mov  a,[sector_header+0]   ;MM ;\
3E87 B7 8B       mov  [scratch_msf_mm2],a       ;
3E89 C6 02 21    mov  a,[sector_header+1]   ;SS ;
3E8C B7 8C       mov  [scratch_msf_ss2],a       ;
3E8E C6 02 22    mov  a,[sector_header+2]   ;FF ;
3E91 B7 8D       mov  [scratch_msf_ff2],a       ;/
                @@positive:
3E93 98          clc                            ;\
3E94 CD 43 54    call bcd_subtract_msf_minus_msf;/;[result_msf]=[msf1]-[msf2]-cy
3E97 C6 01 FD    mov  a,[result_mm]         ;MM ;\
3E9A B7 7D       mov  [distance_mm],a           ;
3E9C C6 01 FE    mov  a,[result_ss]         ;SS ;
3E9F B7 7E       mov  [distance_ss],a           ;
3EA1 C6 01 FF    mov  a,[result_ff]         ;FF ;
3EA4 B7 7F       mov  [distance_ff],a           ;/
3EA6 81          ret
                ;------------------
                calc_difference_between_subq_and_data_msf:
3EA7 B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
3EA9 B7 88       mov  [scratch_msf_mm1],a       ;
3EAB B6 81       mov  a,[rx_sect_header+1]  ;SS ;
3EAD B7 89       mov  [scratch_msf_ss1],a       ;
3EAF B6 82       mov  a,[rx_sect_header+2]  ;FF ;
3EB1 B7 8A       mov  [scratch_msf_ff1],a       ;/
3EB3 B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
3EB5 B7 8B       mov  [scratch_msf_mm2],a       ;
3EB7 B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
3EB9 B7 8C       mov  [scratch_msf_ss2],a       ;
3EBB B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
3EBD B7 8D       mov  [scratch_msf_ff2],a       ;/
3EBF AE 03       mov  x,3h ;blah
3EC1 CD 44 45    call compare_msf_by_msf        ;\cmp [msf1],[msf2]  ;out: zf, cy
3EC4 1F 45       res  [45h].7     ;-positive    ;
3EC6 24 1A       jnc  @@positive                ;/
3EC8 1E 45       set  [45h].7     ;-negative    ;-mark negative
3ECA B6 57       mov  a,[subq_rx_buf+7]     ;MM ;\
3ECC B7 88       mov  [scratch_msf_mm1],a       ;
3ECE B6 58       mov  a,[subq_rx_buf+8]     ;SS ;
3ED0 B7 89       mov  [scratch_msf_ss1],a       ;
3ED2 B6 59       mov  a,[subq_rx_buf+9]     ;FF ;
3ED4 B7 8A       mov  [scratch_msf_ff1],a       ;/
3ED6 B6 80       mov  a,[rx_sect_header+0]  ;MM ;\
3ED8 B7 8B       mov  [scratch_msf_mm2],a       ;
3EDA B6 81       mov  a,[rx_sect_header+1]  ;SS ;
3EDC B7 8C       mov  [scratch_msf_ss2],a       ;
3EDE B6 82       mov  a,[rx_sect_header+2]  ;FF ;
3EE0 B7 8D       mov  [scratch_msf_ff2],a       ;/
                @@positive:
3EE2 98          clc                            ;\
3EE3 CD 43 54    call bcd_subtract_msf_minus_msf;/;[result_msf]=[msf1]-[msf2]-cy
3EE6 C6 01 FD    mov  a,[result_mm]         ;MM ;\
3EE9 26 19       jnz  @@exit                    ;
3EEB C6 01 FE    mov  a,[result_ss]         ;SS ;
3EEE 26 14       jnz  @@exit                    ;/
3EF0 C6 01 FD    mov  a,[result_mm]       ;MM=0 ;\
3EF3 C7 01 CB    mov  [mismatch_msf+0],a        ;
3EF6 C6 01 FE    mov  a,[result_ss]       ;SS=0 ;
3EF9 C7 01 CC    mov  [mismatch_msf+1],a        ;
3EFC C6 01 FF    mov  a,[result_ff]         ;FF ;
3EFF C7 01 CD    mov  [mismatch_msf+2],a        ;/
3F02 1C 45       set  [45h].6                   ;-mark zero MM:SS difference
                @@exit:                         ; (but that flag is rarely cleared?)
3F04 81          ret
                ;------------------
                whatever_XXX_3F05h:
3F05 05 6D 49    jz   [disc_task].dt_2_whatever,@@exit            ;-
3F08 A6 0C       mov  a,0Ch                     ;\
3F0A B7 6B       mov  [seek_task],a             ;/
3F0C 14 42       set  [42h].2                   ;-
3F0E A6 20       mov  a,(1 shl dt_5_seek)       ;\
3F10 B7 6D       mov  [disc_task],a             ;/
3F12 A6 7D       mov  a,7Dh ;125 decimal        ;\
3F14 B7 70       mov  [seek_timeout],a          ;/
3F16 A6 00       mov  a,0h                      ;\
3F18 B7 88       mov  [scratch_msf_mm1],a   ;MM ;
3F1A B7 89       mov  [scratch_msf_ss1],a   ;SS ; disp = 00:00:01
3F1C A6 01       mov  a,1h                      ;
3F1E B7 8A       mov  [scratch_msf_ff1],a   ;FF ;/
3F20 C6 02 20    mov  a,[sector_header+0]   ;MM ;\
3F23 B7 8B       mov  [scratch_msf_mm2],a       ;
3F25 C6 02 21    mov  a,[sector_header+1]   ;SS ;
3F28 B7 8C       mov  [scratch_msf_ss2],a       ;
3F2A C6 02 22    mov  a,[sector_header+2]   ;FF ;
3F2D B7 8D       mov  [scratch_msf_ff2],a       ;/
3F2F 98          clc                            ;\[result_msf]=[msf1]+[msf2]+cy
3F30 CD 43 8E    call bcd_addition_msf_plus_msf ;/
3F33 C6 01 FD    mov  a,[result_mm]         ;MM ;\
3F36 B7 4D       mov  [wanted_data_mm],a        ;
3F38 C6 01 FE    mov  a,[result_ss]         ;SS ;
3F3B B7 4E       mov  [wanted_data_ss],a        ;
3F3D C6 01 FF    mov  a,[result_ff]         ;FF ;
3F40 B7 4F       mov  [wanted_data_ff],a        ;/
3F42 C6 01 FD    mov  a,[result_mm]         ;MM ;\
3F45 B7 5D       mov  [wanted_subq_mm],a        ;
3F47 C6 01 FE    mov  a,[result_ss]         ;SS ;
3F4A B7 5E       mov  [wanted_subq_ss],a        ;
3F4C C6 01 FF    mov  a,[result_ff]         ;FF ;
3F4F B7 5F       mov  [wanted_subq_ff],a        ;/
                @@exit:
3F51 81          ret
                ;------------------
                whatever_XXX_3F52h:   ;... sector size and sector base addr
3F52 A6 00       mov  a,0h                              ;\initially no pre_skip,
3F54 B7 A6       mov  [curr_idx_0Eh_w_host_address_lo],a;/aside from SYNC bytes
3F56 B6 AA       mov  a,[curr_idx_05h_r_drv_addr_base]  ;\
3F58 48          shl  a  ;msb.mul2 (aka addr mul200h)   ; base address (in 1K-steps) of most recently decoded sector
3F59 48          shl  a  ;msb.mul4 (aka addr mul400h)   ;
3F5A B7 A7       mov  [curr_idx_0Fh_w_host_address_hi],a;/
3F5C 19 A9       res  [curr_idx_0Dh_w_host_len_hi].4              ;\base address
3F5E 0D AA 02    jz   [curr_idx_05h_r_drv_addr_base].6,@@bit16off ; bit16, blah,
3F61 18 A9       set  [curr_idx_0Dh_w_host_len_hi].4              ; not used for
                @@bit16off:                                       ;/32K SRAM... and will get overwritten below anyways
3F63 08 BB 2B    jnz  [drv_mode].4,@@sector_size_918h ;XXX special sector size!
3F66 0A BB 1E    jnz  [drv_mode].5,@@sector_size_924h ;sect_siz (0=800h, 1=924h)
                ;- - - sector size 800h...
3F69 A6 00       mov  a,00h  ;lsb                       ;\
3F6B B7 A8       mov  [curr_idx_0Ch_w_host_len_lo],a    ; sector size = 800h
3F6D A6 08       mov  a,8h   ;msb                       ; (raw "data")
3F6F B7 A9       mov  [curr_idx_0Dh_w_host_len_hi],a    ;/
3F71 02 B0 08    jnz  [curr_idx_00h_r_ecc_status].1,@@mode2 ;MODE2
                ;- - - MODE1, sector size 800h ...
3F74 B6 A6       mov  a,[curr_idx_0Eh_w_host_address_lo];\
3F76 AB 04       add  a,4h                              ; skip MODE1 header
3F78 B7 A6       mov  [curr_idx_0Eh_w_host_address_lo],a;/
3F7A 20 29       jr   @@this_sector_size
                ;---
                @@mode2:   ;with sector size 800h
3F7C 05 46 52    jz   [46h].2,@@fail  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
3F7F B6 A6       mov  a,[curr_idx_0Eh_w_host_address_lo];\
3F81 AB 0C       add  a,0Ch                             ; skip MODE2 header(s)
3F83 B7 A6       mov  [curr_idx_0Eh_w_host_address_lo],a;/
3F85 20 1E       jr   @@this_sector_size
                ;---
                @@sector_size_924h: ;whole sector (MODE1, or MODE2, or anything)
                 ;keep [curr_idx_0Eh_w_host_address_lo] ;-skip nothing
3F87 A6 24       mov  a,24h  ;lsb                       ;\
3F89 B7 A8       mov  [curr_idx_0Ch_w_host_len_lo],a    ; sector size = 924h
3F8B A6 09       mov  a,9h   ;msb                       ;
3F8D B7 A9       mov  [curr_idx_0Dh_w_host_len_hi],a    ;/
3F8F 20 14       jr   @@this_sector_size
                ;---
                @@sector_size_918h:  ;special... MUST be FORM2...
3F91 05 46 3D    jz   [46h].2,@@fail  ;is_data_disc (0=audio_disc, 1=cdrom_disc)
3F94 01 B0 3A    jz   [curr_idx_00h_r_ecc_status].0,@@fail   ;want FORM2!
3F97 B6 A6       mov  a,[curr_idx_0Eh_w_host_address_lo];\
3F99 AB 0C       add  a,0Ch                             ; skip MODE2 header(s)
3F9B B7 A6       mov  [curr_idx_0Eh_w_host_address_lo],a;/
3F9D A6 18       mov  a,18h  ;lsb                       ;\
3F9F B7 A8       mov  [curr_idx_0Ch_w_host_len_lo],a    ; sector size = 918h
3FA1 A6 09       mov  a,9h   ;msb                       ;
3FA3 B7 A9       mov  [curr_idx_0Dh_w_host_len_hi],a    ;/
                ;- - - - - - - -
                @@this_sector_size:
                ;- - - - - - - -
3FA5 AE 0E       mov  x,idx_0Eh_w_host_address_lo                       ;\ ;\
3FA7 BF 04       mov  [io_porte_idx],x ;=0Eh=idx_0Eh_w_host_address_lo  ;  ;
3FA9 B6 A6       mov  a,[curr_idx_0Eh_w_host_address_lo]                ;  ;
3FAB CD 40 FB    call write_data_bus                                    ;/ ;
3FAE 3C 04       inc  [io_porte_idx]   ;=0Fh=idx_0Fh_w_host_address_hi  ;\ ;
3FB0 B6 A7       mov  a,[curr_idx_0Fh_w_host_address_hi]                ;  ;
3FB2 CD 40 FB    call write_data_bus                                    ;/ ;/
3FB5 1F A9       res  [curr_idx_0Dh_w_host_len_hi].7  ;DISHXFRC ?       ;\
3FB7 06 46 02    jnz  [46h].3,@@this_DISHXFRC                           ; ???
3FBA 1E A9       set  [curr_idx_0Dh_w_host_len_hi].7  ;DISHXFRC ?       ;
                @@this_DISHXFRC:                                        ;/
3FBC 1C A9       set  [curr_idx_0Dh_w_host_len_hi].6  ;UNDOC ?          ;-???
3FBE AE 0C       mov  x,idx_0Ch_w_host_len_lo                           ;\
3FC0 BF 04       mov  [io_porte_idx],x ;=0Ch=idx_0Ch_w_host_len_lo      ;
3FC2 B6 A8       mov  a,[curr_idx_0Ch_w_host_len_lo]                    ;
3FC4 CD 40 FB    call write_data_bus                                    ;
3FC7 3C 04       inc  [io_porte_idx]   ;=0Dh=idx_0Dh_w_host_len_hi      ;
3FC9 B6 A9       mov  a,[curr_idx_0Dh_w_host_len_hi]                    ;
3FCB CD 40 FB    call write_data_bus                                    ;/
3FCE 16 B5       set  [curr_idx_11h_r_psx_fifo_flags].3         ;CHANGE ???
3FD0 81          ret
                ;--- --- ---
                @@fail:
3FD1 16 BC       set  [drv_stat].3 ;id_error
3FD3 14 BD       set  [err_code_for_id].2  ;seek failed (error_bit_2)
3FD5 81          ret
                ;------------------
                accept_sector_send_int1:     ;<----- ACCEPT, send int1
3FD6 AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
3FD8 BF 04       mov  [io_porte_idx],x                  ; exit if still
3FDA CD 40 EF    call read_data_bus                     ; another INT pending
3FDD B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a ;
3FDF A4 07       and  a,7h                              ;
3FE1 26 40       jnz  @@exit                            ;/
                ;- - - - deliver sector DATA ...
3FE3 CD 3F 52    call whatever_XXX_3F52h         ;-----> sector size and sector base addr
                ;- - - - send INT1 response ...
3FE6 CD 3B FB    call cmd_response_begin
3FE9 B6 BC       mov  a,[drv_stat]              ;\stat
3FEB C7 01 F0    mov  [drv_response+0],a        ;/
3FEE 07 47 23    jz   [47h].3,@@okay_sent_int1_stat    ;<--- test if error ?
                ;- - - -
3FF1 17 47       res  [47h].3
3FF3 C6 01 F0    mov  a,[drv_response+0]        ;\
3FF6 A4 F2       and  a,0F2h ;aka [drv_stat]    ; stat OR 04h     seek error ?
3FF8 AA 04       or   a,4h   ;seek_error        ;                 bad sector !
3FFA C7 01 F0    mov  [drv_response+0],a        ;/                XXX !!!!!!!!
3FFD A6 04       mov  a,4h                      ;\error_code
3FFF C7 01 F1    mov  [drv_response+1],a        ;/
4002 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
4004 BF 04       mov  [io_porte_idx],x          ;
4006 C6 01 F0    mov  a,[drv_response+0]        ; send(stat,error_code)
4009 CD 40 FB    call write_data_bus            ;
400C C6 01 F1    mov  a,[drv_response+1]        ;
400F CD 40 FB    call write_data_bus            ;/
4012 20 0A       jr   @@sent_int1_despite_of_error  ;---> ERROR, but still INT1
                ;---                                ;     "STREAMING ERROR" ?
                @@okay_sent_int1_stat:
4014 AE 17       mov  x,idx_17h_w_reply_to_psx  ;\
4016 BF 04       mov  [io_porte_idx],x          ; send(stat)
4018 C6 01 F0    mov  a,[drv_response+0]        ;
401B CD 40 FB    call write_data_bus            ;/
                @@sent_int1_despite_of_error:
401E 11 45       res  [45h].0   ;... sector_needs_processing = FALSE (since that's DONE now)
4020 CD 40 B4    call fire_irq_1
                @@exit:
4023 81          ret
                ;------------------
                mute_cd_da_and_some_extra_stuff:
4024 CD 42 22    call mute_cd_da                ;-
4027 03 48 05    jz   [48h].1,@@skip       ;<-- HOW could that bit be EVER set ?
402A 13 48       res  [48h].1      ;"ack"       ;-
402C CD 29 C6    call init_various_idx_stuff    ;-
                @@skip:
402F 11 48       res  [48h].0                   ;-
4031 81          ret
                ;------------------
                enter_cdrom_data_mode:
4032 09 B7 3D    jz   [curr_idx_07h_w_chip_control].4,@@exit ;-exit if ALREADY cdrom mode
4035 A6 89       mov  a,89h   ;cx(8980)    ;msb ;\
4037 AE 80       mov  x,80h                ;mid ; CXD2510Q Signal Processor
4039 BF 88       mov  [scratch_cxd_mid],x  ;mid ; MODE = CDROM (Data)
403B CD 43 2B    call send_16bit_to_cxd2510q    ;/
403E AE 03       mov  x,idx_03h_w_decoder_control       ;\
4040 BF 04       mov  [io_porte_idx],x                  ; temporarily disable
4042 A6 08       mov  a,8h                              ; decoder (undone below)
4044 CD 40 FB    call write_data_bus                    ;/
4047 AE 10       mov  x,idx_10h_w_drv_address_lo                        ;\
4049 BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
404B A6 00       mov  a,0h                                              ;
404D CD 40 FB    call write_data_bus                                    ;
4050 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
4052 CD 40 FB    call write_data_bus                                    ;
4055 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
4057 CD 40 FB    call write_data_bus                                    ;/
405A A6 0D       mov  a,0Dh                             ;\
405C B7 B6       mov  [curr_idx_03h_w_decoder_control],a;/
405E 19 B7       res  [curr_idx_07h_w_chip_control].4   ;\
4060 AE 07       mov  x,idx_07h_w_chip_control          ; select CDROM mode
4062 BF 04       mov  [io_porte_idx],x                  ; (bit4=0)
4064 B6 B7       mov  a,[curr_idx_07h_w_chip_control]   ;
4066 CD 40 FB    call write_data_bus                    ;/
4069 AE 03       mov  x,idx_03h_w_decoder_control       ;\
406B BF 04       mov  [io_porte_idx],x                  ;
406D B6 B6       mov  a,[curr_idx_03h_w_decoder_control];
406F CD 40 FB    call write_data_bus                    ;/
                @@exit:
4072 81          ret
                ;------------------
                enter_cdda_audio_mode:
4073 08 B7 3D    jnz  [curr_idx_07h_w_chip_control].4,@@exit ;-exit if ALREADY audio mode
4076 A6 81       mov  a,81h   ;cx(8180)    ;msb ;\
4078 AE 80       mov  x,80h                ;mid ; CXD2510Q Signal Processor
407A BF 88       mov  [scratch_cxd_mid],x  ;mid ; MODE = Audio (CD-DA)
407C CD 43 2B    call send_16bit_to_cxd2510q    ;/
407F A6 0F       mov  a,0Fh                             ;\
4081 B7 B6       mov  [curr_idx_03h_w_decoder_control],a;/
4083 18 B7       set  [curr_idx_07h_w_chip_control].4   ;-select AUDIO mode
4085 A6 08       mov  a,08h                             ;\
4087 AE 03       mov  x,idx_03h_w_decoder_control       ; temporarily disable
4089 BF 04       mov  [io_porte_idx],x                  ; decoder (undone below)
408B CD 40 FB    call write_data_bus                    ;/
408E AE 10       mov  x,idx_10h_w_drv_address_lo                        ;\
4090 BF 04       mov  [io_porte_idx],x ;=10h=idx_10h_w_drv_address_lo   ;
4092 A6 00       mov  a,0h                                              ;
4094 CD 40 FB    call write_data_bus                                    ;
4097 3C 04       inc  [io_porte_idx]   ;=11h=idx_11h_w_drv_address_hi   ;
4099 CD 40 FB    call write_data_bus                                    ;
409C 3C 04       inc  [io_porte_idx]   ;=12h=idx_12h_w_drv_address_bit16;
409E CD 40 FB    call write_data_bus                                    ;/
40A1 AE 07       mov  x,idx_07h_w_chip_control          ;\
40A3 BF 04       mov  [io_porte_idx],x                  ; apply above AUDIO mode
40A5 B6 B7       mov  a,[curr_idx_07h_w_chip_control]   ; (bit4=1)
40A7 CD 40 FB    call write_data_bus                    ;/
40AA AE 03       mov  x,idx_03h_w_decoder_control       ;\
40AC BF 04       mov  [io_porte_idx],x                  ;
40AE B6 B6       mov  a,[curr_idx_03h_w_decoder_control];
40B0 CD 40 FB    call write_data_bus                    ;/
                @@exit:
40B3 81          ret
                ;------------------
                fire_irq_1:
40B4 10 B9       set  [curr_idx_16h_w_irq_to_psx].0     ;\
40B6 13 B9       res  [curr_idx_16h_w_irq_to_psx].1     ; =1
40B8 15 B9       res  [curr_idx_16h_w_irq_to_psx].2     ;/
40BA CC 40 E1    jmp  fire_irq_this
                ;---
                fire_irq_2:
40BD 11 B9       res  [curr_idx_16h_w_irq_to_psx].0     ;\
40BF 12 B9       set  [curr_idx_16h_w_irq_to_psx].1     ; =2
40C1 15 B9       res  [curr_idx_16h_w_irq_to_psx].2     ;/
40C3 CC 40 E1    jmp  fire_irq_this
                ;---
                fire_irq_3:
40C6 10 B9       set  [curr_idx_16h_w_irq_to_psx].0     ;\
40C8 12 B9       set  [curr_idx_16h_w_irq_to_psx].1     ; =3
40CA 15 B9       res  [curr_idx_16h_w_irq_to_psx].2     ;/
40CC CC 40 E1    jmp  fire_irq_this
                ;---
                fire_irq_4:
40CF 11 B9       res  [curr_idx_16h_w_irq_to_psx].0     ;\
40D1 13 B9       res  [curr_idx_16h_w_irq_to_psx].1     ; =4
40D3 14 B9       set  [curr_idx_16h_w_irq_to_psx].2     ;/
40D5 CC 40 E1    jmp  fire_irq_this
                ;---
                fire_irq_5:
40D8 10 B9       set  [curr_idx_16h_w_irq_to_psx].0     ;\
40DA 13 B9       res  [curr_idx_16h_w_irq_to_psx].1     ; =5
40DC 14 B9       set  [curr_idx_16h_w_irq_to_psx].2     ;/
40DE CC 40 E1    jmp  fire_irq_this
                ;---
                fire_irq_this:
40E1 B6 B9       mov  a,[curr_idx_16h_w_irq_to_psx]
40E3 A4 07       and  a,7h
40E5 AE 16       mov  x,idx_16h_w_irq_to_psx
40E7 BF 04       mov  [io_porte_idx],x
40E9 CD 40 FB    call write_data_bus
40EC 3F B9       mov  [curr_idx_16h_w_irq_to_psx],00h
40EE 81          ret
                ;------------------
                read_data_bus:
40EF 19 03       res  [io_portd].4   ;issue /SELECT
40F1 1D 03       res  [io_portd].6   ;issue /READ
40F3 9D          nop
40F4 B6 00       mov  a,[io_porta_dta]
40F6 1C 03       set  [io_portd].6
40F8 18 03       set  [io_portd].4
40FA 81          ret
                ;------------------
                write_data_bus:   ;in: A=databyte, out: A,X=unchanged
40FB BF 88       mov  [88h],x                           ;-"push x"
40FD 9B          di                                     ;\
40FE 10 3E       set  [io_misc].0                       ;
4100 AE FF       mov  x,0FFh                            ; direction = OUTPUT
4102 BF 00       mov  [io_hi_ddra],x                    ;
4104 11 3E       res  [io_misc].0                       ;
4106 9A          ei                                     ;/
4107 B7 00       mov  [io_porta_dta],a        ;<-- data ;\
4109 19 03       res  [io_portd].4   ;issue /SELECT     ;
410B 1B 03       res  [io_portd].5   ;issue /WRITE      ; write data byte
410D 9D          nop                                    ;
410E 1A 03       set  [io_portd].5   ;release /WRITE    ;
4110 18 03       set  [io_portd].4   ;release /SELECT   ;/
4112 9B          di                                     ;\
4113 10 3E       set  [io_misc].0                       ;
4115 AE 00       mov  x,00h                             ; restore default
4117 BF 00       mov  [io_hi_ddra],x                    ; direction = INPUT
4119 11 3E       res  [io_misc].0                       ;
411B 9A          ei                                     ;/
411C BE 88       mov  x,[88h]                           ;-"pop x"
411E 81          ret
                ;------------------
                get_idx_01h_r_decoder_status_and_idx_11h_r_psx_fifo_flags:
411F AE 01       mov  x,idx_01h_r_decoder_status        ;\
4121 BF 04       mov  [io_porte_idx],x                  ;
4123 CD 40 EF    call read_data_bus                     ;
4126 B7 B1       mov  [curr_idx_01h_r_decoder_status],a ;/
4128 AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
412A BF 04       mov  [io_porte_idx],x                  ;
412C CD 40 EF    call read_data_bus                     ;
412F B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a ;/
4131 81          ret
                ;------------------
                bcd_adjust_after_addition:
4132 25 04       jc   @@need_msb_adjust
4134 A1 99       cmp  a,99h
4136 23 08       jbe  @@do_not_need_msb_adjust
                @@need_msb_adjust:
4138 40          neg  a
4139 A0 60       sub  a,60h
413B 40          neg  a
413C AD 02       call relative @@eventually_do_lsb_adjust
413E 99          stc                    ;out: cy=1 (carry on MSB occurred)
413F 81          ret
                ;--- --- ---
                @@do_not_need_msb_adjust:
                @@eventually_do_lsb_adjust:
4140 28 03       jnh  @@eventually_do_lsb_adjust_depending_on_lsb     ;<-- half carry affected ONLY by ADD/ADC (not by SUB/SBC/CMP/NEG)
4142 AB 06       add  a,6h      ;due adjust due to half-carry flag
4144 81          ret
                ;---
                @@eventually_do_lsb_adjust_depending_on_lsb:
4145 AB 06       add  a,6h   ;try adjust (sets H=1 if it was needed)
4147 29 02       jh   @@ret     ;<-- half carry affected ONLY by ADD/ADC (not by SUB/SBC/CMP/NEG)
4149 A0 06       sub  a,6h   ;undo adjust (if above wasn't needed)
                @@ret:
414B 81          ret
                ;------------------
                bcd_subtract_a_minus_indirect_x:
414C A8 FF       xor  a,0FFh  ;sorts of negate a
414E FB          add  a,[x]   ;<-- ADD affects half-carry (unlike SUB)
414F A8 FF       xor  a,0FFh  ;undo negate a, instead: negate [x]
4151 24 06       jnc  @@eventually_do_lsb_adjust_depending_on_h          ;-LSB
                 ;- - -
4153 AD 04       call relative @@eventually_do_lsb_adjust_depending_on_h ;\LSB,
4155 A0 60       sub  a,60h                                              ; MSB,
4157 99          stc                                                     ;/cy
4158 81          ret
                ;--- --- ---
                @@eventually_do_lsb_adjust_depending_on_h:
4159 28 02       jnh  @@ret     ;<-- half carry affected ONLY by ADD/ADC (not by SUB/SBC/CMP/NEG)
415B A0 06       sub  a,6h
                @@ret:
415D 81          ret
                ;------------------
                bcd_subtract_a_minus_indirect_x_with_borrow:
415E A8 FF       xor  a,0FFh  ;sorts of negate a
4160 F9          adc  a,[x]   ;<-- ADC affects half-carry (unlike SBC) ;with CY
4161 A8 FF       xor  a,0FFh  ;undo negate a, instead: negate [x]
4163 24 06       jnc  @@eventually_do_lsb_adjust_depending_on_h          ;-LSB
                 ;- - -
4165 AD 04       call relative @@eventually_do_lsb_adjust_depending_on_h ;\LSB,
4167 A0 60       sub  a,60h                                              ; MSB,
4169 99          stc                                                     ;/cy
416A 81          ret
                ;---
                @@eventually_do_lsb_adjust_depending_on_h:
416B 28 02       jnh  @@ret     ;<-- half carry affected ONLY by ADD/ADC (not by SUB/SBC/CMP/NEG)
416D A0 06       sub  a,6h
                @@ret:
416F 81          ret
                ;------------------
                send_debug_status_packet:  ;in: A=error code
4170 0E 93 27    jnz  [debug_status_index].7,@@exit     ;-exit if already busy
                 ;- - - -
4173 B7 94       mov  [debug_status_packet+0],a ;-Error code
4175 B6 BC       mov  a,[drv_stat]              ;\Stat
4177 B7 95       mov  [debug_status_packet+1],a ;/
4179 B6 BB       mov  a,[drv_mode]              ;\Mode
417B B7 96       mov  [debug_status_packet+2],a ;/
417D B6 6D       mov  a,[disc_task]             ;\DiscTask
417F B7 97       mov  [debug_status_packet+3],a ;/
4181 B6 57       mov  a,[subq_rx_buf+7]         ;\AbsMM
4183 B7 99       mov  [debug_status_packet+5],a ;/
4185 B6 58       mov  a,[subq_rx_buf+8]         ;\AbsSS
4187 B7 98       mov  [debug_status_packet+4],a ;/
4189 B6 59       mov  a,[subq_rx_buf+9]         ;\AbsFF
418B B7 9B       mov  [debug_status_packet+7],a ;/
418D C6 01 E0    mov  a,[cmd_param_buf+0]       ;\Cmd
4190 B7 9A       mov  [debug_status_packet+6],a ;/
                 ;- - - -
4192 B6 93       mov  a,[debug_status_index]    ;\
4194 A4 F8       and  a,0F8h                    ; reset transfer index
4196 B7 93       mov  [debug_status_index],a    ;/
4198 1E 93       set  [debug_status_index].7    ;-start transfer (mark busy)
                @@exit:
419A 81          ret
                ;------------------
                fill_toc_info_by_FFh:
419B A6 00       mov  a,0h              ;\[datamode_flag].0=0=audio
419D B7 6A       mov  [datamode_flag],a ;/[datamode_flag].1..7=0=unused
419F AE 00       mov  x,0h                                  ;\
                @@lop:                                      ;
41A1 A6 FF       mov  a,0FFh                                ; FFh-fill TOC, and
41A3 D7 01 00    mov  [toc_track_list+x],a                  ; toc_first_track_no
41A6 5C          inc  x                                     ; toc_last_track_no
41A7 9F          mov  a,x                                   ; toc_lead_out_msf
41A8 A1 CB       cmp  a,toc_clear_end_addr-toc_track_list   ;
41AA 25 F5       jc   @@lop                                 ;/
41AC 81          ret
                ;------------------
                receive_subq_bus_via_spi_bus:
41AD B6 0B       mov  a,[io_spsr1]      ;-
41AF A6 00       mov  a,0h              ;\SEND dummy/zero byte
41B1 B7 0C       mov  [io_spdr1],a      ;/
41B3 0F 0B FD    jz   [io_spsr1].7,$    ;<-- wait until SPI transfer done
41B6 B6 0C       mov  a,[io_spdr1]      ;-RECEIVE subq data byte
41B8 81          ret
                ;------------------
                delay_1_timer2_step:    ;UNUSED!
41B9 AE 01       mov  x,1h   ;1 decimal         ;1ms (or MUCH less if IRQ soon)
41BB 20 08       jr   delay_x_timer2_steps
                ;------------------
                delay_6_timer2_steps:   ;UNUSED!
41BD AE 06       mov  x,6h   ;6 decimal         ;6ms
41BF 20 04       jr   delay_x_timer2_steps
                ;------------------
                delay_255_timer2_steps:
41C1 AE FF       mov  x,0FFh ;255 decimal       ;255ms
41C3 20 00       jr   delay_x_timer2_steps
                ;------------------
                delay_x_timer2_steps:      ;one step = 1ms (1000Hz timer)
41C5 1F 4B       res  [timer2_irq_flag].7    ;ack
                @@lop:
41C7 0F 4B FD    jz   [timer2_irq_flag].7,$  ;wait (for timer2 irq) (1ms)
41CA 1F 4B       res  [timer2_irq_flag].7    ;ack
41CC 5A          dec  x
41CD 26 F8       jnz  @@lop
41CF 81          ret
                ;------------------
                cancel_auto_sequence:
41D0 A6 40       mov  a,40h  ;cx(4000)     ;msb ;\CXD2510Q Signal Processor
41D2 3F 88       mov  [scratch_cxd_mid],00h;mid ; AutoSeqCancel
41D4 CD 43 2B    call send_16bit_to_cxd2510q    ;/
41D7 A6 02       mov  a,2h                      ;\
                @@blah_lop_never:               ; delay
41D9 CD 46 E6    call delay_a   ;out: z         ;/
41DC 26 FB       jnz  @@blah_lop_never          ;-blah
41DE 81          ret
                ;------------------
                set_initial_gain_balance_adj:
41DF CD 42 18    call send_08h_to_cxa1782br  ;cx(08) ;FocusServoOn
                ;- - - - - --------
                set_initial_gain_balance_adj_inj:
41E2 A6 3F       mov  a,3Fh  ;cx(38+7)          ;\CXA1782BR Servo Amplifier
41E4 CD 43 33    call send_8bit_to_cxa1782br    ;/GainAdjust=MAX
41E7 A6 30       mov  a,30h  ;cx(30+0)          ;\CXA1782BR Servo Amplifier
41E9 CD 43 33    call send_8bit_to_cxa1782br    ;/BalanceAdjust=MIN
41EC A6 00       mov  a,0h                      ;\
41EE C7 01 E9    mov  [curr_cx30_balance_adj],a ;/
41F1 A6 00       mov  a,0h                      ;\ <-- UNLIKE above Gain MAX !?!
41F3 C7 01 EA    mov  [curr_cx38_gain_adj],a    ;/
41F6 11 4A       res  [gain_flag].0             ;-
41F8 81          ret
                ;------------------
                init_clv_and_servo_coeff:
41F9 A6 D7       mov  a,0D7h ;cx(D7)       ;msb ;\CXD2510Q Signal Processor
41FB CD 43 33    call send_8bit_to_cxd2510q     ;/ClvControl (fixed)
41FE A6 C6       mov  a,0C6h ;cx(C600)     ;msb ;\CXD2510Q Signal Processor
4200 3F 88       mov  [scratch_cxd_mid],00h;mid ; SpindleServoCoefficientSetting
4202 CC 43 2B    jmp  send_16bit_to_cxd2510q    ;/(fixed)
                ;------------------
                stop_spindle_motor:
4205 A6 E0       mov  a,0E0h ;cx(E0)                    ;\CXD2510Q Signal Processor
4207 CD 43 33    call send_8bit_to_cxd2510q             ;/SpindleMotorStop
                ;- - - - - --------
                stop_spindle_motor_inj:
420A 1E 03       set  [io_portd].7            ;LDON  ... IC723.Pin11
420C 3F 68       mov  [68h],00h                         ;-
420E A6 00       mov  a,00h  ;cx(00)                    ;\CXA1782BR Servo Amplifier
4210 CD 43 33    call send_8bit_to_cxa1782br            ;/AllFocusSwitchesOff
4213 A6 20       mov  a,20h  ;cx(20)                    ;\CXA1782BR Servo Amplifier
4215 CC 43 33    jmp  send_8bit_to_cxa1782br            ;/SledAndTrackingOff
                ;------------------
                send_08h_to_cxa1782br:  ;FocusServoOn
4218 A6 08       mov  a,08h  ;cx(08)                    ;\CXA1782BR Servo Amplifier
421A CC 43 33    jmp  send_8bit_to_cxa1782br            ;/FocusServoOn
                ;------------------
                send_0Ch_to_cxa1782br:  ;FocusServoOnAndDefectOn
421D A6 0C       mov  a,0Ch  ;cx(0C)                    ;\CXA1782BR Servo Amplifier
421F CC 43 33    jmp  send_8bit_to_cxa1782br            ;/FocusServoOnAndDefectOn
                ;------------------
                mute_cd_da:
4222 16 40       set  [40h].3                                   ;-
4224 B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;\mute
4226 AA 20       or   a,20h  ;[curr_idx_07h_w_chip_control].5   ; cd-da
4228 B7 B7       mov  [curr_idx_07h_w_chip_control],a           ;/
                ;- - - - - --------
                apply_muted_or_demuted_cd_da:
422A AE 07       mov  x,idx_07h_w_chip_control                  ;\
422C BF 04       mov  [io_porte_idx],x                          ;
422E B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;
4230 CC 40 FB    jmp  write_data_bus                            ;/
                ;------------------
                mute_or_demute_cd_da:
4233 02 40 EC    jnz  [40h].1,mute_cd_da ;mute_flag (1=mute)
4236 0D 50 03    jz   [subq_rx_buf+0].6,@@keep_audio   ;ADR/Control Bit6=Data
4239 01 6A E6    jz   [datamode_flag].0,mute_cd_da  ;--> audio/play --> mute (since ADR/Control indicated NON-AUDIO)
                @@keep_audio:
                ;- - - -
423C 17 40       res  [40h].3                                   ;-
423E B6 B7       mov  a,[curr_idx_07h_w_chip_control]           ;\demute
4240 A4 DF       and  a,0DFh ;[curr_idx_07h_w_chip_control].5   ; cd-da
4242 B7 B7       mov  [curr_idx_07h_w_chip_control],a           ;/
4244 20 E4       jr   apply_muted_or_demuted_cd_da              ;-apply
                ;------------------
                invoke_actual_seek_track:   ;in: [desired_track]=track
4246 02 42 05    jnz  [42h].1,@@use_incoming_index      ;\
4249 A6 01       mov  a,1h                              ; either incoming index,
424B C7 01 FA    mov  [desired_index],a  ;index?        ; or force index=01h
                @@use_incoming_index:                   ;/
424E C6 01 F9    mov  a,[desired_track]  ;track                   ;\
4251 CD 44 8F    call check_if_track_a_is_within_first_last_track ; ensure that
4254 24 06       jnc  @@track_inrange  ;okay (within first..last) ; track exists
4256 C6 01 C7    mov  a,[toc_last_track_no]   ;force last track   ; (else force
4259 C7 01 F9    mov  [desired_track],a  ;track                   ; last track)
                @@track_inrange:                                  ;/
425C C6 01 F9    mov  a,[desired_track]    ;Track       ;\
425F C7 02 11    mov  [subq_position+1],a  ;Track       ;
4262 C6 01 FA    mov  a,[desired_index]    ;Index?      ;
4265 C7 02 12    mov  [subq_position+2],a  ;            ;
4268 A6 00       mov  a,0h                              ;
426A C7 02 13    mov  [subq_position+3],a  ;            ;
426D C7 02 14    mov  [subq_position+4],a  ;            ;/
4270 10 42       set  [42h].0                           ;-
4272 15 42       res  [42h].2                           ;-
                ;- - - - - --------
                whatever_XXX_4274h:
4274 A6 7D       mov  a,7Dh ;125 decimal                ;\
4276 B7 70       mov  [seek_timeout],a                  ;/
4278 A6 00       mov  a,0h                              ;\
427A B7 63       mov  [63h],a                           ;/
427C A6 01       mov  a,1h                              ;\
427E B7 6B       mov  [seek_task],a                     ;/
4280 A6 00       mov  a,0h   ;mt_00h_stopped            ;\
4282 B1 6C       cmp  a,[mech_task]                     ;
4284 26 03       jnz  @@not_stopped                     ;
4286 CD 42 98    call whatever_XXX_4298h  ;--->  STOP ? ;
                @@not_stopped:                          ;/
4289 CC 42 22    jmp  mute_cd_da                        ;-mute
                ;------------------
                whatever_XXX_428Ch:
428C 14 42       set  [42h].2
428E 11 42       res  [42h].0
4290 13 42       res  [42h].1
4292 A6 0C       mov  a,(1 shl dt_3_whatever)+(1 shl dt_2_whatever) ;\
4294 B7 6D       mov  [disc_task],a                                 ;/
4296 20 DC       jr   whatever_XXX_4274h                            ;-
                ;------------------
                whatever_XXX_4298h:

                    ;...maybe LAUNCH spindle motor (despite below "STOP" part)

4298 06 41 09    jnz  [41h].3,@@cont            ;-      ;--> test mode?
429B B6 6D       mov  a,[disc_task]             ;\
429D A1 01       cmp  a,(1 shl dt_0_nodisk)     ; check if disc missing
429F 27 1C       jz   @@exit                    ;/
42A1 00 40 19    jnz  [40h].0,@@exit ;seek_pos0 ;-exit if currently seeking pos0
                @@cont:
42A4 A6 BB       mov  a,0BBh                    ;\
42A6 B7 72       mov  [focus_timeout],a         ;/
42A8 CD 41 D0    call cancel_auto_sequence      ;-
42AB CD 42 05    call stop_spindle_motor        ;-   uh, STOP?? (maybe for INIT before STARTING spinning?)
42AE A6 19       mov  a,19h  ;25 decimal        ;\
42B0 B7 61       mov  [mech_offhold],a          ;/
42B2 1F 03       res  [io_portd].7            ;LDON  ... IC723.Pin11
42B4 A6 01       mov  a,1h  ;mt_01h_1st_autofocus_on    ;\
42B6 B7 6C       mov  [mech_task],a                     ;/
42B8 A6 02       mov  a,02h  ;cx(02)            ;\CXA1782BR Servo Amplifier
42BA CC 43 33    jmp  send_8bit_to_cxa1782br    ;/FocusSearchVoltageFalling
                ;---
                @@exit:
42BD 81          ret
                ;------------------
                whatever_XXX_42BEh:     ;... used in several places ...
42BE 0C 42 2D    jnz  [42h].6,@@do_fast_sled       ;... maybe seeking ... ?
                ;- - - -
42C1 CD 41 D0    call cancel_auto_sequence      ;-
42C4 A6 00       mov  a,0h                      ;-
42C6 B7 6B       mov  [seek_task],a       ;=00h ;-
42C8 B7 7A       mov  [seek_dist_8bit],a  ;=00h ;-
42CA B7 42       mov  [42h],a             ;=00h ;-
42CC CD 42 22    call mute_cd_da                ;-
                ;- - - -
42CF B6 6C       mov  a,[mech_task]
42D1 A1 06       cmp  a,6h  ;mt_06h_autofocus_okay (or above)   ;\
42D3 25 16       jc   @@to_mech_kick_stop_part_3_inj            ;/
42D5 A1 08       cmp  a,8h  ;mt_08h_adj_balance         ;\
42D7 27 04       jz   @@adj_balance_or_gain             ; init balance/gain
42D9 A1 09       cmp  a,9h  ;mt_09h_adj_gain            ; adjust (only if
42DB 26 03       jnz  @@not_adj_balance_or_gain         ; in those phases)
                @@adj_balance_or_gain:                  ;
42DD CD 41 DF    call set_initial_gain_balance_adj      ;
                @@not_adj_balance_or_gain:              ;/
42E0 B6 6C       mov  a,[mech_task]
42E2 A1 10       cmp  a,10h  ;mt_10h_stop_part_1 (or above)
42E4 24 04       jnc  @@exit
42E6 A6 10       mov  a,10h  ;mt_10h_stop_part_1
42E8 B7 6C       mov  [mech_task],a
                @@exit:
42EA 81          ret
                ;---
                @@to_mech_kick_stop_part_3_inj
42EB CC 23 4F    jmp  mech_kick_stop_part_3_inj
                ;---
                @@do_fast_sled:
42EE A6 00       mov  a,0h                              ;\  msb=0         ???
42F0 B7 7B       mov  [seek_dist_16bit_msb],a ;msb ?    ;/  force seek end SOON ???
42F2 CC 25 45    jmp  set_fast_sled                     ;-fast sled
                ;------------------
                get_toc_entry_for_track_a_to_ax:
42F5 CD 43 0B    call track_a_to_toc_index_x            ;-
42F8 D6 01 01    mov  a,[toc_track_list+1+x]    ;SS     ;\
42FB C7 01 FB    mov  [misc_temp1],a                    ;
42FE D6 01 00    mov  a,[toc_track_list+0+x]    ;MM     ;
4301 C7 01 FC    mov  [misc_temp2],a                    ;
4304 C6 01 FC    mov  a,[misc_temp2] ;blah      ;MM     ;
4307 CE 01 FB    mov  x,[misc_temp1]            ;SS     ;/
430A 81          ret
                ;------------------
                track_a_to_toc_index_x:
430B CD 43 E9    call packed_bcd_to_binary
430E 4A          dec  a         ;a=(track-1)
430F 48          shl  a         ;a=(track-1)*2
4310 97          mov  x,a       ;x=(track-1)*2
4311 81          ret
                ;------------------
                get_auto_or_rough: ;out: a=E6h or EEh ;CXD2510Q Signal Processor
4312 A6 E6       mov  a,0E6h  ;cx(E6)   ;AutomaticNormal
4314 07 41 05    jz   [41h].3,@@this
4317 09 41 02    jz   [41h].4,@@this
431A A6 EE       mov  a,0EEh  ;cx(EE)   ;RoughServo
                @@this:
431C 81          ret
                ;------------------
                send_24bit_to_cxd2510q:
431D B7 8A       mov  [scratch_cxd_msb],a    ;MSB (memorize)
431F B6 89       mov  a,[scratch_cxd_lsb]    ;LSB: data
4321 AD 1E       call relative cxd_send_8bit_fragment_a
4323 B6 88       mov  a,[scratch_cxd_mid]    ;MID: data
4325 AD 1A       call relative cxd_send_8bit_fragment_a
4327 B6 8A       mov  a,[scratch_cxd_msb]    ;MSB: addr ;cx(Xxxxxx)
4329 20 08       jr   send_8bit_to_cxd2510q
                ;------------------
                send_16bit_to_cxd2510q:
432B B7 8A       mov  [scratch_cxd_msb],a    ;MSB (memorize)
432D B6 88       mov  a,[scratch_cxd_mid]    ;MID: data
432F AD 10       call relative cxd_send_8bit_fragment_a
4331 B6 8A       mov  a,[scratch_cxd_msb]    ;MSB: addr ;cx(Xxxx)
                ;- - - - ----------
                send_8bit_to_cxa1782br: ;<-- when A=00h..3Fh
                send_8bit_to_cxd2510q:  ;<-- when A=40h..EFh
                send_8bit_to_cxd2510q_or_cxa1782br:   ;<-- variable A
4333 AD 0C       call relative cxd_send_8bit_fragment_a
4335 9D          nop
4336 15 03       res  [io_portd].2      ;"XLAT" pin (indicate end of transfer)
4338 9D          nop
4339 9D          nop
433A 9D          nop
433B 14 03       set  [io_portd].2
433D 9D          nop
433E 9D          nop
433F 9D          nop
4340 81          ret
                ;------------------
                cxd_send_8bit_fragment_a:
4341 AE 07       mov  x,7h
                @@lop:
4343 17 03       res  [io_portd].3            ;clk
4345 44          shr  a
4346 24 04       jnc  @@bit_zero
4348 12 03       set  [io_portd].1            ;dta "1"
434A 20 02       jr   @@next
                @@bit_zero:
434C 13 03       res  [io_portd].1            ;dta "0"
                @@next:
434E 16 03       set  [io_portd].3            ;clk
4350 5A          dec  x
4351 2A F0       jns  @@lop
4353 81          ret
                ;------------------
                bcd_subtract_msf_minus_msf:  ;in: cy! ;[result_msf]=[msf1]-[msf2]-cy
4354 B6 8A       mov  a,[scratch_msf_ff1]                     ;FF ;\sub FF-FF,
4356 AE 8D       mov  x,scratch_msf_ff2 ;ptr to [scratch_msf_ff2] ; and check if
4358 CD 41 5E    call bcd_subtract_a_minus_indirect_x_with_borrow ; underflow
435B 24 0A       jnc  @@ff_inrange                                ;/
435D AE 25       mov  x,25h             ;A0h-75h                  ;\
435F BF 8D       mov  [scratch_msf_ff2],x      ;<-- destroy!      ;
4361 AE 8D       mov  x,scratch_msf_ff2 ;ptr to [scratch_msf_ff2] ;
4363 CD 41 4C    call bcd_subtract_a_minus_indirect_x             ;
4366 99          stc                                              ;/
                @@ff_inrange:
4367 C7 01 FF    mov  [result_ff],a                           ;FF ;-
436A 20 01       jr   @@ff_done    ;blah
                ;---
436C 98          clc  ;<-- UNUSED! ;blah
                @@ff_done:
                ;- - - - - - -
436D B6 89       mov  a,[scratch_msf_ss1]                     ;SS ;\sub SS-SS,
436F AE 8C       mov  x,scratch_msf_ss2 ;ptr to [scratch_msf_ss2] ; and check if
4371 CD 41 5E    call bcd_subtract_a_minus_indirect_x_with_borrow ; underflow
4374 24 0A       jnc  @@ss_inrange                                ;/
4376 AE 40       mov  x,40h             ;A0h-60h                  ;\
4378 BF 8C       mov  [scratch_msf_ss2],x      ;<-- destroy!      ;
437A AE 8C       mov  x,scratch_msf_ss2 ;ptr to [scratch_msf_ss2] ;
437C CD 41 4C    call bcd_subtract_a_minus_indirect_x             ;
437F 99          stc                                              ;/
                @@ss_inrange:
4380 C7 01 FE    mov  [result_ss],a                           ;SS ;-
                ;- - - - - - -
4383 B6 88       mov  a,[scratch_msf_mm1]                     ;MM ;\
4385 AE 8B       mov  x,scratch_msf_mm2 ;ptr to [scratch_msf_mm2] ; sub MM-MM
4387 CD 41 5E    call bcd_subtract_a_minus_indirect_x_with_borrow ;
438A C7 01 FD    mov  [result_mm],a                           ;MM ;/
438D 81          ret
                ;------------------
                bcd_addition_msf_plus_msf:  ;in: cy! ;[result_msf]=[msf1]+[msf2]+cy
438E B6 8A       mov  a,[scratch_msf_ff1]  ;FF          ;\
4390 B9 8D       adc  a,[scratch_msf_ff2]  ;FF+cy       ; add FF+FF, and
4392 CD 41 32    call bcd_adjust_after_addition         ; check if results
4395 25 04       jc   @@ff_exceeds_75h                  ; exceeds 75h
4397 A1 75       cmp  a,75h                             ; (num sectors/second)
4399 25 0F       jc   @@ff_inrange                      ;/
                @@ff_exceeds_75h:                       ;\
439B AE 75       mov  x,75h                             ;
439D BF 8A       mov  [scratch_msf_ff1],x ;FF ;<-- destroy!
439F AE 8A       mov  x,scratch_msf_ff1   ;ptr to [scratch_msf_ff1]  ;HERE: msf1
43A1 CD 41 4C    call bcd_subtract_a_minus_indirect_x   ;
43A4 99          stc                                    ;
43A5 C7 01 FF    mov  [result_ff],a       ;FF           ;
43A8 20 07       jr   @@ff_done                         ;/
                ;---
                @@ff_inrange:                           ;\
43AA 98          clc                                    ;
43AB C7 01 FF    mov  [result_ff],a       ;FF           ;/
43AE 20 01       jr   @@ff_done   ;blah
                ;---
43B0 98          clc    ;UNUSED!  ;blah
                ;---
                @@ff_done:
                ;- - - - - - -
43B1 B6 89       mov  a,[scratch_msf_ss1]  ;SS          ;\
43B3 B9 8C       adc  a,[scratch_msf_ss2]  ;SS+cy       ; add SS+SS, and
43B5 CD 41 32    call bcd_adjust_after_addition         ; check if results
43B8 25 04       jc   @@ss_exceeds_60h                  ; exceeds 60h
43BA A1 60       cmp  a,60h                             ; (num seconds/minute)
43BC 25 0F       jc   @@ss_inrange                      ;/
                @@ss_exceeds_60h:                       ;\
43BE AE 60       mov  x,60h                             ;
43C0 BF 8C       mov  [scratch_msf_ss2],x  ;SS  ;<-- destroy!
43C2 AE 8C       mov  x,scratch_msf_ss2 ;ptr to [scratch_msf_ss2]  ;HERE: msf2
43C4 CD 41 4C    call bcd_subtract_a_minus_indirect_x   ;
43C7 99          stc                                    ;
43C8 C7 01 FE    mov  [result_ss],a ;SS                 ;
43CB 20 04       jr   @@ss_done                         ;/
                ;---
                @@ss_inrange:                           ;\
43CD 98          clc                                    ;
43CE C7 01 FE    mov  [result_ss],a ;SS                 ;/
                @@ss_done:
                ;- - - - - - -
43D1 B6 88       mov  a,[scratch_msf_mm1]  ;MM          ;\
43D3 B9 8B       adc  a,[scratch_msf_mm2]  ;MM          ; add MM+MM
43D5 CD 41 32    call bcd_adjust_after_addition         ;
43D8 C7 01 FD    mov  [result_mm],a        ;MM          ;/
43DB 81          ret
                ;------------------
                increment_packed_bcd_a:
43DC 99          stc
43DD A9 00       adc  a,0h
43DF CD 41 32    call bcd_adjust_after_addition
43E2 81          ret
                ;------------------
                bcd_subtract_a_minus_io_portb:   ;why port b ???
43E3 AE 01       mov  x,io_portb   ;ptr to [io_portb] ???   ;<-- BUG !!!
43E5 CD 41 4C    call bcd_subtract_a_minus_indirect_x
43E8 81          ret
                ;------------------
                packed_bcd_to_binary:
43E9 CF 01 FC    mov  [misc_temp2],x    ;-"push x"
43EC 97          mov  x,a
43ED A4 0F       and  a,0Fh             ;-lsb
43EF C7 01 FB    mov  [misc_temp1],a    ;-lsb
43F2 9F          mov  a,x               ;\
43F3 44          shr  a                 ;
43F4 44          shr  a                 ; msb
43F5 44          shr  a                 ;
43F6 44          shr  a                 ;/
43F7 AE 0A       mov  x,0Ah             ;\msb*0Ah
43F9 42          mul  x,a               ;/
43FA CB 01 FB    add  a,[misc_temp1]    ;-msb*0Ah+lsb
43FD CE 01 FC    mov  x,[misc_temp2]    ;-"pop x"
4400 81          ret
                ;------------------
                whatever_unused_4401h:  ;UNUSED!   ;divide by 10 decimal ?
4401 CF 01 FC    mov  [misc_temp2],x
4404 AE 00       mov  x,0h
4406 A1 63       cmp  a,63h  ;99 decimal        ;\
4408 23 06       jbe  @@this_crop               ; crop A=0..255 to A=0..99
440A A0 C8       sub  a,0C8h ;200 decimal       ; (aka A=A mod 100)
440C 24 02       jnc  @@this_crop               ;
440E AB 64       add  a,64h  ;100 decimal       ;
                @@this_crop:                    ;/
4410 44          shr  a   ;\                    ;\
4411 56          rcr  x   ;/                    ;
4412 44          shr  a   ;\                    ; shr (a:x),3
4413 56          rcr  x   ;/                    ;
4414 44          shr  a   ;\                    ;
4415 56          rcr  x   ;/                    ;/
4416 A0 0A       sub  a,0Ah  ;10 decimal        ;\
4418 24 02       jnc  @@cont1                   ;
441A AB 0A       add  a,0Ah  ;undo with cy=1    ;
                @@cont1:                        ;/
441C 59          rcl  x
441D 49          rcl  a
441E A0 0A       sub  a,0Ah  ;10 decimal        ;\
4420 24 02       jnc  @@cont2                   ;
4422 AB 0A       add  a,0Ah  ;undo with cy=1    ;
                @@cont2:                        ;/
4424 59          rcl  x
4425 49          rcl  a
4426 A0 0A       sub  a,0Ah  ;10 decimal        ;\
4428 24 02       jnc  @@cont3                   ;
442A AB 0A       add  a,0Ah  ;undo with cy=1    ;
                @@cont3:                        ;/
442C 59          rcl  x
442D 49          rcl  a
442E A0 0A       sub  a,0Ah  ;10 decimal        ;\
4430 24 02       jnc  @@cont4                   ;
4432 AB 0A       add  a,0Ah  ;undo with cy=1    ;
                @@cont4:                        ;/
4434 59          rcl  x
4435 58          shl  x
4436 58          shl  x
4437 58          shl  x
4438 58          shl  x
4439 CF 01 FB    mov  [misc_temp1],x
443C AA F0       or   a,0F0h    ;<-- inversion for above "cy=1" via below XOR ?
443E C8 01 FB    xor  a,[misc_temp1]
4441 CE 01 FC    mov  x,[misc_temp2]
4444 81          ret
                ;------------------
                compare_msf_by_msf:   ;cmp [msf1],[msf2]  ;out: zf, cy
4445 B6 88       mov  a,[scratch_msf_mm1]  ;MM (msb)
4447 B1 8B       cmp  a,[scratch_msf_mm2]
4449 26 0A       jnz  @@not_equal
444B B6 89       mov  a,[scratch_msf_ss1]  ;SS (mid)
444D B1 8C       cmp  a,[scratch_msf_ss2]
444F 26 04       jnz  @@not_equal
4451 B6 8A       mov  a,[scratch_msf_ff1]  ;FF (lsb)
4453 B1 8D       cmp  a,[scratch_msf_ff2]
                @@not_equal:
4455 81          ret
                ;------------------
                get_first_track_or_01h_if_unknown:
4456 A6 01       mov  a,01h
4458 0F 40 03    jz   [40h].7,@@this
445B C6 01 C6    mov  a,[toc_first_track_no]
                @@this:
445E 81          ret
                ;------------------
                get_last_track_or_99h_if_unknown:
445F A6 99       mov  a,99h
4461 0F 40 03    jz   [40h].7,@@this
4464 C6 01 C7    mov  a,[toc_last_track_no]
                @@this:
4467 81          ret
                ;------------------
                get_curr_index:  ;UNUSED!
4468 C6 01 FA    mov  a,[desired_index]
446B 0A 6D 03    jnz  [disc_task].dt_5_seek,@@this
446E C6 02 12    mov  a,[subq_position+2]   ;Index?
                @@this:
4471 81          ret
                ;------------------
                get_curr_track:  ;UNUSED!
4472 C6 01 F9    mov  a,[desired_track]
4475 0A 6D 0A    jnz  [disc_task].dt_5_seek,@@this
4478 C6 02 11    mov  a,[subq_position+1]   ;Track
447B A1 AA       cmp  a,0AAh    ;AAh=Lead-Out
447D 26 03       jnz  @@this
447F CC 44 5F    jmp  get_last_track_or_99h_if_unknown
                ;---
                @@this:
4482 81          ret
                ;------------------
                delay_then_sense:  ;UNUSED!
4483 A6 0C       mov  a,0Ch                     ;\
                @@delay_lop:                    ; delay
4485 4A          dec  a                         ;
4486 26 FD       jnz  @@delay_lop               ;/
4488 0E 01 02    jnz  [io_portb].7,@@this       ;SENSE pin, sense(XX)
448B 98          clc   ;blah?
448C 81          ret
                ;---
                @@this:
448D 99          stc   ;blah?
448E 81          ret
                ;------------------
                check_if_track_a_is_within_first_last_track:
448F B7 88       mov  [88h],a  ;memorize wanted track
4491 CD 44 56    call get_first_track_or_01h_if_unknown
4494 B1 88       cmp  a,[88h]  ;compare first,wanted
4496 22 0B       ja   @@invalid
4498 CD 44 5F    call get_last_track_or_99h_if_unknown
449B B1 88       cmp  a,[88h]  ;compare last,wanted
449D 25 04       jc   @@invalid
449F 98          clc    ;okay (track is within first..last)
44A0 B6 88       mov  a,[88h]  ;restore wanted track
44A2 81          ret
                ;---
                @@invalid:
44A3 99          stc    ;fail (track is NOT within first..last)
44A4 B6 88       mov  a,[88h]  ;restore wanted track
44A6 81          ret
                ;------------------
                enqueue_int5_error_bit_4_bad_param:
44A7 A6 04       mov  a,4h  ;bad param ?
44A9 CC 3C 33    jmp  enqueue_int5_error_bit_a
                ;------------------
                whatever_XXX_44ACh:
                      ;out: A=value for [68h] (motor stop timeout... seek time?)
44AC 07 42 05    jz   [42h].3,@@direction_0   ;sled direction   ;\
44AF CD 44 C7    call @@get_dir1_table       ;--->              ;
44B2 20 03       jr   @@direction_done                          ; get entry from
                ;---                                            ; 9x9 table for
                @@direction_0:                                  ; direction
44B4 CD 45 38    call @@get_dir0_table       ;--->              ;
                @@direction_done:                               ;/
                ;- - - - - - -
44B7 0C 41 03    jnz  [41h].6,@@cont   ;1=Mini CD, 8cm
44BA 0E BB 09    jnz  [drv_mode].7,@@done ;speed  ;out: a=?
                @@cont:
44BD 44          shr  a  ;\                     ;\use MUCH (?!?!) smaller value
44BE 44          shr  a  ; div 8 (?)            ; for SINGLE speed, and
44BF 44          shr  a  ;/                     ;/for Mini CDs (but for latter ones, speed is totally ignored, which doesn't seem to be right)
44C0 B7 88       mov  [88h],a     ;<-- what/why?
44C2 26 02       jnz  @@done    ;\change 00h to min=01h
44C4 A6 01       mov  a,1h      ;/
                @@done:
44C6 81          ret      ;out: a
                ;--- --- ----------
                @@get_dir1_table:
44C7 B6 7D       mov  a,[distance_mm]   ;\  ;distance.MM
44C9 44          shr  a  ;\             ;
44CA 44          shr  a  ; div16        ;
44CB 44          shr  a  ;              ;
44CC 44          shr  a  ;/             ;
44CD A4 0F       and  a,0Fh ;blah       ;
44CF B7 88       mov  [88h],a           ;/
44D1 B6 57       mov  a,[subq_rx_buf+7] ;\   ;AbsMM
44D3 44          shr  a  ;\             ;
44D4 44          shr  a  ; div16        ;
44D5 44          shr  a  ;              ;
44D6 44          shr  a  ;/             ;
44D7 A4 0F       and  a,0Fh ;blah       ;
44D9 B7 89       mov  [89h],a       ;*1 ;/  ;(AbsMM/10h)
44DB 48          shl  a             ;*2 ;\
44DC 48          shl  a             ;*4 ;
44DD 48          shl  a             ;*8 ;   ;(AbsMM/10h)*8
44DE BB 89       add  a,[89h]       ;*9 ;/  ;(AbsMM/10h)*9
44E0 BB 88       add  a,[88h]           ;-  ;(AbsMM/10h)*9 + (distance.MM/10h)
44E2 97          mov  x,a
44E3 D6 44 E7    mov  a,[@@dir1_table+x]
44E6 81          ret
                ;--- 9x9 byte array
                @@dir1_table:
44E7             db 00Fh,020h,02Dh,039h,03Fh,044h,049h,04Eh,050h
44F0             db 00Ah,00Fh,014h,019h,020h,025h,02Bh,032h,0
44F9             db 008h,00Ah,00Fh,014h,019h,01Ch,025h,0   ,0
4502             db 005h,008h,00Ah,00Fh,014h,019h,0   ,0   ,0
450B             db 003h,005h,008h,00Ah,00Fh,0   ,0   ,0   ,0
4514             db 001h,003h,005h,008h,0   ,0   ,0   ,0   ,0
451D             db 001h,002h,003h,0   ,0   ,0   ,0   ,0   ,0
4526             db 001h,001h,0   ,0   ,0   ,0   ,0   ,0   ,0
452F             db 001h,0   ,0   ,0   ,0   ,0   ,0   ,0   ,0
                ;--- --- ----------
                @@get_dir0_table:
4538 B6 7D       mov  a,[distance_mm]   ;\  ;distance.MM
453A 44          shr  a  ;\             ;
453B 44          shr  a  ; div16        ;
453C 44          shr  a  ;              ;
453D 44          shr  a  ;/             ;
453E A4 0F       and  a,0Fh ;blah       ;
4540 B7 88       mov  [88h],a           ;/
4542 B6 5D       mov  a,[wanted_subq_mm];\  ;target.MM ?
4544 44          shr  a  ;\             ;
4545 44          shr  a  ; div16        ;
4546 44          shr  a  ;              ;
4547 44          shr  a  ;/             ;
4548 A4 0F       and  a,0Fh ;blah       ;
454A B7 89       mov  [89h],a       ;*1 ;/
454C 48          shl  a             ;*2 ;\
454D 48          shl  a             ;*4 ;    yy*9
454E 48          shl  a             ;*8 ;
454F BB 89       add  a,[89h]       ;*9 ;/
4551 BB 88       add  a,[88h]           ;-   yy*9 + xx
4553 97          mov  x,a
4554 D6 45 58    mov  a,[@@dir0_table+x]
4557 81          ret
                ;--- 9x9 byte array
                @@dir0_table:
4558             db 01Eh,02Dh,050h,055h,05Fh,064h,081h,096h,096h
4561             db 01Bh,01Eh,03Ch,03Fh,043h,048h,050h,051h,0
456A             db 019h,01Bh,01Eh,02Dh,032h,039h,043h,0   ,0
4573             db 012h,019h,01Bh,01Eh,02Dh,032h,0   ,0   ,0
457C             db 00Ch,012h,019h,01Bh,01Eh,0   ,0   ,0   ,0
4585             db 005h,00Ch,012h,019h,0   ,0   ,0   ,0   ,0
458E             db 004h,005h,008h,0   ,0   ,0   ,0   ,0   ,0
4597             db 001h,004h,0   ,0   ,0   ,0   ,0   ,0   ,0
45A0             db 001h,0   ,0   ,0   ,0   ,0   ,0   ,0   ,0
                ;------------------
                discard_response_type_A:
                 ;REPLACE 2nd response type A by ZERO   ;in: A (for compare)
45A9 C1 02 0C    cmp  a,[cmd_2nd_response_type] ;\
45AC 26 09       jnz  @@exit                    ;/
45AE A6 00       mov  a,0h                      ;\discard (instead, below REQUEST)
45B0 C7 02 0C    mov  [cmd_2nd_response_type],a ;/
45B3 1C 47       set  [47h].6  ;second response pending (INT2 or INT5) ;REQUEST
45B5 1F 47       res  [47h].7  ;dis-request "get_id" response
                @@exit:
45B7 81          ret
                ;------------------
                main_func_2nd_response:
45B8 0D 47 21    jz   [47h].6,@@exit     ;second response pending (INT2 or INT5)
45BB AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
45BD BF 04       mov  [io_porte_idx],x                  ;
45BF CD 40 EF    call read_data_bus                     ;
45C2 A4 07       and  a,7h                              ;
45C4 26 16       jnz  @@exit                            ;/
45C6 15 48       res  [48h].2
45C8 1D 47       res  [47h].6     ;second response pending (INT2 or INT5)
45CA CD 3B FB    call cmd_response_begin                ;-begin
45CD 0E 47 0D    jnz  [47h].7,@@want_get_id_response    ;---> redirect get id
45D0 B6 BC       mov  a,[drv_stat]              ;\
45D2 AE 17       mov  x,idx_17h_w_reply_to_psx  ; send(stat)
45D4 BF 04       mov  [io_porte_idx],x          ;
45D6 CD 40 FB    call write_data_bus            ;/
45D9 CC 40 BD    jmp  fire_irq_2
                ;---
                @@exit:
45DC 81          ret
                ;---
                @@want_get_id_response:
45DD 1F 47       res  [47h].7  ;dis-request "get_id" response
45DF 0E 90 12    jnz  [license_flags].7,@@get_id_unlicensed ;\  ;<-- DISC UNLICENSED
45E2 0C 90 0F    jnz  [license_flags].6,@@get_id_unlicensed ;/  ;<-- DISC MISSING
45E5 B6 BC       mov  a,[drv_stat]              ;\send(stat)
45E7 C7 01 F0    mov  [drv_response+0],a        ;/
45EA 4F          mov  a,00h,slow                ;\send(00h) (00h=ok/licensed)
45EB C7 01 F1    mov  [drv_response+1],a        ;/([license_flags].4 lost here!)
45EE CD 46 15    call send_get_id_response      ;-send(...)
45F1 CC 40 BD    jmp  fire_irq_2                ;-INT2 (licensed)
                ;---
                @@get_id_unlicensed:
45F4 B6 BC       mov  a,[drv_stat]              ;\
45F6 A4 F2       and  a,0F2h ;clear error bits  ;
45F8 B7 BC       mov  [drv_stat],a              ; send(stat)
45FA 16 BC       set  [drv_stat].3 ;id_error    ;
45FC B6 BC       mov  a,[drv_stat]              ;
45FE C7 01 F0    mov  [drv_response+0],a        ;/
4601 B6 90       mov  a,[license_flags]         ;\          ;40h=no disc
4603 A4 FE       and  a,0FEh              ;<--  ; send(..)  ;90h=audio
4605 B7 BD       mov  [err_code_for_id],a       ;           ;80h=unlicensed
4607 C7 01 F1    mov  [drv_response+1],a        ;/
460A CD 46 15    call send_get_id_response      ;-send(...)
460D CD 40 D8    call fire_irq_5                ;-INT5 (unlicensed)
4610 B6 BD       mov  a,[err_code_for_id]       ;\
4612 CC 41 70    jmp  send_debug_status_packet  ;/
                ;------------------
                send_get_id_response:
4615 B6 91       mov  a,[toc_disc_type]         ;\Disk Type (00h=CD-DA or CD-ROM, 10h=CD-I, 20h=CD-ROM-XA)
4617 C7 01 F2    mov  [drv_response+2],a        ;/
461A B6 92       mov  a,[toc_atip]              ;\usually 00h (... or ATIP ?)
461C C7 01 F3    mov  [drv_response+3],a        ;/
461F C6 01 D0    mov  a,[scex_string+0]         ;\
4622 C7 01 F4    mov  [drv_response+4],a        ;
4625 C6 01 D1    mov  a,[scex_string+1]         ; "SCEx" string
4628 C7 01 F5    mov  [drv_response+5],a        ;
462B C6 01 D2    mov  a,[scex_string+2]         ;
462E C7 01 F6    mov  [drv_response+6],a        ;
4631 C6 01 D3    mov  a,[scex_string+3]         ;
4634 C7 01 F7    mov  [drv_response+7],a        ;/
4637 AE 17       mov  x,idx_17h_w_reply_to_psx
4639 BF 04       mov  [io_porte_idx],x
463B C6 01 F0    mov  a,[drv_response+0]        ;\
463E CD 40 FB    call write_data_bus            ; these are incoming bytes
4641 C6 01 F1    mov  a,[drv_response+1]        ; (stat,error_code)
4644 CD 40 FB    call write_data_bus            ;/
4647 C6 01 F2    mov  a,[drv_response+2]
464A CD 40 FB    call write_data_bus
464D C6 01 F3    mov  a,[drv_response+3]
4650 CD 40 FB    call write_data_bus
4653 C6 01 F4    mov  a,[drv_response+4]
4656 CD 40 FB    call write_data_bus
4659 C6 01 F5    mov  a,[drv_response+5]
465C CD 40 FB    call write_data_bus
465F C6 01 F6    mov  a,[drv_response+6]
4662 CD 40 FB    call write_data_bus
4665 C6 01 F7    mov  a,[drv_response+7]
4668 CD 40 FB    call write_data_bus
466B 81          ret
                ;------------------
                request_int4_data_end:
466C 1A 47       set  [47h].5  ;INT4 request (data end)
466E 81          ret
                ;------------------
                main_func_check_data_end:
466F 0B 47 24    jz   [47h].5,@@exit    ;<-- check if INT4 requested
                ;- - - -
4672 AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
4674 BF 04       mov  [io_porte_idx],x                  ;
4676 CD 40 EF    call read_data_bus                     ;
4679 B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a ;
467B A4 07       and  a,7h                              ;
467D 26 17       jnz  @@exit                            ;/ ... still OTHER irq pending ?
                ;- - - -
467F 1B 47       res  [47h].5                   ;-reset INT4 request
4681 CD 3B FB    call cmd_response_begin        ;-
4684 B6 BC       mov  a,[drv_stat]              ;\
4686 C7 01 F0    mov  [drv_response+0],a        ;
4689 AE 17       mov  x,idx_17h_w_reply_to_psx  ; send(stat)
468B BF 04       mov  [io_porte_idx],x          ;
468D C6 01 F0    mov  a,[drv_response+0]        ;
4690 CD 40 FB    call write_data_bus            ;/
4693 CC 40 CF    jmp  fire_irq_4               ;INT4 (data end)
                ;---
                @@exit:
4696 81          ret
                ;------------------
                main_func_deliver_int5:
4697 09 47 4B    jz   [47h].4,@@exit    ;<-- check if INT5 requested
469A AE 11       mov  x,idx_11h_r_psx_fifo_flags        ;\
469C BF 04       mov  [io_porte_idx],x                  ;
469E CD 40 EF    call read_data_bus                     ;
46A1 B7 B5       mov  [curr_idx_11h_r_psx_fifo_flags],a ;
46A3 A4 07       and  a,7h                              ;
46A5 26 3E       jnz  @@exit                            ;/ ... still OTHER irq pending ?
46A7 19 47       res  [47h].4           ;<-- mark INT5 processed
46A9 15 48       res  [48h].2
46AB B6 BC       mov  a,[drv_stat]              ;\
46AD A4 0D       and  a,0Dh ;error bits         ;
46AF 27 34       jz   @@exit                    ;/
46B1 07 BC 05    jz   [drv_stat].3,@@no_id_error        ;\
46B4 B6 BD       mov  a,[err_code_for_id]               ;
46B6 C7 01 F1    mov  [drv_response+1],a                ;
                @@no_id_error:                          ;/
46B9 05 BC 05    jz   [drv_stat].2,@@no_seek_error      ;\
46BC B6 BE       mov  a,[err_code_for_seek]             ;
46BE C7 01 F1    mov  [drv_response+1],a                ;
                @@no_seek_error:                        ;/
46C1 01 BC 05    jz   [drv_stat].0,@@no_cmd_error       ;\
46C4 B6 BF       mov  a,[err_code_for_cmd]              ;
46C6 C7 01 F1    mov  [drv_response+1],a                ;
                @@no_cmd_error:                         ;/
46C9 CD 3B FB    call cmd_response_begin
46CC B6 BC       mov  a,[drv_stat]              ;\
46CE C7 01 F0    mov  [drv_response+0],a        ;
46D1 AE 17       mov  x,idx_17h_w_reply_to_psx  ; send(stat)
46D3 BF 04       mov  [io_porte_idx],x          ;
46D5 CD 40 FB    call write_data_bus            ;/
46D8 C6 01 F1    mov  a,[drv_response+1]        ;\
46DB AE 17       mov  x,idx_17h_w_reply_to_psx  ;
46DD BF 04       mov  [io_porte_idx],x          ;
46DF CD 40 FB    call write_data_bus            ;/
46E2 CC 40 D8    jmp  fire_irq_5                ;-
                ;---
                @@exit:
46E5 81          ret
                ;------------------
                delay_a:
                @@lop:             ;\
46E6 9D          nop           ;3  ; delay A * 8 cycles
46E7 4A          dec  a        ;2  ;
46E8 26 FC       jnz  @@lop    ;3  ;/
46EA 81          ret
                ;------------------
;:              ;:----------------- Debug Status Messages ("ROMSEL")
                ;------------------
                debug_status_receive_snippet:   ;in: A, out: [88h],[89h]
                 ;serial send index & receive 16bit data
46EB B7 8F       mov  [8Fh],a
46ED 9B          di
46EE 10 3E       set  [io_misc].0
46F0 AE 06       mov  x,06h
46F2 BF 00       mov  [io_hi_ddra],x       ;...direction...
46F4 11 3E       res  [io_misc].0
46F6 9A          ei
                ;- - - -
46F7 15 00       res  [io_porta_dta].2          ;clk=0                  ;\
46F9 9D          nop                                                    ;
46FA 9D          nop                                                    ; START
46FB 1A 02       set  [io_portc].5              ;"SCLK" ? "ROMSEL"?     ;
46FD 9D          nop                                                    ;
46FE 9D          nop                                                    ;
46FF 12 00       set  [io_porta_dta].1          ;dta=1 ;<-- const       ;
4701 9D          nop                                                    ;
4702 9D          nop                                                    ;
4703 14 00       set  [io_porta_dta].2          ;clk=1                  ;
4705 9D          nop                                                    ;
4706 9D          nop                                                    ;/
                ;- - - -
4707 15 00       res  [io_porta_dta].2          ;clk=0                  ;\
4709 9D          nop                            ;(dta=same as above)    ;
470A 9D          nop                                                    ; BIT7
470B 14 00       set  [io_porta_dta].2          ;clk=1                  ;
470D 9D          nop                                                    ;
470E 9D          nop                                                    ;/
470F 15 00       res  [io_porta_dta].2          ;clk=0                  ;\
4711 9D          nop                                                    ;
4712 9D          nop                                                    ; BIT6
4713 13 00       res  [io_porta_dta].1          ;dta=0 ;<-- const       ;
4715 9D          nop                                                    ;
4716 9D          nop                                                    ;
4717 14 00       set  [io_porta_dta].2          ;clk=1                  ;
4719 9D          nop                                                    ;
471A 9D          nop                                                    ;/
471B 15 00       res  [io_porta_dta].2          ;clk=0
                ;- - - -
471D B6 8F       mov  a,[8Fh]                                           ;\
471F AE 05       mov  x,5h                                              ;
4721 48          shl  a                                                 ;
4722 48          shl  a                                                 ;
                @@send_index_lop:                                       ; BIT5
4723 48          shl  a                                                 ; ..
4724 15 00       res  [io_porta_dta].2          ;clk=0                  ; BIT0
4726 9D          nop                                                    ;
4727 9D          nop                                                    ;
4728 25 04       jc   @@send_index_one                                  ;
472A 13 00       res  [io_porta_dta].1          ;dta=0                  ;
472C 20 02       jr   @@send_index_next                                 ;
                @@send_index_one:                                       ;
472E 12 00       set  [io_porta_dta].1          ;dta=1                  ;
                @@send_index_next:                                      ;
4730 9D          nop                                                    ;
4731 9D          nop                                                    ;
4732 14 00       set  [io_porta_dta].2          ;clk=1                  ;
4734 5A          dec  x                                                 ;
4735 2A EC       jns  @@send_index_lop                                  ;/
                ;- - - -
4737 15 00       res  [io_porta_dta].2          ;clk=0
4739 9D          nop
473A 9D          nop
473B 14 00       set  [io_porta_dta].2          ;clk=1
473D 9D          nop
                ;- - - -
473E 4F          mov  a,00h,slow                                        ;\
473F AE 07       mov  x,7h                                              ;
                @@receive_byte1_lop:                                    ;
4741 98          clc  ;<-- blah, below "jz" should affect cy as desired ;
4742 01 00 01    jz   [io_porta_dta].0,@@receive_byte1_cont             ;
4745 99          stc  ;<-- blah, above "jz" should affect cy as desired ;
                @@receive_byte1_cont:                                   ;
4746 15 00       res  [io_porta_dta].2          ;clk=0                  ;
4748 49          rcl  a                                                 ;
4749 9D          nop                                                    ;
474A 14 00       set  [io_porta_dta].2          ;clk=1                  ;
474C 5A          dec  x                                                 ;
474D 2A F2       jns  @@receive_byte1_lop                               ;
474F B7 88       mov  [88h],a                                           ;/
                ;- - - -
4751 4F          mov  a,00h,slow                                        ;\
4752 AE 07       mov  x,7h                                              ;
                @@receive_byte2_lop:                                    ;
4754 98          clc  ;<-- blah, below "jz" should affect cy as desired ;
4755 01 00 01    jz   [io_porta_dta].0,@@receive_byte2_cont             ;
4758 99          stc  ;<-- blah, above "jz" should affect cy as desired ;
                @@receive_byte2_cont:                                   ;
4759 15 00       res  [io_porta_dta].2          ;clk=0                  ;
475B 49          rcl  a                                                 ;
475C 9D          nop                                                    ;
475D 14 00       set  [io_porta_dta].2          ;clk=1                  ;
475F 5A          dec  x                                                 ;
4760 2A F2       jns  @@receive_byte2_lop                               ;
4762 B7 89       mov  [89h],a                                           ;/
                ;- - - -
4764 13 00       res  [io_porta_dta].1          ;dta=0 ;<-- const
4766 9D          nop
4767 9D          nop
4768 9D          nop
4769 1B 02       res  [io_portc].5              ;"SCLK" ? "ROMSEL"?
476B 9D          nop
                ;- - - -
476C 9B          di                                     ;\
476D 10 3E       set  [io_misc].0                       ;
476F AE 00       mov  x,00h                             ; restore default
4771 BF 00       mov  [io_hi_ddra],x                    ; direction = INPUT
4773 11 3E       res  [io_misc].0                       ;
4775 9A          ei                                     ;/
4776 81          ret
                ;------------------
                debug_status_send_snippet:    ;in: A,[88h],[89h]
                 ;serial send index & send 16bit data
4777 B7 8F       mov  [8Fh],a
4779 9B          di
477A 10 3E       set  [io_misc].0
477C AE 07       mov  x,07h
477E BF 00       mov  [io_hi_ddra],x       ;...direction...
4780 11 3E       res  [io_misc].0
4782 9A          ei
                ;- - - -
4783 15 00       res  [io_porta_dta].2          ;clk=0                  ;\
4785 9D          nop                                                    ;
4786 9D          nop                                                    ;
4787 1A 02       set  [io_portc].5              ;"SCLK" ? "ROMSEL"?     ; START
4789 9D          nop                                                    ;
478A 9D          nop                                                    ;
478B 12 00       set  [io_porta_dta].1          ;dta=1 ;<-- const       ;
478D 9D          nop                                                    ;
478E 9D          nop                                                    ;
478F 14 00       set  [io_porta_dta].2          ;clk=1                  ;
4791 9D          nop                                                    ;
4792 9D          nop                                                    ;/
                ;- - - -
4793 B6 8F       mov  a,[8Fh]                                           ;\
4795 AE 07       mov  x,7h                                              ;
                @@send_index_lop:                                       ;
4797 48          shl  a                                                 ;
4798 15 00       res  [io_porta_dta].2          ;clk=0                  ; BIT7
479A 9D          nop                                                    ; ..
479B 9D          nop                                                    ; BIT0
479C 25 04       jc   @@send_index_one                                  ;
479E 13 00       res  [io_porta_dta].1          ;dta=0                  ;
47A0 20 02       jr   @@send_index_next                                 ;
                @@send_index_one:                                       ;
47A2 12 00       set  [io_porta_dta].1          ;dta=1                  ;
                @@send_index_next:                                      ;
47A4 9D          nop                                                    ;
47A5 9D          nop                                                    ;
47A6 14 00       set  [io_porta_dta].2          ;clk=1                  ;
47A8 5A          dec  x                                                 ;
47A9 2A EC       jns  @@send_index_lop                                  ;/
                ;- - - -
47AB B6 88       mov  a,[88h]                                           ;\
47AD AE 07       mov  x,7h                                              ;
                @@send_byte1_lop:                                       ;
47AF 48          shl  a                                                 ;
47B0 15 00       res  [io_porta_dta].2          ;clk=0                  ;
47B2 9D          nop                                                    ;
47B3 9D          nop                                                    ;
47B4 25 04       jc   @@send_byte1_one                                  ;
47B6 13 00       res  [io_porta_dta].1          ;dta=0                  ;
47B8 20 02       jr   @@send_byte1_next                                 ;
                @@send_byte1_one:                                       ;
47BA 12 00       set  [io_porta_dta].1          ;dta=1                  ;
                @@send_byte1_next:                                      ;
47BC 9D          nop                                                    ;
47BD 9D          nop                                                    ;
47BE 14 00       set  [io_porta_dta].2          ;clk=1                  ;
47C0 5A          dec  x                                                 ;
47C1 2A EC       jns  @@send_byte1_lop                                  ;/
                ;- - - -
47C3 B6 89       mov  a,[89h]                                           ;\
47C5 AE 07       mov  x,7h                                              ;
                @@send_byte2_lop:                                       ;
47C7 48          shl  a                                                 ;
47C8 15 00       res  [io_porta_dta].2          ;clk=0                  ;
47CA 9D          nop                                                    ;
47CB 9D          nop                                                    ;
47CC 25 04       jc   @@send_byte2_one                                  ;
47CE 13 00       res  [io_porta_dta].1          ;dta=0                  ;
47D0 20 02       jr   @@send_byte2_next                                 ;
                @@send_byte2_one:                                       ;
47D2 12 00       set  [io_porta_dta].1          ;dta=1                  ;
                @@send_byte2_next:                                      ;
47D4 9D          nop                                                    ;
47D5 9D          nop                                                    ;
47D6 14 00       set  [io_porta_dta].2          ;clk=1                  ;
47D8 5A          dec  x                                                 ;
47D9 2A EC       jns  @@send_byte2_lop                                  ;/
                ;- - - -
47DB 13 00       res  [io_porta_dta].1          ;dta=0  ;<-- const
47DD 9D          nop
47DE 9D          nop
47DF 9D          nop
47E0 1B 02       res  [io_portc].5              ;"SCLK" ? "ROMSEL"?
47E2 9D          nop
                ;- - - -
47E3 9B          di                                     ;\
47E4 10 3E       set  [io_misc].0                       ;
47E6 AE 00       mov  x,0h                              ; restore default
47E8 BF 00       mov  [io_hi_ddra],x                    ; direction = INPUT
47EA 11 3E       res  [io_misc].0                       ;
47EC 9A          ei                                     ;/
47ED 81          ret
                ;------------------
                debug_status_send_snippet_00h_00h_00h:
47EE A6 00       mov  a,00h
47F0 3F 88       mov  [88h],00h
47F2 3F 89       mov  [89h],00h
47F4 CC 47 77    jmp  debug_status_send_snippet
                ;------------------
                debug_status_send_snippet_30h_00h_00h:
47F7 A6 30       mov  a,30h
47F9 3F 88       mov  [88h],00h
47FB 3F 89       mov  [89h],00h
47FD CC 47 77    jmp  debug_status_send_snippet
                ;------------------
                packed_bcd_to_unpacked_bcd:   ;UNUSED!
4800 97          mov  x,a
4801 A4 0F       and  a,0Fh
4803 B7 8F       mov  [8Fh],a  ;lsb
4805 9F          mov  a,x
4806 44          shr  a
4807 44          shr  a
4808 44          shr  a
4809 44          shr  a
480A B7 8E       mov  [8Eh],a  ;msb
480C 81          ret
                ;------------------
                unpacked_bcd_to_packed_bcd:   ;UNUSED!
480D B6 8F       mov  a,[8Fh] ;lsb
480F A4 0F       and  a,0Fh
4811 B7 8F       mov  [8Fh],a
4813 B6 8E       mov  a,[8Eh] ;msb
4815 48          shl  a
4816 48          shl  a
4817 48          shl  a
4818 48          shl  a
4819 A4 F0       and  a,0F0h
481B BA 8F       or   a,[8Fh]
481D 81          ret
                ;------------------
;:              ;:----------------- SCEx Interrupt Handler
                ;------------------
                sony_tbi_vector:
                sony_sspi_vector:
                sony_timer1_vector:
                sony_kwi_vector:
                sony_irq_vector:   ;<-- not really used (/IRQ1 and /IRQ2 are connected, but both are disabled; one of them is merely polled, the other one isn't used at all)
                sony_swi_vector:
481E 80          reti
                ;------------------
                sony_timer2_vector:
481F 1E 4B       set  [timer2_irq_flag].7
4821 14 1D       set  [io_tsr2].2
4823 03 44 02    jz   [scex_flags].1,@@exit ;enable_scex_reading (0=off, 1=on)
4826 AD 38       call relative sony_timer2_scex_handler
                @@exit:
4828 80          reti
                ;------------------
                start_scex_reading:
4829 4F          mov  a,00h,slow
482A C7 01 D0    mov  [scex_string+0],a
482D C7 01 D1    mov  [scex_string+1],a
4830 C7 01 D2    mov  [scex_string+2],a
4833 C7 01 D3    mov  [scex_string+3],a
4836 C7 01 D5    mov  [scex_rx_phase],a
4839 15 44       res  [scex_flags].2            ;0=BUSY
483B 19 44       res  [scex_flags].4        ;<-- unlike below (one-shot read, stop reading after receiving ONE correct SCEx string)
483D 12 44       set  [scex_flags].1 ;enable_scex_reading (0=off, 1=on)
483F 81          ret
                ;------------------
                start_scex_reading_and_reset_counters:
4840 4F          mov  a,00h,slow
4841 C7 01 D0    mov  [scex_string+0],a
4844 C7 01 D1    mov  [scex_string+1],a
4847 C7 01 D2    mov  [scex_string+2],a
484A C7 01 D3    mov  [scex_string+3],a
484D C7 01 D5    mov  [scex_rx_phase],a
4850 C7 01 D8    mov  [scex_total_count],a
4853 C7 01 D9    mov  [scex_success_count],a
4856 15 44       res  [scex_flags].2            ;0=BUSY
4858 18 44       set  [scex_flags].4        ;<-- unlike above (keep reading even after success?)
485A 12 44       set  [scex_flags].1 ;enable_scex_reading (0=off, 1=on)
485C 81          ret
                ;------------------
                stop_scex_reading:
485D 13 44       res  [scex_flags].1 ;enable_scex_reading (0=off, 1=on)
485F 81          ret
                ;------------------
                sony_timer2_scex_handler:
4860 C6 01 D5    mov  a,[scex_rx_phase]
4863 48          shl  a         ;mul2
4864 CB 01 D5    add  a,[scex_rx_phase]  ;mul3
4867 97          mov  x,a
4868 DC 48 6B    jmp  @@scex_jumplist+x
                ;---
                @@scex_jumplist:
486B CC 48 83    jmp  scex_phase_0_init_begin              ;4883h
486E CC 48 90    jmp  scex_phase_1_wait_for_silence        ;4890h
4871 CC 48 B2    jmp  scex_phase_2_wait_for_first_startbit ;48B2h
4874 CC 48 D0    jmp  scex_phase_3_receive_bit             ;48D0h
4877 CC 48 F5    jmp  scex_phase_4_process_character       ;48F5h
487A CC 49 29    jmp  scex_phase_5_post_character_delay    ;4929h
487D CC 49 42    jmp  scex_phase_6_wait_for_next_startbit  ;4942h
4880 CC 49 67    jmp  scex_phase_7_finish                  ;4967h
                ;------------------
                scex_phase_0_init_begin:
4883 A6 00       mov  a,0h
4885 C7 01 D6    mov  [scex_rx_prescaler],a  ;=00h
4888 C7 01 D7    mov  [scex_rx_index],a      ;=00h
488B 4C          inc  a  ;=01h
488C C7 01 D5    mov  [scex_rx_phase],a      ;=01h
488F 81          ret
                ;------------------
                scex_phase_1_wait_for_silence:
4890 02 01 0C    jnz  [io_portb].1,@@bad_silence    ;--> bad (non-silence)
4893 C6 01 D6    mov  a,[scex_rx_prescaler]
4896 4C          inc  a
4897 A1 40       cmp  a,40h  ;wanted minimum silence length
4899 22 0A       ja   @@good_enough_silence         ;--> good (enough silence)
489B C7 01 D6    mov  [scex_rx_prescaler],a
489E 81          ret
                ;---
                @@bad_silence:
489F A6 00       mov  a,0h                      ;\restart silence counter
48A1 C7 01 D6    mov  [scex_rx_prescaler],a     ;/(retry, wait for new silence)
48A4 81          ret
                ;---
                @@good_enough_silence:
48A5 A6 02       mov  a,2h                      ;\
48A7 C7 01 D5    mov  [scex_rx_phase],a         ;/
48AA 1B 44       res  [scex_flags].5            ;-
48AC A6 00       mov  a,0h                      ;\
48AE C7 01 D7    mov  [scex_rx_index],a         ;/
48B1 81          ret
                ;------------------
                scex_phase_2_wait_for_first_startbit:
48B2 02 01 03    jnz  [io_portb].1,@@got_startbit       ;-test start-bit
48B5 1B 44       res  [scex_flags].5   ;prev.bit
48B7 81          ret
                ;---
                @@got_startbit:                         ;\accept start bit ONLY
48B8 0A 44 03    jnz  [scex_flags].5,@@accept_startbit  ; if there were TWO
48BB 1A 44       set  [scex_flags].5   ;prev.bit        ;/continous "HIGH" bits
48BD 81          ret
                ;---
                @@accept_startbit:
48BE C6 01 D8    mov  a,[scex_total_count]      ;\
48C1 4C          inc  a                         ; raise total scex read attempts
48C2 C7 01 D8    mov  [scex_total_count],a      ;/
48C5 A6 03       mov  a,3h                      ;\next phase (receive bits)
48C7 C7 01 D5    mov  [scex_rx_phase],a         ;/
48CA A6 03       mov  a,3h                      ;\
48CC C7 01 D6    mov  [scex_rx_prescaler],a     ;/   ;prescaler init
48CF 81          ret
                ;------------------
                scex_phase_3_receive_bit:
48D0 C6 01 D6    mov  a,[scex_rx_prescaler]     ;\
48D3 4C          inc  a                         ;
48D4 C7 01 D6    mov  [scex_rx_prescaler],a     ; raise prescaler
48D7 A4 03       and  a,3h                      ;
48D9 27 01       jz   @@now                     ;/
48DB 81          ret
                ;---
                @@now:
48DC CE 01 D4    mov  x,[scex_rx_char]          ;current "SCEx" character
48DF B6 01       mov  a,[io_portb]
48E1 44          shr  a  ;\[io_portb].1 to cy
48E2 44          shr  a  ;/
48E3 56          rcr  x
48E4 CF 01 D4    mov  [scex_rx_char],x          ;current "SCEx" character
48E7 C6 01 D6    mov  a,[scex_rx_prescaler]
48EA A1 24       cmp  a,24h ;9*4 (9bits with 4-step prescaler)
48EC 27 01       jz   @@was_last_bit_of_character
48EE 81          ret
                ;---
                @@was_last_bit_of_character:
48EF A6 04       mov  a,4h                      ;\next phase
48F1 C7 01 D5    mov  [scex_rx_phase],a         ;/(verify the new character)
48F4 81          ret
                ;------------------
                scex_phase_4_process_character:
48F5 C6 01 D4    mov  a,[scex_rx_char]                  ;\current "SCEx" char
48F8 A8 FF       xor  a,0FFh                            ;/
48FA CE 01 D7    mov  x,[scex_rx_index]                 ;\
48FD D7 01 D0    mov  [scex_string+x],a                 ;
4900 D1 49 B4    cmp  a,[txt_scex+x]                    ; verify current char
4903 27 03       jz   @@current_char_good               ;
4905 CC 49 83    jmp  scex_wrong_character_within_string;
                @@current_char_good:                    ;/
4908 5C          inc  x                         ;\store current char
4909 CF 01 D7    mov  [scex_rx_index],x         ;/
490C 9F          mov  a,x                       ;\check if it was the 4th char
490D A1 04       cmp  a,4h                      ; (if so, done/success)
490F 27 0B       jz   @@all_4_chars_good        ;/
4911 A6 05       mov  a,5h                      ;\next phase (wait for END of
4913 C7 01 D5    mov  [scex_rx_phase],a         ;/DATA bit, aka for stop bit)
4916 A6 01       mov  a,1h                      ;\
4918 C7 01 D6    mov  [scex_rx_prescaler],a     ;/
491B 81          ret
                ;---
                @@all_4_chars_good:
491C C6 01 D9    mov  a,[scex_success_count]    ;\
491F 4C          inc  a                         ; raise success counter
4920 C7 01 D9    mov  [scex_success_count],a    ;/
4923 A6 07       mov  a,7h                      ;\
4925 C7 01 D5    mov  [scex_rx_phase],a         ;/
4928 81          ret
                ;------------------
                scex_phase_5_post_character_delay:
4929 C6 01 D6    mov  a,[scex_rx_prescaler]     ;\
492C 4C          inc  a                         ; wait until last data bit ends
492D A4 03       and  a,3h                      ; (want silence/stop-bit)
492F 27 04       jz   @@now                     ;
4931 C7 01 D6    mov  [scex_rx_prescaler],a     ;/
4934 81          ret
                ;---
                @@now:
4935 A6 06       mov  a,6h                      ;\
4937 C7 01 D5    mov  [scex_rx_phase],a         ;/
493A A6 00       mov  a,0h                      ;\
493C C7 01 D6    mov  [scex_rx_prescaler],a     ;/
493F 1B 44       res  [scex_flags].5            ;-
4941 81          ret
                ;------------------
                scex_phase_6_wait_for_next_startbit:
4942 02 01 11    jnz  [io_portb].1,@@got_startbit       ;-test start-bit
4945 1B 44       res  [scex_flags].5   ;prev.bit
4947 C6 01 D6    mov  a,[scex_rx_prescaler]             ;\
494A 4C          inc  a                                 ; timeout if there's
494B A1 40       cmp  a,40h                             ; TOO much silence
494D 22 04       ja   @@timeout                         ; BETWEEN characters
494F C7 01 D6    mov  [scex_rx_prescaler],a             ;/
4952 81          ret
                ;---
                @@timeout:
4953 CC 49 99    jmp  scex_too_much_silence_within_string
                ;---
                @@got_startbit:                         ;\accept start bit ONLY
4956 0A 44 03    jnz  [scex_flags].5,@@accept_startbit  ; if there were TWO
4959 1A 44       set  [scex_flags].5   ;prev.bit        ;/continous "HIGH" bits
495B 81          ret
                ;---
                @@accept_startbit:
495C A6 03       mov  a,3h                      ;\next phase (receive data bits)
495E C7 01 D5    mov  [scex_rx_phase],a         ;/
4961 A6 03       mov  a,3h                      ;\
4963 C7 01 D6    mov  [scex_rx_prescaler],a     ;/
4966 81          ret
                ;------------------
                scex_phase_7_finish:
4967 09 44 0D    jz   [scex_flags].4,@@one_shot_good     ;(0=boot/one-shot, 1=test/repeat)
496A C6 01 D8    mov  a,[scex_total_count]          ;total
496D A1 FF       cmp  a,0FFh        ;repeat count
496F 27 06       jz   @@repeat_max  ;max 255 times (or until aborted via test cmd_19h_05h)
4971 A6 00       mov  a,0h                      ;\restart next SCEx reading
4973 C7 01 D5    mov  [scex_rx_phase],a         ;/
4976 81          ret
                ;---
                @@one_shot_good: ;<-- in boot-mode: got ONE good SCEx string
                @@repeat_max:    ;<-- in test-mode: tested max=255 SCEx strings
4977 A6 00       mov  a,0h
4979 C7 01 D5    mov  [scex_rx_phase],a
497C 13 44       res  [scex_flags].1 ;enable_scex_reading (0=off, 1=on)
497E 19 44       res  [scex_flags].4
4980 14 44       set  [scex_flags].2         ;mark NOT BUSY (okay, or reached MAX)
4982 81          ret
                ;------------------
                scex_wrong_character_within_string: ;read error, or wrong region
4983 09 44 0D    jz   [scex_flags].4,@@endless_repeat_until_one_shot_match
4986 C6 01 D8    mov  a,[scex_total_count]              ;\
4989 A1 FF       cmp  a,0FFh                            ; test (till max 255)
498B 26 06       jnz  @@not_yet_max_repeat              ;/
498D A6 07       mov  a,7h      ;timeout, exit by simulating phase_7 (although in this case, reading did NOT match, phase_7 is just MIS-USED to exit upon max repeat here)
498F C7 01 D5    mov  [scex_rx_phase],a
4992 81          ret
                ;---
                @@endless_repeat_until_one_shot_match:  ;<-- boot mode
                @@not_yet_max_repeat:                   ;<-- test mode
4993 A6 00       mov  a,0h                      ;\restart next SCEx reading
4995 C7 01 D5    mov  [scex_rx_phase],a         ;/
4998 81          ret
                ;------------------
                scex_too_much_silence_within_string:
4999 09 44 0D    jz   [scex_flags].4,@@one_shot_mode    ;-endless (till match)
499C C6 01 D8    mov  a,[scex_total_count]              ;\
499F A1 FF       cmp  a,0FFh                            ; test (till max 255)
49A1 26 06       jnz  @@notyet_max_repeat               ;/
49A3 A6 07       mov  a,7h                              ;\
49A5 C7 01 D5    mov  [scex_rx_phase],a                 ;/
49A8 81          ret
                ;---
                @@one_shot_mode:
                @@notyet_max_repeat:
49A9 A6 02       mov  a,2h
49AB C7 01 D5    mov  [scex_rx_phase],a
49AE A6 00       mov  a,0h
49B0 C7 01 D7    mov  [scex_rx_index],a
49B3 81          ret
                ;------------------
                txt_scex:
49B4             db 'SCEA'   ;SCEA (or SCEE/SCEI for other regions)
                ;------------------
;:              ;:----------------- Sony Test Mode
                ;------------------
                sony_test_mode:
49B8 CD 49 D2    call init_sony_test_mode               ;-init
                @@lop:
49BB A6 20       mov  a,20h  ;cx(20)                    ;\CXA1782BR Servo Amplifier
49BD CD 43 33    call send_8bit_to_cxa1782br            ;/SledAndTrackingOff
49C0 A6 02       mov  a,2h                              ;\huge delay 2040ms
49C2 CD 4A 1D    call delay_a_mul_1020_timer2_steps     ;/
49C5 A6 25       mov  a,25h  ;cx(25)                    ;\CXA1782BR Servo Amplifier
49C7 CD 43 33    call send_8bit_to_cxa1782br            ;/SledAndTrackingServoOn
49CA A6 02       mov  a,2h                              ;\huge delay 2040ms
49CC CD 4A 1D    call delay_a_mul_1020_timer2_steps     ;/
49CF CC 49 BB    jmp  @@lop                     ;<-- endless
                ;------------------
                init_sony_test_mode:
49D2 1F 03       res  [io_portd].7            ;LDON  ... IC723.Pin11
49D4 A6 02       mov  a,02h  ;cx(02)                    ;\CXA1782BR Servo Amplifier
49D6 CD 43 33    call send_8bit_to_cxa1782br            ;/FocusSearchVoltageFalling
49D9 A6 01       mov  a,1h                              ;\huge delay 1020ms
49DB CD 4A 1D    call delay_a_mul_1020_timer2_steps     ;/
49DE A6 47       mov  a,47h  ;cx(4700)             ;msb ;\CXD2510Q Signal Processor
49E0 3F 88       mov  [scratch_cxd_mid],00h        ;mid ; AutoSeqFocusOn
49E2 CD 43 2B    call send_16bit_to_cxd2510q            ;/
                @@wait_busy_lop:                        ;\
49E5 A6 40       mov  a,40h ;sense(40) xbusy            ; CXD2510Q Signal Processor
49E7 CD 43 41    call cxd_send_8bit_fragment_a          ; wait while AutoSeqBusy
49EA A6 7D       mov  a,7Dh ;125 decimal ;\delay        ; (via SENSE=XBUSY)
49EC CD 46 E6    call delay_a            ;/             ;
49EF 0F 01 F3    jz   [io_portb].7,@@wait_busy_lop      ;/
49F2 A6 08       mov  a,08h   ;cx(08)                   ;\CXA1782BR Servo Amplifier
49F4 CD 43 33    call send_8bit_to_cxa1782br            ;/FocusServoOn
49F7 CD 42 1D    call send_0Ch_to_cxa1782br  ;cx(0C)    ;-FocusServoOnAndDefectOn
49FA A6 34       mov  a,34h   ;cx(30+4)                 ;\CXA1782BR Servo Amplifier
49FC CD 43 33    call send_8bit_to_cxa1782br            ;/BalanceAdjust=MID
49FF A6 3C       mov  a,3Ch   ;cx(38+4)                 ;\CXA1782BR Servo Amplifier
4A01 CD 43 33    call send_8bit_to_cxa1782br            ;/GainAdjust=MID
4A04 A6 9B       mov  a,9Bh   ;cx(9B00)            ;msb ;\
4A06 AE 00       mov  x,00h                        ;mid ; CXD2510Q Signal Processor
4A08 BF 88       mov  [scratch_cxd_mid],x          ;mid ; NormalSpeed
4A0A CD 43 2B    call send_16bit_to_cxd2510q            ;/
4A0D A6 E8       mov  a,0E8h ;cx(E8) ;forward           ;\CXD2510Q Signal Processor
4A0F CD 43 33    call send_8bit_to_cxd2510q             ;/SpindleMotorForward
4A12 AE C8       mov  x,0C8h ;200 decimal               ;\delay 200ms
4A14 CD 41 C5    call delay_x_timer2_steps              ;/
4A17 A6 E6       mov  a,0E6h ;cx(E6)                    ;\CXD2510Q Signal Processor
4A19 CD 43 33    call send_8bit_to_cxd2510q             ;/AutomaticNormal
4A1C 81          ret
                ;------------------
                delay_a_mul_1020_timer2_steps:  ;A*1020ms (aka A * 1.02 seconds)
                @@lop:
4A1D CD 41 C1    call delay_255_timer2_steps    ;255ms
4A20 CD 41 C1    call delay_255_timer2_steps    ;255ms
4A23 CD 41 C1    call delay_255_timer2_steps    ;255ms
4A26 CD 41 C1    call delay_255_timer2_steps    ;255ms
4A29 4A          dec  a
4A2A 26 F1       jnz  @@lop
4A2C 81          ret
                ;------------------
                ;UNUSED!
4A2D             db ';space'
                ;---
4A33             db 'Copyright (C) Sony Computer Entertainment of America'
                ;------------------
4A67..4FFF       defs 5000h-$    ;-unused (00h-filled)
                ;------------------
;:              ;:----------------- Motorola Test ROM
                ;------------------
0040            motorola_ram_base       equ 0040h
00E0            motorola_ram_proc       equ 00E0h
00E0             motorola_ram_opcode    equ 00E0h+0
00E1             motorola_ram_addr_hi   equ 00E0h+1
00E2             motorola_ram_addr_lo   equ 00E0h+2
00E3             motorola_ram_ret       equ 00E0h+3
00E4            motorola_ram_temp1      equ 00E4h
00E5            motorola_ram_temp2      equ 00E5h
00FF            motorola_stacktop       equ 00FFh
023F            motorola_ram_vector     equ 023Fh
                ;------------------
                org 0FE00h   ;begin of Motorola Bootstrap/Test ROM
                ;------------------
                motorola_func2_upload_to_ram:
FE00 9C          mov  sp,motorola_stacktop              ;-init stackpointer
FE01 5F          mov  x,00h,slow                        ;\
                @@lop1:                                 ;
FE02 CD FF 2A    call motorola_recv_char_with_rts_cts   ; upload to
FE05 E7 40       mov  [motorola_ram_base+x],a           ; [0040h..013Fh]
FE07 5C          inc  x                                 ;
FE08 26 F8       jnz  @@lop1                            ;/
                @@lop2:                                 ;\
FE0A CD FF 2A    call motorola_recv_char_with_rts_cts   ; upload to
FE0D D7 01 40    mov  [motorola_ram_base+100h+x],a      ; [0140h..023Fh]
FE10 5C          inc  x                                 ;
FE11 26 F7       jnz  @@lop2                            ;/
FE13 17 05       res  [io_portf].3                      ;-ready... RTS off ?
                ;- - - - - - ------
                motorola_func0_jump_to_ram:
FE15 BC 40       jmp  motorola_ram_base                 ;-jump to 0040h (RAM)
                ;------------------
                motorola_init_communication:
FE17 A6 FF       mov  a,0FFh
FE19 B7 05       mov  [io_portf],a     ;data
FE1B A6 81       mov  a,81h
FE1D B7 3E       mov  [io_misc],a
FE1F A6 0D       mov  a,0Dh
FE21 B7 05       mov  [io_hi_ddrf],a     ;direction?    ;<-- UNDOC i/o port ?
FE23 11 3E       res  [io_misc].0
                ;- - - - - - ------
                motorola_init_ram_opcode:
FE25 AE 04       mov  x,4h                              ;\
                @@lop:                                  ; reloc [FE30h..FE33h]
FE27 D6 FE 2F    mov  a,[@@reloc_src-1+x]               ; to [00E0h..00E3h]
FE2A E7 DF       mov  [motorola_ram_proc-1+x],a         ; in RAM
FE2C 5A          dec  x                                 ;
FE2D 26 F8       jnz  @@lop                             ;/
FE2F 81          ret
                ;---
                @@reloc_src:
                 ;below opcode is relocated to RAM,
                 ;and there, it is MODIFIED in several ways:
                 ;1) opcode can be changed to C6,C7,C8 (load,store,xor)
                 ;2) addr can be changed to range 1000h..4FFFh or FE00h..FFFFh
FE30 C7 10 00    mov  [1000h],a
FE33 81          ret
                ;------------------
                motorola_reset_entrypoint:
FE34 03 01 0C    jz   [io_portb].1,@@func0_or_func1
                @@func2_or_func3:
FE37 AD DE       call relative motorola_init_communication
FE39 AD 02       call relative @@do_func2_or_func3_communication
FE3B 20 FE       jr   $    ;lockup (endless loop)
                ;---
                @@do_func2_or_func3_communication:
FE3D 01 01 C0    jz   [io_portb].0,motorola_func2_upload_to_ram
FE40 CC FE E9    jmp  motorola_func3_download_from_rom
                ;---
                @@func0_or_func1:
FE43 01 01 CF    jz   [io_portb].0,motorola_func0_jump_to_ram
                ;- - - - - - ------
                motorola_func1_selftest_or_so:
                 ;this is some strange nonfunctional selftest,
                 ;it does test some stuff, but doesn't do anything on errors
FE46 AE 05       mov  x,5h                      ;\
FE48 A6 FF       mov  a,0FFh                    ;
                @@test_init_lop:                ; init ports
FE4A F7          mov  [x],a                     ;
FE4B 5A          dec  x                         ;
FE4C 26 FC       jnz  @@test_init_lop           ;/
FE4E A6 81       mov  a,81h
FE50 B7 3E       mov  [io_misc],a
FE52 A6 FF       mov  a,0FFh           ;...direction...
FE54 B7 08       mov  [io_hi_rcr1],a
FE56 B7 02       mov  [io_hi_ddrc],a
FE58 B7 03       mov  [io_hi_ddrd],a
FE5A B7 04       mov  [io_hi_ddre],a
FE5C B7 05       mov  [io_hi_ddrf],a        ;<-- UNDOC i/o port ?
FE5E 11 3E       res  [io_misc].0
                ;- - - - -
                @@selftest_mainloop:
FE60 B6 13       mov  a,[io_tsr]
FE62 B6 18       mov  a,[io_tcnth]
FE64 B7 E4       mov  [motorola_ram_temp1],a
FE66 B7 16       mov  [io_oc1h],a                       ;maybe timer1 start
FE68 B6 19       mov  a,[io_tcntl]
FE6A B7 17       mov  [io_oc1l],a
FE6C AE 40       mov  x,40h
FE6E BF 12       mov  [io_tcr],x
                @@tmr1_test_lop:                ;\
FE70 AB 0A       add  a,0Ah                     ;
FE72 B7 E5       mov  [motorola_ram_temp2],a    ;
FE74 4F          mov  a,00h,slow                ;
FE75 B9 E4       adc  a,[motorola_ram_temp1]    ; timer1 test
FE77 B7 E4       mov  [motorola_ram_temp1],a    ;
FE79 B1 18       cmp  a,[io_tcnth]     ;msb     ;
FE7B 26 0B       jnz  @@tmr1_test_fail          ;
FE7D B6 E5       mov  a,[motorola_ram_temp2]    ;
FE7F B1 19       cmp  a,[io_tcntl]     ;lsb     ;
FE81 26 05       jnz  @@tmr1_test_fail          ;
FE83 FF          mov  [x],x                     ;
FE84 0D 13 E9    jz   [io_tsr].6,@@tmr1_test_lop;
FE87 4F          mov  a,00h,slow  ;blah         ;
                @@tmr1_test_fail:               ;/
FE88 A6 40       mov  a,40h                     ;\
FE8A B7 1C       mov  [io_tcr2],a               ;
FE8C AE 08       mov  x,8h                      ;
FE8E BF 1E       mov  [io_oc2],x                ; timer2 test
FE90 BF 1F       mov  [io_tcnt2],x              ;
FE92 33 1D       not  [io_tsr2]                 ;
FE94 0D 1D FD    jz   [io_tsr2].6,$   ;wait     ;
FE97 AE 48       mov  x,48h                     ;
FE99 BF 11       mov  [io_tbcr2],x              ;
FE9B 0F 11 FD    jz   [io_tbcr2].7,$  ;wait     ;/
FE9E AE 05       mov  x,5h                      ;\
                @@port_test_lop:                ;
FEA0 F6          mov  a,[x]                     ;
FEA1 5A          dec  x                         ; port test
FEA2 26 FC       jnz  @@port_test_lop           ;
FEA4 33 03       not  [io_portd]                ;
FEA6 33 04       not  [io_porte_idx]            ;
FEA8 33 05       not  [io_portf]                ;/
FEAA 5F          mov  x,00h,slow                        ;\
FEAB A6 FF       mov  a,0FFh                            ;
                @@ram_test_lop1:                        ;
                @@ram_test_lop2:                        ;
FEAD E7 40       mov  [motorola_ram_base+0000h+x],a     ; RAM test
FEAF E1 40       cmp  a,[motorola_ram_base+0000h+x]     ;
FEB1 D7 01 40    mov  [motorola_ram_base+0100h+x],a     ;
FEB4 D1 01 40    cmp  a,[motorola_ram_base+0100h+x]     ;
FEB7 4A          dec  a          ;data+1                ;
FEB8 26 F3       jnz  @@ram_test_lop2                   ;
FEBA 5C          inc  x          ;index+1               ;
FEBB 26 F0       jnz  @@ram_test_lop1                   ;/
FEBD CD FE 25    call motorola_init_ram_opcode          ;\
FEC0 3C E0       inc  [motorola_ram_opcode] ;=C8h (XOR) ;
FEC2 4F          mov  a,00h,slow                        ;
                @@rom_test_lop:                         ; ROM test
FEC3 BD E0       call motorola_ram_proc                 ;
FEC5 97          mov  x,a                               ;
FEC6 CD FF 1A    call motorola_raise_rom_addr           ;
FEC9 9F          mov  a,x                               ;
FECA 26 F7       jnz  @@rom_test_lop                    ;
FECC 43          not  a ;blah                           ;/
FECD A6 50       mov  a,50h                     ;\
FECF B7 0A       mov  [io_spcr1],a              ;
FED1 B6 0B       mov  a,[io_spsr1]              ;
FED3 A6 55       mov  a,55h                     ;
FED5 B7 0C       mov  [io_spdr1],a              ; SPI test
FED7 0E 0B FD    jnz  [io_spsr1].7,$  ;wait     ;
FEDA B6 0B       mov  a,[io_spsr1]              ;
FEDC B6 0C       mov  a,[io_spdr1]              ;
FEDE B6 0B       mov  a,[io_spsr1]              ;
FEE0 B7 0A       mov  [io_spcr1],a              ;/
FEE2 16 11       set  [io_tbcr2].3              ;\
FEE4 14 1D       set  [io_tsr2].2               ;/
FEE6 CC FE 60    jmp  @@selftest_mainloop
                ;------------------
                motorola_func3_download_from_rom:
FEE9 9C          mov  sp,motorola_stacktop
FEEA 83          swi   ;=aka "call motorola_swi_handler"
                 ;- - -
                 ;above SWI does NOT return to this location, instead, it
                 ;does "return" to manipulated [motorola_stacktop], see reti !!!
                ;------------------
                motorola_recv_character:
FEEB 02 05 FD    jnz  [io_portf].1,$                  ;-wait for RX startbit
FEEE AD 23       call relative motorola_rs232_delay_half_bit
FEF0 4F          mov  a,00h,slow  ;initially empty data
FEF1 99          stc              ;end-bit (to sense loop end)
                @@rx_lop:
FEF2 25 03       jc   @@skip_1st_lop_cycle   ;skip below "jnz" on FIRST loop cycle (in other loop cycles it is just "blah", unless it's intended as short delay)
FEF4 02 05 00    jnz  [io_portf].1,$+3   ;... this does set CY !
                @@skip_1st_lop_cycle:
FEF7 AD 18       call relative motorola_rs232_delay_one_bit  ;out: CY=same
FEF9 9D          nop                     ;delay
FEFA 46          rcr  a                  ;shift-in CY, shift-out end-bit
FEFB 24 F5       jnc  @@rx_lop
FEFD 03 05 00    jz   [io_portf].1,$+3   ;set cy=stop-bit (0=bad, 1=okay)
FF00 81          ret                    ;out: cy
                ;------------------
                motorola_send_character:
FF01 99          stc   ;end-bit (to sense loop end; and output as stop-bit)
                @@send_lop_data_0:
FF02 9D          nop
FF03 11 05       res  [io_portf].0 ;TX ;output DATA=0 (or STARTBIT=0 on first cycle)
FF05 21 FE       nul  $   ;<-- jump never (dummy/short delay)
                @@send_lop_data_1:
FF07 AD 08       call relative motorola_rs232_delay_one_bit
FF09 46          rcr  a
FF0A 24 F6       jnc  @@send_lop_data_0   ;lop more, with data=0
FF0C 98          clc
FF0D 10 05       set  [io_portf].0 ;TX ;output DATA="1" (or STOPBIT=1 on last cycle)
FF0F 26 F6       jnz  @@send_lop_data_1   ;lop more (unless reached stopbit)
                ;- - - - - - ------
                motorola_rs232_delay_one_bit:                    ;1/1
FF11 AD 00       call relative motorola_rs232_delay_half_bit
                ;- - - - - - ------
                motorola_rs232_delay_half_bit:                   ;1/2
FF13 AD 00       call relative motorola_rs232_delay_quarter_bit
                ;- - - - - - ------
                motorola_rs232_delay_quarter_bit:                ;1/4
FF15 AD 00       call relative motorola_rs232_delay_1div8_bit
                ;- - - - - - ------
                motorola_rs232_delay_1div8_bit:                  ;1/8
FF17 AD 00       call relative motorola_rs232_delay_1div16_bit
                ;- - - - - - ------
                motorola_rs232_delay_1div16_bit:                 ;1/16
FF19 81          ret
                ;------------------
                motorola_raise_rom_addr:
FF1A 3C E2       inc  [motorola_ram_addr_lo]    ;-raise lsb
FF1C 26 0B       jnz  @@done ;keep msb          ;-check if carry-out
FF1E B6 E1       mov  a,[motorola_ram_addr_hi]  ;\
FF20 4C          inc  a                         ;
FF21 A1 50       cmp  a,5000h/100h              ; raise msb
FF23 26 02       jnz  @@no_wrap                 ; evtl. wrap from 4FFFh to FE00h
FF25 A6 FE       mov  a,0FE00h/100h             ;
                @@no_wrap:                      ;
FF27 B7 E1       mov  [motorola_ram_addr_hi],a  ;/
                @@done:
FF29 81          ret
                ;------------------
                motorola_recv_char_with_rts_cts:
FF2A 15 05       res  [io_portf].2        ;RTS
FF2C AD BD       call relative motorola_recv_character
FF2E 24 FE       jnc  $      ;<-- lockup on bad stop-bit
FF30 14 05       set  [io_portf].2        ;RTS
FF32 81          ret
                ;------------------
                motorola_recv_char_with_echo:
FF33 AD B6       call relative motorola_recv_character
FF35 97          mov  x,a
FF36 20 C9       jr   motorola_send_character
                ;------------------
                motorola_dump_from_new_addr:
FF38 B7 E5       mov  [motorola_ram_temp2],a   ;new.addr.msb
FF3A AD 49       call relative motorola_recv_2_digit_hex
FF3C 97          mov  x,a                      ;new.addr.lsb
FF3D B6 E5       mov  a,[motorola_ram_temp2]   ;new.addr.msb
FF3F 25 06       jc   @@dump_whoops   ;--> bad digits --> call motorola_ram_proc (?)
FF41 BF E2       mov  [motorola_ram_addr_lo],x ;addr.lsb        ;\apply NEW addr
FF43 B7 E1       mov  [motorola_ram_addr_hi],a ;addr.msb        ;/
FF45 20 05       jr   dump_from_new_addr
                ;---
                @@dump_whoops:
FF47 BD E0       call motorola_ram_proc   ;uh, why this?
                ;- - - - ----------
                dump_next_byte_lop:   ;dump from NEXT addr ...
FF49 CD FF 1A    call motorola_raise_rom_addr
                dump_from_new_addr:
                ;- - - - ----------
                motorola_swi_vector:     ;for download_from_rom
FF4C AD 21       call relative motorola_dump_from_rom_core  ;dump/send
FF4E AD 35       call relative motorola_recv_2_digit_hex    ;recv reply
FF50 24 E6       jnc  motorola_dump_from_new_addr  ;--> special (reply was "want new addr") (when reply was VALID two-digit hex-value, which is used as new addr.msb)
                 ;reply way NOT a valid two-digit hex-value
                 ;(eg. anything like one-char "!" or two-char "0!" or so)
FF52 A1 07       cmp  a,7h       ;command ?
FF54 27 02       jz   @@dump_end          ;--> fin
FF56 20 F1       jr   dump_next_byte_lop  ;--> lop (reply was "want more")
                ;---
                @@dump_end:
FF58 B6 E1       mov  a,[motorola_ram_addr_hi]  ;\
FF5A B7 FE       mov  [motorola_stacktop-1],a   ; memorize "end-addr" at [FEh]
FF5C B6 E2       mov  a,[motorola_ram_addr_lo]  ; ... that is on stack-top !!
FF5E B7 FF       mov  [motorola_stacktop-0],a   ;/
FF60 80          reti   ;return from SWI, to above [motorola_stacktop]=end_addr!
                ;------------------
                motorola_send_crlf_space:
FF61 A6 0D       mov  a,0Dh
FF63 AD 57       call relative to_motorola_send_character
FF65 A6 0A       mov  a,0Ah
FF67 AD 53       call relative to_motorola_send_character
                ;- - - - ----------
                motorola_send_space:
FF69 A6 20       mov  a,20h
FF6B 20 4F       jr   to_motorola_send_character
                ;------------------
                ;UNUSED!
FF6D 28 0C       jnh  motorola_skip_addr
                ;------------------
                motorola_dump_from_rom_core:
FF6F AD F0       call relative motorola_send_crlf_space
FF71 B6 E1       mov  a,[motorola_ram_addr_hi]              ;addr.msb
FF73 AD 34       call relative motorola_send_2_digit_hex
FF75 B6 E2       mov  a,[motorola_ram_addr_lo]              ;addr.lsb
FF77 AD 30       call relative motorola_send_2_digit_hex
FF79 AD EE       call relative motorola_send_space
                ;- - - - ----------
                motorola_skip_addr:  ;<-- label used only by UNUSED opcode
FF7B 3A E0       dec  [motorola_ram_opcode]  ;modify opcode (make it a READ opcode)
FF7D BD E0       call motorola_ram_proc                     ;data
FF7F 3C E0       inc  [motorola_ram_opcode]  ;undo modify
FF81 AD 26       call relative motorola_send_2_digit_hex
FF83 20 E4       jr   motorola_send_space
                ;------------------
                motorola_recv_2_digit_hex:
FF85 AD 0D       call relative @@recv_nibble
FF87 25 1B       jc   @@error                ;bad nibble
FF89 AD 1A       call relative motorola_shift_4bit
FF8B B7 E4       mov  [motorola_ram_temp1],a ;save msb
FF8D AD 05       call relative @@recv_nibble
FF8F 25 13       jc   @@error                ;bad nibble
FF91 BA E4       or   a,[motorola_ram_temp1] ;merge
FF93 81          ret
                ;---
                @@recv_nibble:
FF94 AD 9D       call relative motorola_recv_char_with_echo
FF96 9F          mov  a,x
FF97 A1 30       cmp  a,30h ;"0"  ;\reject 00h..2Fh
FF99 25 09       jc   @@error     ;/
FF9B A1 41       cmp  a,41h ;"A"
FF9D 25 02       jc   @@non_letter
FF9F A0 07       sub  a,7h     ;adjust letters "A..F" to digits
                @@non_letter:
FFA1 A4 0F       and  a,0Fh    ;strip 0x0h..0xFh to 00h..0Fh
FFA3 98          clc      ;cy=0=okay
                @@error:  ;cy=1=error
FFA4 81          ret
                ;------------------
                motorola_shift_4bit:
FFA5 AE 10       mov  x,10h
FFA7 42          mul  x,a
FFA8 81          ret
                ;------------------
                motorola_send_2_digit_hex:
FFA9 B7 E4       mov  [motorola_ram_temp1],a  ;save lsb
FFAB AD F8       call relative motorola_shift_4bit
FFAD 9F          mov  a,x                     ;msb
FFAE AD 04       call relative @@send_nibble
FFB0 B6 E4       mov  a,[motorola_ram_temp1]  ;restore lsb
FFB2 A4 0F       and  a,0Fh                   ;lsb
                ;- - -
                @@send_nibble:
FFB4 AB 30       add  a,30h
FFB6 A1 39       cmp  a,39h   ;0..9
FFB8 23 02       jbe  @@non_letter
FFBA AB 07       add  a,7h    ;A..F
                @@non_letter:
                ;- - - - ----------
                to_motorola_send_character:
FFBC CC FF 01    jmp  motorola_send_character
                ;------------------
                motorola_tbi_vector:
                motorola_sspi_vector:
                motorola_timer2_vector:
                motorola_timer1_vector:
                motorola_kwi_vector:
                motorola_irq_vector:
FFBF CE 02 3F    mov  x,[motorola_ram_vector]         ;x=[23Fh]
FFC2 EC 40       jmp  motorola_ram_base+x             ;pc=40h+x
                ;------------------
FFC4             db 000h,000h,000h,000h,000h,000h,000h,000h
FFCC             db 000h,000h,000h,000h,000h,000h,000h,000h
FFD4             db 000h,000h,000h,000h,000h,000h
                ;------------------
FFDA             db 0FDh,000h,000h,043h,009h,018h            ;<-- ???
                ;------------------
                ;Vectors for Motorola ROM (Selftest stuff)
FFE0 FF BF       dw motorola_tbi_vector         ;\
FFE2 FF BF       dw motorola_sspi_vector        ;
FFE4 FF BF       dw motorola_timer2_vector      ; jmp 40h+[023Fh]
FFE6 FF BF       dw motorola_timer1_vector      ;
FFE8 FF BF       dw motorola_kwi_vector         ;
FFEA FF BF       dw motorola_irq_vector         ;/
FFEC FF 4C       dw motorola_swi_vector         ;<-- used
FFEE FE 34       dw motorola_reset_entrypoint   ;<-- used
                ;------------------
                ;Vectors for Sony ROM (PSX CDROM stuff)
FFF0 48 1E       dw sony_tbi_vector   ;timebase ;\unused (reti)
FFF2 48 1E       dw sony_sspi_vector  ;spi      ;/
FFF4 48 1F       dw sony_timer2_vector          ;<-- used (for scex)
FFF6 48 1E       dw sony_timer1_vector          ;\
FFF8 48 1E       dw sony_kwi_vector             ; unused (reti)
FFFA 48 1E       dw sony_irq_vector             ;
FFFC 48 1E       dw sony_swi_vector             ;/
FFFE 10 00       dw sony_reset_entrypoint       ;<-- used (reset)
                ;------------------
                .pack_crc16 rom_crc16,0  ;CRC16 for whole 16.5K ROM area
                .errif rom_crc16<>2376h  ;verify checksum for original rom
                ;also checked via: fc /b psx-cd.rom ..\mc68hc05.rom
                ;------------------
                end
                ;------------------
;:              ;:----------------- End Of File
                ;------------------


  Command 50h, Param ""
  Command 51h, Param "Licensed by"
  Command 52h, Param "Sony"
  Command 53h, Param "Computer"
  Command 54h, Param "Entertainment"
  Command 55h, Param "of America"
  Command 56h, Param ""



MC68HC05G6

MC68HC05L16 boot mode see page 32 of 202 (PC6=IRQ1=Vtst, PC7=IRQ2=Vdd)
MC68HC05L16 pinout see page 25 of 202 claims PC7=IRQ1, PC6=IRQ2)
68HC705G4 boot mode see page 36 of 126 (PC7=IRQ1=Vtst, PC6=IRQ2=Vdd)
  Pin 13  /RES   /RESET                <---- apply low-to-high transition
  Pin 16  F-BIAS PB0/TestModeBit0      <---- wire to 3.5V ;\to select
  Pin 17  CG     PB1/TestModeBit1?     <---- wire to 3.5V ; func3_rom_dump
  Pin 28  AL/TE  PB1/TestModeBit1???   <---- wire to 3.5V ;/
  Pin 30  XINT   PC6/IRQ2 Vdd  (1xVdd) <---- wire to 3.5V ;\to enter
  Pin 31  SCOR   PC7/IRQ1 Vtst (2xVdd) <---- wire to 7V   ;/selftest rom
  Pin 50? NC     PF0  ---> TX output (10bytes: 0Dh,0Ah,"AAAA DD ")
  Pin 51? NC     PF1  <--- RX input  (1byte: "!" to request next 10 bytes)
  Pin 52  NC     PF2  ---> RTS output or so (not needed)
  Pin 1   NC     PF3  ---> DTR output or so (not needed)

IRQ1 and IRQ2 are checked on raising /RESET (probably only on /RESET, not
on power-on reset).
The datasheets contain conflicting info if IRQ1 is PC6 or PC7 (so maybe
IRQ1 and IRQ2 are swapped).
If IRQ1 and IRQ2 are correct upon /RESET, then the chip latches some flag
that tells it to use the selftest exception vectors.

PB0 and PB1 need to be both high for the ROM-dumping function. Concerning
the pin-arrangement, PB1 should be Pin17, but the PSX service manual claims
PB1 is Pin28 - so better set both pins to high.

TX/RX are probably Pin 50,51 (or somewhere else at Pin 50,51,52,1).
Format should be 8N1 (1 startbit, 8 databits, no parity, 1 stopbit).
Baudrate is unknown.

Right after raising /RESET, the chip should send first 10 characters
(0Dh,0Ah,"AAAA DD "), after that 10 bytes you'll need to send some dummy
character (00h..06h or 08h..2Fh) (for example an ASCII "!" exclamation
mark should work). Then it'll send next 10 characters, and so on.
