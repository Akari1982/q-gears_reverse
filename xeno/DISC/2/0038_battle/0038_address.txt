80058ba4 []       we get id of random formation from here.

80064f6c array of formations (0x20 size).
// worldmap
28002C0000 00000000FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF00FFFFFFFFFFFFFF
28002C0000 0000000101FFFFFFFFFFFF 0000FFFFFFFFFFFF0000FFFFFFFFFFFF
01002C0000 0000000101FFFFFFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
31002C0000 00000000FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF00FFFFFFFFFFFFFF
28002C0000 0000000101FFFFFFFFFFFF 0000FFFFFFFFFFFF0000FFFFFFFFFFFF
01002C0000 0000000101FFFFFFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
01002C0000 00000000010101FFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
01002C0000 00000000010101FFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
01002C0000 00000000010101FFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
2C002C0000 00000000000000FFFFFFFF 00000000FFFFFFFF00000000FFFFFFFF
2C002C0000 00000082FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF00FFFFFFFFFFFFFF
2C002C0000 0000000000000082FFFFFF 0000000000FFFFFF0000000000FFFFFF
2C002C0000 0000008181FFFFFFFFFFFF 0000FFFFFFFFFFFF0102FFFFFFFFFFFF
48002C0000 00000080FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF00FFFFFFFFFFFFFF
49002C0000 0000008383FFFFFFFFFFFF 0000FFFFFFFFFFFF0102FFFFFFFFFFFF
01002C0000 00000001FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF00FFFFFFFFFFFFFF
// way to citan
0140030000 000000 01FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF // | 1 tsuchinoto player
0140030000 000000 0101FFFFFFFFFFFF 0000FFFFFFFFFFFF 0000FFFFFFFFFFFF // | 2 tsuchinoto player
0140030000 000000 0101FFFFFFFFFFFF 0000FFFFFFFFFFFF 0101FFFFFFFFFFFF // 2 tsuchinoto | player
0140030001 010100 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 01FFFFFFFFFFFFFF // sai player |
0140030001 010100 0000FFFFFFFFFFFF 0000FFFFFFFFFFFF 0101FFFFFFFFFFFF // 2 sai player |
0140030001 010100 000101FFFFFFFFFF 000000FFFFFFFFFF 018080FFFFFFFFFF // sai player | 2 tsuchinoto
0140030001 010100 000101FFFFFFFFFF 000000FFFFFFFFFF 008080FFFFFFFFFF // player | 2 tsuchinoto sai
0140030000 000000 00010101FFFFFFFF 00000000FFFFFFFF 01000000FFFFFFFF // sai | 3 tsuchinoto player
0340030001 010100 03FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 01FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF
0140030000 000000 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF 00FFFFFFFFFFFFFF

8006f06c battle formation struct from 80064f6c.

800c1788 [][]     unit id -> bit mask conversion data.

800c2c68 array of something one byte size.

800c3504 [][][][] pointer to battle text block.
800c3508 [][][][] pointer to allocated memory for texts STRIPCD1\19\3098.

800c3548 []       init with 0xff.
800c3549 []       init with 0xff.

800c3574 [][][][] store here pointer to sound main struct from 80061bb8.

800c35ac []        some byte checked dirung action_text_output.

800c35c4 [][][][] pointer to allocated 0xa5d4 size.

800c35cc [][][][] pointer to allocated 0x2f8 size.
    + 2da []       current 800c3708 id of attack data to calculate.

800c35d4 some unit data. (0x1c size).
800c35d4 []
800c35d7 []        we check this == 0 during party accessable check.

800c3708 calculated attack data (0x48 size).
    +  0          array of inflicted damage for each unit (0xa items, 0x2 size). Init with 0.
    + 16 [][]     target mask.
    + 18          array of some unit data (0xa items, 0x1 size). Init with 0xff.
    + 23 [][]     attacker id.
    + 24          array of some unit data (0xa items, 0x2 size). Init with 0x0000.
    + 3a []       store byte set during skip turn or jump to enemy here 0x00.
    + 3c          array of some unit data (0xa items, 0x1 size). Init with 0x00.
    + 47 []       writed 0xff here for all units during script cycle start. Write 0xf7 here during skip turn. Write 0xfd here during jump to unit.

800c400c array of some data (0x9 items, 0x6 size)
    +0 [][]     reset with 0xffff. Init 1st item with 0x00.
    +2 [][]     reset with 0xffff. Init 1st item with 0x00.
    +4 []       init 1st item with 0x00.

800c4140 address for draw enviroment data buffer 1
800c419c address for display enviroment data buffer 1
800c4140 + 4070 address for draw enviroment data buffer 2
800c419c + 4070 address for display enviroment data buffer 2

800cc408 unit data array (0x170 size)
    + 4c [][]     unit current hp.
    + 4e [][]     unit max hp.
    + 5a []       unit speed.
    + 5c []       unit ether def.
    + 7c [][]     some flags
    + 84 [][]     some flags.
    +14c          experience.

800d2448 [][][][] pointer to allocated 0x10c size.
    + 96 []       set to 1 after load battle dialog STRIPCD1\19\3098
    + ae []       set to 1 after load battle dialog STRIPCD1\19\3096 or 3097

800d24ec []       array of unit exists in battle (1-3 party, 3-A enemy). (0 - no 1 - yes)

800d257c attack queue array. (size 0x08 items 0x20).
    +0 []       action id.
    +4 []       in jump to unit we check if this != 1.
    +6 [][]     target mask.

800d29c1 array of something unit related. (size 0x08).
    +0 []       ??? if 0 then we load STRIPCD1\19\3096 dialogs, 3097 otherwise.

800d2b20               array of struct with script pointers for enemy unit (index = unit_is - 3) (size 0x40).
    +00 [][][][] pointer to script.
    +10          variable store array (0x04 0x04).
    +20          variable store array (0x08 0x02).
    +30          variable store array (0x10 0x01).

800d2d8c []       init with 0.

800d2d9c [][][][] pointer to allocated memory for texts STRIPCD1\19\3096 or 3097.

800d2e40               some data (size 0x60). read in text output finction.
800d2e40 + 00 [][][][] pointer to some data related to string.

8010c48c + 20 [][][][] pointer to some data (8010C540).
8010c48c + 2c [][]     store scale data here (*256).
8010c48c + 34 [][]
8010c48c + 3c [][][][] flags.
                        1: 2: 3:
                        4: added during scale set.
                        5: 6: 7: 8: 9: A: B: C: D: E: F: 10: 11: 12: 13: 14: 15: 16: 17: 18: 19: 1A: 1B: 1C: 1D: 1E:
                       1F: checked &3 during scale set.
                       20: checked &3 during scale set.
8010c48c + 60 [][][][] some pointer.
8010c48c + 64 [][][][] pointer to script.
8010c48c + 9e [][]     check to == 0 during opcode parsing.
8010c48c + ac [][][][]

8010c540 + 06 [][]     store scale data here (*256).
8010c540 + 08 [][]     store scale data here (*256).
8010c540 + 0a [][]     store scale data here (*256).
