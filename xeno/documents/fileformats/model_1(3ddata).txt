model header (0x10 size)
+ 0 [][][][] number of parts
+ 8 [][][][] store some address here


parts header
+00 [][]     init flags
             0x0001 - memory +18 (lighting) allocated.
             0x0002 - normals for lighting are calculated and stored.
             0x0010 - if flag is set we create MIMe normals.
+02 [][]     number of vertexes.
+04 [][]     number of polygons.
+06 [][]     number of polygons blocks.
+08 [][][][] offset to vertexes block.
+0c [][][][] offset to normals block.
+10 [][][][] offset to polygons block.
+14 [][][][] offset to texture coords block.
+18 [][][][] we store here pointer to allocated memory for normals for polygons lighting with +30 size if +00 & 1 not set.
+1c [][][][] MIMe offset (if exist).
+20 [][]     x1.
+22 [][]     y1.
+24 [][]     z1.
+28 [][]     x2.
+2a [][]     y2.
+2—Å [][]     z2.
+30 [][][][] memory size for lighting.
+34 [][][][] size of packets for this part.



polygons data (+10 sub file format)
format is header, data, header, data ...
header
+0 []       polygons type id.
+1 []
+2 [][]     number of polygons.
data



UV data (+14 sub file format)(size 0x4)
all not textured poly
+0 [][][]   BGR.
+3 []       packet control byte.
all textured poly
+0 [][]     data.
+3 []       type of data (0xc4 - texture page settings, 0xc8 - CLUT settings).
or next for triangle
+0 [][]     texture UV for vertex 3.
+3 []       packet control byte.
+4 [][]     texture UV for vertex 1.
+6 [][]     texture UV for vertex 2.
or next for quad
+3 []       packet control byte.
+4 [][]     texture UV for vertex 1.
+6 [][]     texture UV for vertex 2.
+8 [][]     texture UV for vertex 3.
+a [][]     texture UV for vertex 4.



normals for polygons (+18 sub file format) calculated during loading
monochrome triangle (0x00)
+00 [][][][] texture data +14 (BRG and packet control byte).
+04 [][]     normal x.
+06 [][]     normal y.
+08 [][]     normal z.
+0a [][]     filler.
gourad triangle (0x02)
+00 [][][][] texture data +14 (BRG and packet control byte).
all textured poly
+00 [][]     normal x.
+02 [][]     normal y.
+04 [][]     normal z.
+06 [][]     filler.



MIMe (+1c sub file format)
+00 [][][][] number of records in subfile
MIM item +4
+00 [][][][] number of modifiers to apply.
+04 [][][][] some offset to vertex MIMe data.
+08 [][][][] some offset to normals MIMe data.
    +0 [][] x modifier.
    +2 [][] y modifier.
    +4 [][] z modifier.
    +6 [][] vertex id.


MIMe Work
size number of MIM * 0x20 + 0x14
+ 0 [][][][] pointer to part header.
+ 4 [][][][] offset to origin vertex block.
+ 8 [][][][] offset to normals block.
+ c [][][][] pointer to +1c data.
+10 [][][][] pointer to +14 in this alloc.
+14 start of MIMe records
    + 0 [][][][] callback.
    + 4 [][][][] init with 0.
    + 8 [][][][] init with 0.
    + c [][][][] init with 0.