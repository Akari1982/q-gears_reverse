var = [
    0x093800e0, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x000fffff,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
]

unknown = [
    0x00ff, 0x9500, 0x00fb, 0x00ff, 0x0000, 0xff94, 0xff00, 0x0000, 0xf100, 0x00fd, 0x04ff, 0x0000, 0xfb95, 0x0000, 0xbc00,
]



Actor_0x00:on_start:
0x001d    -- 0xBC_ActorNoModelInit()
0x001e    -- 0x2A()
0x001f    -- 0xA0()
0x0026    opF1_FadeSetUp( steps=2, r=36, g=38, b=20, semi_tr=1 )
0x0031    -- 0x86_ProgressNotEqualJumpTo( value=241, jump=0x59 )
0x0036    mem[0x2d0] = (s)mem[0x40] -- op35
0x003c    mem[0x2d2] = (s)mem[0x42] -- op35
0x0042    -- 0x5A()
0x0043    -- 0xFE19( char_id=0xff )
0x0046    -- 0xFE19( char_id=0xfe )
0x0049    -- 0xFE18()
0x004e    -- 0xFE18()
0x0053    -- 0x75( ???=35 )
0x0056    op01_JumpTo( address=0xe3 )
0x0059    -- 0x86_ProgressNotEqualJumpTo( value=240, jump=0x86 )
0x005e    mem[0x2d0] = (s)mem[0x40] -- op35
0x0064    mem[0x2d2] = (s)mem[0x42] -- op35
0x006a    -- 0x5A()
0x006b    -- 0xFE19( char_id=0xff )
0x006e    -- 0xFE19( char_id=0xfe )
0x0071    -- 0xFE19( char_id=0xfd )
0x0074    -- 0xFE18()
0x0079    -- 0xFE18()
0x007e    -- 0xFE18()
0x0083    op01_JumpTo( address=0xe3 )
0x0086    -- 0x86_ProgressNotEqualJumpTo( value=209, jump=0x8e )
0x008b    op01_JumpTo( address=0x96 )
0x008e    op02_JumpToConditional( val1=(s)mem[0x2], val2=3, condition="val1 == val2", address_if_false=0xb9 )
0x0096    mem[0x2d0] = (s)mem[0x40] -- op35
0x009c    mem[0x2d2] = (s)mem[0x42] -- op35
0x00a2    -- 0x5A()
0x00a3    -- 0xFE19( char_id=0xff )
0x00a6    -- 0xFE19( char_id=0xfe )
0x00a9    -- 0xFE18()
0x00ae    -- 0xFE18()
0x00b3    -- 0x75( ???=69 )
0x00b6    op01_JumpTo( address=0xe3 )
0x00b9    -- 0x85()
0x00be    -- 0x84_ProgressLessEqualJumpTo( value=187, jump=0xe3 )
0x00c3    mem[0x2d0] = (s)mem[0x40] -- op35
0x00c9    mem[0x2d2] = (s)mem[0x42] -- op35
0x00cf    -- 0x5A()
0x00d0    -- 0xFE19( char_id=0xff )
0x00d3    -- 0xFE19( char_id=0xfe )
0x00d6    -- 0xFE18()
0x00db    -- 0xFE18()
0x00e0    -- 0x75( ???=67 )
0x00e3    op00_Return()

Actor_0x00:on_update:
0x00e4    -- 0x86_ProgressNotEqualJumpTo( value=241, jump=0x14e )
0x00e9    -- 0xB5() -- camera set direction
0x00ea    op00_Return()
0x00eb    -- 0x80()
0x00f0    -- 0xB5() -- camera set direction
0x00f1    op00_Return()
0x00f2    -- 0x80()
0x00f7    -- 0xFE23()
0x010c    op25_ActorDisable( actor_id=Actor_0x01 )
0x010e    -- 0x5A()
0x010f    op09_CallActorEventEndSync( actor_id=Actor_0x13, event=event_0x0b, priority=0x03 )
0x0112    op26_Wait( time=10 )
0x0115    op09_CallActorEventEndSync( actor_id=Actor_0x0f, event=event_0x09, priority=0x03 )
0x0118    op26_Wait( time=10 )
0x011b    op09_CallActorEventEndSync( actor_id=Actor_0x15, event=event_0x08, priority=0x03 )
0x011e    op26_Wait( time=10 )
0x0121    op09_CallActorEventEndSync( actor_id=Actor_0x13, event=event_0x0c, priority=0x03 )
0x0124    op09_CallActorEventEndSync( actor_id=Actor_0x15, event=event_0x09, priority=0x03 )
0x0127    op26_Wait( time=10 )
0x012a    op09_CallActorEventEndSync( actor_id=Actor_0x13, event=event_0x0d, priority=0x03 )
0x012d    op09_CallActorEventEndSync( actor_id=Actor_0x15, event=event_0x0a, priority=0x03 )
0x0130    op09_CallActorEventEndSync( actor_id=Actor_0x13, event=event_0x0e, priority=0x03 )
0x0133    op09_CallActorEventEndSync( actor_id=Actor_0x15, event=event_0x0b, priority=0x03 )
0x0136    op09_CallActorEventEndSync( actor_id=Actor_0x13, event=event_0x0f, priority=0x03 )
0x0139    op26_Wait( time=40 )
0x013c    -- 0xFE0E_SoundSetVolume( volume=0, steps=360 )
0x0142    opB4_FadeOut()
0x0145    op26_Wait( time=120 )
0x0148    -- 0x98_MapLoad( field_id=460, value=0 )
0x014d    -- 0x5B()
0x014e    -- 0x86_ProgressNotEqualJumpTo( value=240, jump=0x18e )
0x0153    -- 0xB5() -- camera set direction
0x0154    op00_Return()
0x0155    -- 0x80()
0x015a    -- MISSING OPCODE 0xFEb5
