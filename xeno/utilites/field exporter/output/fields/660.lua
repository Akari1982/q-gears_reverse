var = [
    0x093800e0, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x000007ff, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
]

unknown = [
    0x00ff, 0x0000, 0x0000, 0xffff, 0x0000, 0x0000, 0xff00, 0x00ff, 0x0000, 0x0000, 0xffff,
]



Actor_0x00:on_start:
0x0016    -- 0xBC_ActorNoModelInit()
0x0017    -- 0xFE54()
0x0019    op02_JumpToConditional( val1=(s)mem[0x192], val2=0, condition="val1 == val2", address_if_false=0x27 )
0x0021    mem[0x192] = 1876 -- op35
0x0027    -- 0xFE1E()
0x002a    op02_JumpToConditional( val1=(s)mem[0x2], val2=0, condition="val1 == val2", address_if_false=0x77 )
0x0032    mem[0x400] = (s)mem[0x192] -- op35
0x0038    mem[0x400] &= 15 -- op3e
0x003e    mem[0x402] = (s)mem[0x192] -- op35
0x0044    opDF_VariableDivide( address=0x402, value=(vf40)0x0010, flag=0x40 )
0x004a    mem[0x402] &= 15 -- op3e
0x0050    mem[0x404] = (s)mem[0x192] -- op35
0x0056    opDF_VariableDivide( address=0x404, value=(vf40)0x0100, flag=0x40 )
0x005c    -- 0xFE19( char_id=0xff )
0x005f    -- 0xFE19( char_id=0xfe )
0x0062    -- 0xFE19( char_id=0xfd )
0x0065    -- 0xFEC6( char_id=(s)mem[0x400] )
0x0069    -- 0xFE1A() sync load for 0xFEC6()
0x006b    -- 0xFEC6( char_id=(s)mem[0x402] )
0x006f    -- 0xFE1A() sync load for 0xFEC6()
0x0071    -- 0xFEC6( char_id=(s)mem[0x404] )
0x0075    -- 0xFE1A() sync load for 0xFEC6()
0x0077    -- 0xFE41()
0x007b    -- 0xFE41()
0x007f    -- 0xFE41()
0x0083    op00_Return()

Actor_0x00:on_update:

Actor_0x00:on_talk:

Actor_0x00:on_push:
0x0084    op00_Return()

Actor_0x01:on_start:
0x0085    -- 0x5C()
0x0088    op00_Return()

Actor_0x01:on_update:
0x0089    opC6_ExpandRun() -- exp0x20
0x008a    -- 0xFEC1()
0x0092    op01_JumpTo( address=0x95 )
0x0095    -- 0xA6()
0x0098    op01_JumpTo( address=0x137 )
0x009b    op01_JumpTo( address=0x137 )
0x009e    op01_JumpTo( address=0x137 )
0x00a1    op01_JumpTo( address=0x134 )
0x00a4    op01_JumpTo( address=0x138 )
0x00a7    op01_JumpTo( address=0x359 )
0x00aa    op01_JumpTo( address=0x57a )
0x00ad    op01_JumpTo( address=0x5e9 )
0x00b0    op01_JumpTo( address=0x80a )
0x00b3    op01_JumpTo( address=0xa2b )
0x00b6    op01_JumpTo( address=0xa9a )
0x00b9    op01_JumpTo( address=0xcbb )
0x00bc    op01_JumpTo( address=0xedc )
0x00bf    op01_JumpTo( address=0xf4b )
0x00c2    op01_JumpTo( address=0x116c )
0x00c5    op01_JumpTo( address=0x138d )
0x00c8    op01_JumpTo( address=0x13fc )
0x00cb    op01_JumpTo( address=0x161d )
0x00ce    op01_JumpTo( address=0x17da )
0x00d1    op01_JumpTo( address=0x1849 )
0x00d4    op01_JumpTo( address=0x1a6a )
0x00d7    op01_JumpTo( address=0x1c07 )
0x00da    op01_JumpTo( address=0x1c76 )
0x00dd    op01_JumpTo( address=0x1e97 )
0x00e0    op01_JumpTo( address=0x1fb0 )
0x00e3    op01_JumpTo( address=0x201c )
0x00e6    op01_JumpTo( address=0x208b )
0x00e9    op01_JumpTo( address=0x20fa )
0x00ec    op01_JumpTo( address=0x2169 )
0x00ef    op01_JumpTo( address=0x238a )
0x00f2    op01_JumpTo( address=0x25ab )
0x00f5    op01_JumpTo( address=0x261a )
0x00f8    op01_JumpTo( address=0x283b )
0x00fb    op01_JumpTo( address=0x29c4 )
0x00fe    op01_JumpTo( address=0x2a33 )
0x0101    op01_JumpTo( address=0x2c54 )
0x0104    op01_JumpTo( address=0x2e75 )
0x0107    op01_JumpTo( address=0x2ee4 )
0x010a    op01_JumpTo( address=0x3105 )
0x010d    op01_JumpTo( address=0x3326 )
0x0110    op01_JumpTo( address=0x3395 )
0x0113    op01_JumpTo( address=0x35b6 )
0x0116    op01_JumpTo( address=0x37d7 )
0x0119    op01_JumpTo( address=0x3846 )
0x011c    op01_JumpTo( address=0x39e3 )
0x011f    op01_JumpTo( address=0x3b80 )
0x0122    op01_JumpTo( address=0x3bef )
0x0125    op01_JumpTo( address=0x3e10 )
0x0128    op01_JumpTo( address=0x4031 )
0x012b    op01_JumpTo( address=0x40a0 )
0x012e    op01_JumpTo( address=0x416d )
0x0131    op01_JumpTo( address=0x423a )
0x0134    opFE97_ParticleReset( all=0x0 )
0x0137    op00_Return()
0x0138    opC6_ExpandRun() -- exp0x20
0x0139    opFE97_ParticleReset( all=0x0 )
0x013c    -- 0xFEC2()
0x0141    -- 0x80()
0x0146    opFE90_ParticleInitBase( particle_id=0, number_of_sprites=3, wait=0, ttl=5 )
0x0150    opFE91_ParticlePos( x=(vf80)0x0000, y=(vf40)0xffa6, z=(vf20)0x000a, speed_x=(vf10)0x0000, speed_y=(vf08)0xffa6, speed_z=(vf04)0x0014, flag=(flag)0xfc )
0x015f    opFE92_ParticleSpeed( speed=(vf80)0x3a98, acc_x=(vf40)0x0000, acc_y=(vf20)0x0000, acc_z=(vf10)0x0000, rand_start=(vf08)0x0000, rand_speed=(vf04)0x0000, flag=(flag)0xfc )
0x016e    opFE93_ParticleWaitTtl( s_wait=1, var2=3, sprite_id=0, var4=1, var5=2 )
0x017a    opFE94_ParticleTranslation( trans_x=(vf80)0x02bc, trans_y=(vf40)0x02bc, trans_add_x=(vf20)0xfff6, trans_add_y=(vf10)0xfff6, flag=(flag)0xf0 )
0x0185    opFE95_ParticleColour( r=(vf80)0x0050, g=(vf40)0x0064, b=(vf20)0x005a, r_add=(vf10)0xfff2, g_add=(vf10)0xfff7, b_add=(vf10)0xfff2, flag=(flag)0xfc )
0x0194    opFEA5_ParticleRenderSettings( use_speed=1, settings=2, rot_z=0 )
0x019c    opFEBD_ParticleSpawnSettings( settings=0 )
0x01a4    -- MISSING OPCODE 0xFEc8
