var = [
    0x093800e0, 0x00000000, 0x00000000, 0x0000007f,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
]

unknown = [
    0x54ff, 0xedff, 0x0206, 0xffff, 0xffb8, 0xfa5c, 0xff01, 0x27ff, 0xa300, 0x01fc, 0xffff,
]



Actor_0x00:on_start:
0x0016    -- 0xFE1E()
0x0019    -- 0xBC_ActorNoModelInit()
0x001a    -- 0x2A()
0x001b    -- 0xE5()
0x002c    -- 0xA0()
0x0033    mem[0x402] = 0 -- op35
0x0039    mem[0x404] = -480 -- op35
0x003f    mem[0x406] = -450 -- op35
0x0045    mem[0x408] = 560 -- op35
0x004b    mem[0x40a] = 440 -- op35
0x0051    mem[0x40c] = (s)mem[0x404] -- op35
0x0057    mem[0x40c] += (s)mem[0x406] -- op38
0x005d    opDF_VariableDivide( address=0x40c, value=(vf40)0x0002, flag=0x40 )
0x0063    mem[0x40e] = (s)mem[0x408] -- op35
0x0069    mem[0x40e] += (s)mem[0x40a] -- op38
0x006f    opDF_VariableDivide( address=0x40e, value=(vf40)0x0002, flag=0x40 )
0x0075    -- 0x2D()
0x007d    -- 0x2D()
0x0085    mem[0x416] -= 559 -- op39
0x008b    mem[0x414] += 837 -- op38
0x0091    -- 0xF7()
0x0096    mem[0x49a] = 134 -- op35
0x009c    mem[0x49c] = -861 -- op35
0x00a2    mem[0x49e] = 1 -- op35
0x00a8    mem[0x498] = 1 -- op35
0x00ae    mem[0x54] = 2 -- op35
0x00b4    op00_Return()

Actor_0x00:on_update:
0x00b5    op02_JumpToConditional( val1=(s)mem[0x420], val2=0, condition="val1 == val2", address_if_false=0xcb )
0x00bd    op02_JumpToConditional( val1=(s)mem[0x2], val2=1, condition="val1 == val2", address_if_false=0xc8 )
0x00c5    op07_CallActorEvent( actor_id=Actor_0x0b, event=event_0x05, priority=0x03 )
0x00c8    mem[0x420] = true -- op36
0x00cb    op02_JumpToConditional( val1=(s)mem[0x410], val2=1, condition="val1 >= val2", address_if_false=0x106 )
0x00d3    op02_JumpToConditional( val1=(s)mem[0x410], val2=100, condition="val1 == val2", address_if_false=0xe1 )
0x00db    op09_CallActorEventEndSync( actor_id=Actor_0x0d, event=event_0x05, priority=0x02 )
0x00de    op26_Wait( time=10 )
0x00e1    op02_JumpToConditional( val1=(s)mem[0x410], val2=200, condition="val1 == val2", address_if_false=0xef )
0x00e9    op09_CallActorEventEndSync( actor_id=Actor_0x0d, event=event_0x06, priority=0x02 )
0x00ec    op26_Wait( time=10 )
0x00ef    op02_JumpToConditional( val1=(s)mem[0x410], val2=2, condition="val1 == val2", address_if_false=0x105 )
0x00f7    op09_CallActorEventEndSync( actor_id=Actor_0x0d, event=event_0x04, priority=0x02 )
0x00fa    op02_JumpToConditional( val1=(s)mem[0x410], val2=2, condition="val1 == val2", address_if_false=0x105 )
0x0102    op01_JumpTo( address=0xfa )
0x0105    -- 0x5A()
0x0106    op00_Return()

Actor_0x00:on_talk:

Actor_0x00:on_push:
0x0107    -- 0x75( ???=18 )
0x010a    mem[0x496] = false -- op37
0x010d    op00_Return()

Actor_0x01:on_start:
0x010e    -- 0x5C()
0x0111    op00_Return()

Actor_0x01:on_update:
0x0112    opC6_ExpandRun() -- exp0x20
0x0113    -- 0xFEC1()
0x011b    op01_JumpTo( address=0x11e )
0x011e    -- 0xA6()
0x0121    op01_JumpTo( address=0x1c0 )
0x0124    op01_JumpTo( address=0x1c0 )
0x0127    op01_JumpTo( address=0x1c0 )
0x012a    op01_JumpTo( address=0x1bd )
0x012d    op01_JumpTo( address=0x1c1 )
0x0130    op01_JumpTo( address=0x3e2 )
0x0133    op01_JumpTo( address=0x603 )
0x0136    op01_JumpTo( address=0x672 )
0x0139    op01_JumpTo( address=0x893 )
0x013c    op01_JumpTo( address=0xab4 )
0x013f    op01_JumpTo( address=0xb23 )
0x0142    op01_JumpTo( address=0xd44 )
0x0145    op01_JumpTo( address=0xf65 )
0x0148    op01_JumpTo( address=0xfd4 )
0x014b    op01_JumpTo( address=0x11f5 )
0x014e    op01_JumpTo( address=0x1416 )
0x0151    op01_JumpTo( address=0x1485 )
0x0154    op01_JumpTo( address=0x16a6 )
0x0157    op01_JumpTo( address=0x1863 )
0x015a    op01_JumpTo( address=0x18d2 )
0x015d    op01_JumpTo( address=0x1af3 )
0x0160    op01_JumpTo( address=0x1c90 )
0x0163    op01_JumpTo( address=0x1cff )
0x0166    op01_JumpTo( address=0x1f20 )
0x0169    op01_JumpTo( address=0x2039 )
0x016c    op01_JumpTo( address=0x20a5 )
0x016f    op01_JumpTo( address=0x2114 )
0x0172    op01_JumpTo( address=0x2183 )
0x0175    op01_JumpTo( address=0x21f2 )
0x0178    op01_JumpTo( address=0x2413 )
0x017b    op01_JumpTo( address=0x2634 )
0x017e    op01_JumpTo( address=0x26a3 )
0x0181    op01_JumpTo( address=0x28c4 )
0x0184    op01_JumpTo( address=0x2a4d )
0x0187    op01_JumpTo( address=0x2abc )
0x018a    op01_JumpTo( address=0x2cdd )
0x018d    op01_JumpTo( address=0x2efe )
0x0190    op01_JumpTo( address=0x2f6d )
0x0193    op01_JumpTo( address=0x318e )
0x0196    op01_JumpTo( address=0x33af )
0x0199    op01_JumpTo( address=0x341e )
0x019c    op01_JumpTo( address=0x363f )
0x019f    op01_JumpTo( address=0x3860 )
0x01a2    op01_JumpTo( address=0x38cf )
0x01a5    op01_JumpTo( address=0x3a6c )
0x01a8    op01_JumpTo( address=0x3c09 )
0x01ab    op01_JumpTo( address=0x3c78 )
0x01ae    op01_JumpTo( address=0x3e99 )
0x01b1    op01_JumpTo( address=0x40ba )
0x01b4    op01_JumpTo( address=0x4129 )
0x01b7    op01_JumpTo( address=0x41f6 )
0x01ba    op01_JumpTo( address=0x42c3 )
0x01bd    opFE97_ParticleReset( all=0x0 )
0x01c0    op00_Return()
0x01c1    opC6_ExpandRun() -- exp0x20
0x01c2    opFE97_ParticleReset( all=0x0 )
0x01c5    -- 0xFEC2()
0x01ca    -- 0x80()
0x01cf    opFE90_ParticleInitBase( particle_id=0, number_of_sprites=3, wait=0, ttl=5 )
0x01d9    opFE91_ParticlePos( x=(vf80)0x0000, y=(vf40)0xffa6, z=(vf20)0x000a, speed_x=(vf10)0x0000, speed_y=(vf08)0xffa6, speed_z=(vf04)0x0014, flag=(flag)0xfc )
0x01e8    opFE92_ParticleSpeed( speed=(vf80)0x3a98, acc_x=(vf40)0x0000, acc_y=(vf20)0x0000, acc_z=(vf10)0x0000, rand_start=(vf08)0x0000, rand_speed=(vf04)0x0000, flag=(flag)0xfc )
0x01f7    opFE93_ParticleWaitTtl( s_wait=1, var2=3, sprite_id=0, var4=1, var5=2 )
0x0203    opFE94_ParticleTranslation( trans_x=(vf80)0x02bc, trans_y=(vf40)0x02bc, trans_add_x=(vf20)0xfff6, trans_add_y=(vf10)0xfff6, flag=(flag)0xf0 )
0x020e    opFE95_ParticleColour( r=(vf80)0x0050, g=(vf40)0x0064, b=(vf20)0x005a, r_add=(vf10)0xfff2, g_add=(vf10)0xfff7, b_add=(vf10)0xfff2, flag=(flag)0xfc )
0x021d    opFEA5_ParticleRenderSettings( use_speed=1, settings=2, rot_z=0 )
0x0225    opFEBD_ParticleSpawnSettings( settings=0 )
0x022d    -- MISSING OPCODE 0xFEc8
