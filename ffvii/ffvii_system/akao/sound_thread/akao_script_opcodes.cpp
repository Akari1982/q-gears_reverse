////////////////////////////////
// AKAO_opcode_a1
A3 = A0; // pointer to channel struct 0x108
V0 = w[A3 + 0];
T0 = bu[V0 + 0];
[A3 + 0] = w(V0 + 1);

A0 = hu[A3 + 24];

if (w[80062f04] != 0)
{
    A0 = A0 - 18;
}

if (w[A3 + 38] & 00000100)
{
    [A1 + 24] = w(w[A1 + 24] & (0 NOR (1 << A0)))
    [A3 + 38] = w(w[A3 + 38] & fffffeff)
}

if (hu[A3 + 54] != 0 || (A2 & w[A1 + c] & w[80099fcc]) == 0)
{
    [A3 + e0] = w(w[A3 + e0] | 00000010);
    [A3 + 30] = w((w[A3 + 30] * w[80075f28 + T0 * 40 + 10]) / w[80075f28 + hu[A3 + 58] * 40 + 10]);
}

// if loaded adsr release rate, load rest
// note from G
if (w[A3 + 38] & 00000200)
{
    // set instrument id
    [A3 + 58] = h(T0);

    // init pitch attack and other values from instrument data
    [A3 + e4] = w(w[80075f28 + T0 * 40 + 0]);
    [A3 + e8] = w(w[80075f28 + T0 * 40 + 4]);
    [A3 + fa] = h(bu[80075f28 + T0 * 40 + 8]);
    [A3 + fc] = h(bu[80075f28 + T0 * 40 + 9]);
    [A3 + fe] = h(bu[80075f28 + T0 * 40 + a]);
    [A3 + 100] = h(bu[80075f28 + T0 * 40 + b]);
    [A3 + ec] = h(bu[80075f28 + T0 * 40 + d]);
    [A3 + f0] = h(bu[80075f28 + T0 * 40 + e]);

    // set update this values to spu
    [A3 + e0] = w(w[A3 + e0] | 0001bb80);
}
// init all data
else
{
    A0 = A3;
    A1 = T0;
    func31820;
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a2
V1 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

V1 = bu[V1];
[A0 + c4] = h(0);
[A0 + 56] = h(V1 << 8 | V1);
[A0 + c2] = h(V1);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a3
V1 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 2c] = w(bu[V1 + 0]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a5
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + 66] = h(bu[V0]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a6
[A0 + 66] = h((hu[A0 + 66] + 1) & f);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a7
[A0 + 66] = h((hu[A0 + 66] - 1) & f);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a8
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 5c] = h(0);
[A0 + 44] = w(bu[V1 + 0] << 17);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_a9
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 2);

[A0 + 5c] = h(bu[V0 + 0]);

V0 = bu[V0 + 0];
if (V0 == 0)
{
    V0 = 100;
}
[A0 + 5c] = h(V0);

[A0 + 44] = w(w[A0 + 44] & ffff0000);
[A0 + 48] = w(((b[V1 + 1] << 17) - w[A0 + 44]) / hu[A0 + 5c]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_aa
V0 = w[A0 + 0];
[A0 + 0] = w(V0 + 1);

[A0 + e0] = w(w[A0 + e0] | 00000003);
[A0 + 60] = h(bu[V0] << 8);
[A0 + 62] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_b4
[A0 + 38] = w(w[A0 + 38] & 1);
V1 = w[A0];
[A0] = w(V1 + 3);

if (hu[A0 + 54] != 0)
{
    [A0 + 72] = h(0);

    V0 = bu[V1 + 0];
    if (V0 != 0)
    {
        [A0 + 7e] = h(V0 << 8);
    }
}
else
{
    [A0 + 72] = h(bu[V1 + 0]);
}

V0 = bu[V1 + 1];
if (V0 == 0)
{
    V0 = 100;
}
[A0 + 76] = h(V0);

[A0 + 7a] = h(bu[V1 + 2]);

if ((hu[A0 + 7e] & 8000) == 0)
{
    V0 = ((hu[A0 + 30] << 4) - hu[A0 + 30]) >> 8;
}
else
{
    V0 = hu[A0 + 30];
}

[A0 + 7c] = h(( ((hu[A0 + 7e] & 7f00) >> 8) * V0) >> 7);
[A0 + 74] = h(hu[A0 + 72]);
[A0 + 78] = h(hu[A0 + 7a]);
[A0 + 18] = w(w[8004a5cc + hu[A0 + 7a] * 4]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_b5
V1 = w[A0];
[A0] = w(V1 + 1);

V0 = bu[V1] << 8;
[A0 + 7e] = h(V0);

A1 = w[A0 + 30];
if ((V0 & 8000) == 0)
{
    A1 = ((A1 << 4) - A1) >> 8;
}

[A0 + 7c] = h((((V0 & 7f00) >> 8) * A1) >> 7);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_c2
V0 = hu[A0 + 54];
if (V0 == 0)
{
    [A1 + 30] = w(w[A1 + 30] | A2);
}
else
{
    [80099ff0] = w(w[80099ff0] | A2);
}

func30038;
////////////////////////////////



////////////////////////////////
// AKAO_opcode_c8
[A0 + b8] = h((hu[A0 + b8] + 1) & 3);

index = hu[A0 + b8];
[A0 + 4 + index * 4] = w(w[A0 + 0]);
[A0 + ba + index * 2] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_c9
V1 = w[A0];
[A0] = w(V1 + 1);
A1 = bu[V1];
if (A1 == 0)
{
    A1 = 100;
}

index = hu[A0 + b8];

V0 = hu[A0 + ba + index * 2] + 1;
[A0 + ba + index * 2] = h(V0);

if (V0 != A1)
{
    [A0] = w(w[A0 + 4 + index * 4]);
}
else
{
    [A0 + b8] = h((index - 1) & 3);
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_ca
index = hu[A0 + b8];

[A0 + ba + index * 2] = h(hu[A0 + ba + index * 2] + 1);
[A0 + 0] = w(w[A0 + 4 + index * 4]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_cc
[A0 + 6e] = h(1);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_cd
////////////////////////////////



////////////////////////////////
// AKAO_opcode_e8
// set tempo
V1 = w[A0 + 0];
[A0 + 0] = w(V1 + 2);

[A1 + 18] = w((bu[V1 + 1] << 18) | (bu[V1 + 0] << 10));
[A1 + 48] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_ea
V1 = w[A0 + 0];
[A0 + 0] = w(V1 + 2);

[A1 + 38] = w(w[A1 + 38] | 00000080);
[A1 + 40] = w((bu[V1 + 1 << 18) | (bu[V1 + 0] << 10));
[A1 + 50] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_ee
A1 = w[A0 + 0];
[A0 + 0] = w(A1 + 3 + h[A1]);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_ef
A3 = w[A0];
if (hu[A1 + 4e] != 0 && hu[A1 + 4e] >= bu[A3 + 1])
{
    V1 = h[A3 + 2];
    [A0 + 0] = w(w[A0] + 3 + V1);
    [A1 + 4c] = h(hu[A1 + 4e]);
}
else
{
    [A0] = w(w[A0] + 3);
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_f0
A1 = w[A0];
V1 = bu[A1];
if (V1 == 0)
{
    V1 = 100;
}

hu[A0 + b8] = hu[A0 + b8];

if (hu[A0 + ba + index * 2] + 1 != V1)
{
    [A0] = w(A1 + 3);
}
else
{
    [A0] = w(A1 + 3 + h[A1 + 1]);
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_f1
A1 = w[A0];
V1 = bu[A1];
if (V1 == 0)
{
    V1 = 100;
}

index = hu[A0 + b8];

if (hu[A0 + ba + index * 2] + 1 != V1)
{
    [A0] = w(A1 + 3);
}
else
{
    [A0] = w(A1 + 3 + h[A1 + 1]);
    [A0 + b8] = h((index - 1) & 3)
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_f2
V1 = w[A0 + 0];
[A0 + 0] = w(V1 + 1);
T1 = bu[V1];
T0 = 80075f28 + T1 * 40;

if ( ( hu[A0 + 54] != 0 ) || ( (A2 & w[A1 + c] & w[80099fcc]) == 0 ) )
{
    [A0 + e0] = w(w[A0 + e0] | 00000010);
    V1 = hu[A0 + 58];
    [A0 + 30] = w((w[A0 + 30] * w[T0 + 10]) / w[80075f28 + V1 * 40 + 10]);
}

[A0 + 58] = h(T1);
[A0 + e4] = w(00076fe0);
[A0 + e8] = w(w[T0 + 4]);
[A0 + fa] = h(bu[T0 + 8]);
[A0 + fc] = h(bu[T0 + 9]);
[A0 + fe] = h(bu[T0 + a]);
[A0 + 100] = h(bu[T0 + b]);
[A0 + ec] = w(bu[T0 + d]);
[A0 + f0] = w[bu[T0 + e]];

if (w[A0 + 38] & 00000200)
{
    [A0 + e0] = w(w[A0 + e0] | 0001bb80);
}
else
{
    [A0 + e0] = w(w[A0 + e0] | 0001ff80);
    [A0 + 102] = h(bu[T0 + c]);
    [A0 + f4] = w(bu[T0 + f]);
}
////////////////////////////////



////////////////////////////////
// AKAO_opcode_fd
V1 = w[A0];
[A0] = w(V1 + 2);

[A1 + 56] = h(bu[V1 + 1]);
[A1 + 58] = h(0);
[A1 + 5a] = h(bu[V1 + 0]);
[A1 + 5c] = h(0);
////////////////////////////////



////////////////////////////////
// AKAO_opcode_fe
V1 = w[A0];
[A0] = w(V1 + 2);

[A1 + 5e] = h(bu[V1 + 1] << 8 | bu[V1 + 0]);
////////////////////////////////