800491d0 character id -> savemap block assosiation id. (0-0, 1-1, 2-2, 3-3, 4-4, 5-5, 6-6, 7-7, 8-8, 9-6, A-7)

800498a8 size of opcodes.
80049c28 pause table.
80049c40 default AKAO sequence (only A0 here).
80049c44 AKAO left volume table (0x100 items 0x2 bytes each)
80049e44 AKAO right volume table (0x100 items 0x2 bytes each)

8004a68c [][][][] some channel flags. We add here channel we set to play.
8004a6a8 [][]     store reverberation depth left here.
8004a6aa [][]     store reverberation depth right here.
8004aaec [][][][] some flags SPU related. if this &1 == 0 then we write data to SPU directly
8004aaf4 [][][][] pointer to SPU addreses (0x1f801c00)
8004ab2c [][][][] store 0 here when setting new reverb mode.

8004bc98 Sin and Cos table. Sin +00 [][], Cos +02 [][]

800604de [][]     store Interrupt mask register (0x1f801074) here.
800504e0 [][][][] store DMA Control Register (0x1f8010f0) here.

800617b8 [][][][] store 0 here at the start of total battle circle.


80062bb8 array of some function pointers (0x4 size).
+08 [][][][] 80045a24 function. Called when copy data from palette to ram and back.
+1c [][][][] 80045654 function. Passed as parameter when copy palette to ram.
+20 [][][][] 80045400 function. Passed as parameter when copy palette from ram.
80062bf8 [][][][] pointer to 80062bb8. Where pointers to some function stored.

80062d44 GP
+ 2c []       if 1 then system pad started and inited.
+ 97 []       ??? some type of text.
+ 98 []       colour of tutorial text window.
+ a0 []       ??? some type of text.
+ a2 [][]     x position of tutorial text window.
+ a4 [][]     y position of tutorial text window.
+ b4 [][][][] enable or disable input in menu? we only handle input if this == 1. Tutorial opcode readed if this != 1.
+ b8 []       number of something.
+110 []       store array of values from 0x5 type materia to use in paired functions.
+118 []       init with 0. Store 1 here if we has mastered Preemptive materia.
+11c [][][][] pointer to data about current unit attack (8009d84c).
+120 []       number of enabled commands.
+124 []       number of enabled spells.
+128 [][]     init with 0. Add gil plus value. Limit to 0x20.
+12a [][]     init with 0. Add encounter value (enemy lure/away). Limit to 0xff.
+12c [][]     init with 0. Add chokobo lure value. Limit to 0x20.
+12e [][]     init with 0. Add preemptive value. Limit it to 0x55.
+130 [][]     init with 0. Add here number of stars equipped enemy away materia has. Limit to 0xff.
+134 []       Store 1 2 8 or 10 here in case of hp absorb, mp absorb, steal as well, added cut nateria pairing. used in appropriate function.
+138 [][][][] number of command (used in cycle during copy commands from temp to unit structure)
+13c [][][][] number of counter materia already applied (8 max)
+140 [][][][] store 8 here if we have counter materia equipped (set in pair check). Used when set counter command.
+144 [][]     store 0 here. Used when set counter command.
+148 []       store 1 here if we has magic or master magic materia in battle, 2 in case of w-magic.
+14c []       store 1 here if we has summon or master summon materia in battle, 2 in case of w-summon.
+150 [][][][] wait tutorial opcode value.
+158 [][][][]
+174 [][][][] store here pointer to text of tutorial menu.
+1cc [][][][] store AP to next star here (in case of menu).
+1d0 [][][][] store -1 here at the start of total battle circle. We set error id here.
+1d4 []       add gil plus value from all player structure. Limit to 0x20.
+1d5 []       calculate and add emenu lure value (Limit 0x2-0x20).
+1d6 []       add chokobo lure value from all player structure. Limit to 0x20.
+1d7 []       add preemptive value from all player structure. Limit to 0x55. Add bit 0x80 if we have mastered preemptive materia equipped.
+220 [][][][] current main menu level (0 1 or 2)
+238 [][][][] address to store something in case of menu.
+244 [][][][] some flags. used in loading units.
+278 [][][][] total number of stars currently parsing materia has.
+27c [][][][] enable or disable input in menu? we only handle input if this == 1.
                    0 - 
                    1 - enabled
                    2 - 
+2b8 []       we store magic number here according to added materia.
+2dc []       0 - we load battle, 1 - we load menu.

80062d7c [][]     key data.
                    0001 - L2
                    0002 - R2
                    0004 - L1.
                    0008 - R1.
                    0010 - triangle.
                    0020 - circle.
                    0040 - cross.
                    0080 - square.
                    0100 - select.
                    0800 - start.
                    1000 - up button.
                    2000 - right button
                    4000 - down button.
                    8000 - left button

80062f70 [][]     looks like global left right reverberation pan.
80062f74 [][][][] pointer to 80089580. AKAO scripts. EFFECT.ALL offsets.
80062f84 [][][][] pointer to 8008a580. AKAO scripts. EFFECT.ALL data.

80062f8c [][][][] store 1 here at start of system_execute_AKAO. We will not add AKAO commands untill this is 0.

80062fa0 [][][][] set to 0 in pad start and init sequence. Input enabled.

80062fb8 [][]     looks like reverberation power.

80062fea [][][][] used as some tempo modificator for AKAO sequenser.

800696ac first pad buffer.
800696ac + 22 second pad buffer.
+00 []       status (00h=okay, FFh=timeout/wrong ID2)
+01 []       ID1    (eg. 41h=digital_pad, 73h=analogue_pad, 12h=mouse, etc.)
+02 [][]     (max 16 halfwords, depending on lower 4bit of ID1)

800707c0 font width data.

80075f28 INSTR.DAT number of struct with size 0x40
+00 [][][][] start offset.
+04 [][][][] loop offset.
+08 []       attack rate.
+09 []       decay rate.
+0a []       sustain level.
+0b []       sustain rate.
+0c []       release rate.
+0d []       attack mode.
+0e []       sustain mode.
+0f []       release mode.
+10 [][][][] pitch 0.
+14 [][][][] pitch 1.
+18 [][][][] pitch 2.
+1c [][][][] pitch 3.
+20 [][][][] pitch 4.
+24 [][][][] pitch 5.
+28 [][][][] pitch 6.
+2c [][][][] pitch 7.
+30 [][][][] pitch 8.
+34 [][][][] pitch 9.
+38 [][][][] pitch a.
+3c [][][][] pitch b.



80081dc8 struct with size 0x24 where we store data for AKAO parser. Store here data from 8009a000.
// for 0x10, 0x14, 0x15, 0x18, 0x19
+00 [][][][] command 0x10, 0x14, 0x15, 0x18, 0x19
+04 [][][][] offset to akao sequence.
+08 [][][][] length of sequence.
+0c [][][][] music id
+10 [][][][] w[8009a008]

80083580 we copy here akao sequence data when init music 0x10.



80096608 struct for AKAO channel (0x108 size).
80097ec8 some other same 0x18 structs for akao channels.
80099890 some other same 0x18 structs for akao channels.
+000 [][][][] AKAO sequence pointer.
+004 [][][][] loop point 0.
+008 [][][][] loop point 1.
+00c [][][][] loop point 2.
+010 [][][][] loop point 3.
+014 [][][][] pointer to mask for AKAO channels in 80083580.
+018 [][][][] address into wave table.
+01c [][][][] some other address into wave table.
+020 [][][][] some other address into wave table.
+024 [][][][] ???
+028 [][][][] ???
+02c [][][][] volume multiplier. Store 0x78 here during init.
+030 [][][][] base pitch. Summarize 0x30, 0x36 and 0xd6 it to get real pitch.
+034 [][][][] init with 0. pitch related.
+036 [][]     pitch addition. summarize 0x30, 0x36 and 0xd6 it to get real pitch.
+038 [][][][] init with 0. Update mirror. If flag is set we update main params from mirror channel (previous 0x108 channel data).
                0x00000001 - update wave 1.
                0x00000002 - update wave 2.
                0x00000004 - update wave 3.
                0x00000010 - update pitch. We update from +0xf8 from previous channel.
                0x00000100 - ???
+03d [][]     pitch modifier. We multiply this with real calculated pitch if +0x54 != 2.
+040 [][][][] ???
+044 [][][][] volume level. Often used as 2 top bytes.
+048 [][][][] volume_level_new.
+04c [][][][] pitch growth. We increment pitch addition by this every frame.
+050 [][][][] set to -1.
+054 [][]     set to 1. Set to 2 in case of playing system sound (0x30). If this != 2 then we modify pitch by +0x3d. maybe pitch type?
+056 [][]     pause. Set to 0x204 in case of 0x30 command. Set to 0x101.
+058 [][]     current instrument.
+05c [][]     init with 0.
+05e [][]     ???
+060 [][]     store 0x4000 here in case of playing system sound 0x30.
+062 [][]     set to 0.
+064 [][]     init with 0. Number of steps for pitch changes?.
+066 [][]     pitch corrention. Set in 0xa5 opcode.
+06a [][]     ???
+06c [][]     init with 0.
+06e [][]     init with 0.
+072 [][]     wave1_delay.
+074 [][]     wave1_delay_current;
+076 [][]     wave1_refresh_interval. Wait value until we update left volume. +078 inited from here when left volume updated.
+078 [][]     wave1_refresh_interval_counter. We descrease this by 1 everytime we update channel struct and when this became 0 we update left volume.
+07a [][]     wave1 table key node index.
+07c [][]     wave1 multiplier. Some modificator for pitch modificator +d6.
+07e [][]     wave1_modifier. Init with 0.
+080 [][]     init with 0.
+088 [][]     wave2_delay_current
+08c [][]     wave2_refresh_interval_counter.
+08e [][]     wave2 table key node index.
+090 [][]     init with 0.
+092 [][]     init with 0.
+09a [][]     wave3_refresh_interval_counter.
+09c [][]     wave3 table key node index.
+09e [][]     init with 0.
+0a0 [][]     init with 0.
+0a4 [][]     init with 0.
+0a6 [][]     init with 0.
+0b8 [][]     index of last saved loop point (0-3). init with 0.
+0ba [][]     something for loop point 0. Set to 0 when save loop point.
+0bc [][]     something for loop point 1. Set to 0 when save loop point.
+0be [][]     something for loop point 2. Set to 0 when save loop point.
+0c0 [][]     something for loop point 3. Set to 0 when save loop point.
+0c2 [][]     we store here pause after setting it.
+0c4 [][]     init with 0. pause_multiplier.
+0cc [][]     init with 0.
+0ce [][]     init with 0.
+0d0 [][]     pitch saved parameters.
+0d2 [][]     init with 0.
+0d4 [][]     ???
+0d6 [][]     pitch wave shift. Summarize 0x30, 0x36 and 0xd6 it to get real pitch.
+0d8 [][]     ???
+0da [][]     init with 0.
+0dc [][][][] 
+0e0 [][][][] set flags. We remove flag as soon as we set params to SPU.
                0x00000001 - set left volume.
                0x00000002 - set right volume.
                0x00000010 - set pitch.
                0x00000080 - set start offset.
                0x00000100 - set attack rate.
                0x00000200 - set sustain rate.
                0x00000400 - set release rate.
                0x00000800 - set attack mode.
                0x00001000 - set decay rate.
                0x00002000 - set sustain mode.
                0x00004000 - set release mode.
                0x00008000 - set sustain level.
                0x00010000 - set loop offset.
+0e4 [][][][] start offset.
+0e8 [][][][] loop offset.
+0ec [][][][] attack mode.
                0x05 - exponential.
                else linear.
+0f0 [][][][] sustain mode.
                0x01 - sustain linear increase.
                0x05 - sustain exponential increase.
                0x07 - sustain exponential discrease.
                else sustain linear discrease.
+0f4 [][][][] release mode.
                0x7 - exponential descrease.
                else linear discrease.
+0f8 [][]     pitch. Pitch here can be changes somewhere and set to SPU again.
+0fa [][]     attack rate.
+0fc [][]     decay rate.
+0fe [][]     sustain level.
+100 [][]     sustain rate.
+102 [][]     release rate.
+104 [][]     left volume.
+106 [][]     right volume.


80099fcc [][][][] some channel mask. Add here channels with scripts to run. We update only this channels starting from 0x00010000
80099fd0 [][][][] some channel mask. Remove from here channels we want to start sound.
80099fd4 [][][][] some channel mask. Remove from here channels we want to start sound.
80099fd8 [][][][] some channel mask. Add here channels we want to start sound.
80099fdc [][][][] some channel mask. Remove from here channels we want to start sound.
80099fec [][][][] some channel mask. Remove from here channels we want to start sound.
80099ff0 [][][][] some channel mask. Remove from here channels we want to start sound.
80099ff4 [][][][] some channel mask. Remove from here channels we want to start sound.



8009a000 AKAO data
+00 [][]     clear with 0.
                Store 0xc8, 0xe4, 0xb0, 0xb1, 0xb2, 0xb3 in AKAO2 opcode.
                Store 0xf0, 0xc0, 0xa0, 0xa1, 0xa2, 0xa3, 0x28, 0x29, 0x2a, 0x2b in AKAO opcode.
                Store 0x10 in MUSIC opcode (play music?)
                Store 0x14 in MUSVT opcode (play music?)
                Store 0x15 in MUSVM opcode (play music?)
                Store 0x20 in SOUND opcode (play sample?)
                Store 0x30 when we try play sound.
+04 [][][][] clear with 0.
                Store 0x7000, 0x7fff in AKAO2 opcode during 0xc8 in +00.
                Store 0x7f in AKAO opcode during 0xc0, 0xa0, 0xa1, 0xa2, 0xa3 in +00.
                Store 0x3f in AKAO opcode during 0x28, 0x29, 0x2a, 0x2b in +00.
                Store 0x00 in AKAO opcode during 0xf0 in +00.
                Store offset to AKAO sequence in case of 0x10, 0x14, 0x15 in +00.
                Store 0x40 in case of 0x20 in +00.
+08 [][][][] clear with 0.
                Store 0x0000 here in all cases in AKAO2 and AKAO.
                Store 0x0168 in case of 0x20 in +00.
+0c [][][][] clear with 0.
                Store 0x0000 here in all cases in AKAO2 and AKAO.
+10 [][][][] clear with 0.
                Store 0x0000 here in all cases in AKAO2 and AKAO.
+14 [][][][] clear with 0.
                Store 0x0000 here in all cases in AKAO2 and AKAO.
+18 [][][][] clear with 0.



8009a0c8 array of menu cursor data (0x12 size).
+0b []       vertical cursor position.
+0d []       total number of vertical positions.



8009a104 start of music channels config
+00 [][][][] some settings for music (0x01- stereo, 0x02 - mono)
+04 [][][][] active music channel mask.
+08 [][][][] channels to be played mask.
+0c [][][][] some channels mask.
+18 [][][][] tempo of music. Used as >> 0x10.
+1c [][][][] tempo music increment.
+20 [][][][] tempo music counter. If this & 0xffff0000 then we update akao sequence.
+2c [][][][] some channels mask.
+38 [][][][] scu config update flags.
                0x00000010 - update noise clock frequency.
                0x00000080 - update reverb.
+3c [][][][] reverb mode.
+40 [][][][] reverb depth. some value we can increment this by 8009a148 if 8009a154 not 0.
+44 [][][][] increment for +40.
+4a [][]     this is number of times we need to increment tempo (8009a11c) each update by 8009a120.
+4a [][]     AKAO music id for currently playing sequence.
+4e [][]     storage for 0xef conditional jump.
+50 [][]     this is number of times we need to increment +40 each update by +44.
+52 [][]     noise clock frequency.
+56 [][]     upper timer equal value.
+58 [][]     upper timer value. When this reach +56 then we reset this to 0 and increment +5e. Stored in CHMPH opcode.
+5a [][]     lower timer equal value.
+5c [][]     lower timer value. When this equal to +5a then we reset this to 0 and increment +58.
+5e [][]     top timer. Stored in CHMPH opcode.

8009c564 [][][][] store here which reverb channel to update (6 - left and right) in spu update.
8009c56c [][]     store here reverb depth left in spu update.
8009c56e [][]     store here reverb depth right in spu update.

8009c6e4 savemap start
+0054          savemap character name data (0x84 size).
    +00 []       character id.
    +02 []       strength
    +03 []       vitality
    +04 []       magic
    +05 []       spirit
    +06 []       dexterity
    +07 []       luck
    +08 []       strength bonus
    +09 []       vitality bonus
    +0a []       magic bonus
    +0b []       spirit bonus
    +0c []       dexterity bonus
    +0d []       luck bonus
    +0e []       current limit level
    +0f []       current limit bar (0xFF = limit break)
    +10          name string.
    +1c []       equipped weapon.
    +1d []       equipped armor.
    +1e []       equipped accessory.
    +1f []       flags (0x10 sadness, 0x20 fury).
    +20 []       char order (0xff normal, 0xfe back row).
    +21 []       level progress bar (0-255)
    +2c [][]     current hp.
    +2e [][]     max hp (before materia alterations).
    +30 [][]     current mp.
    +32 [][]     max mp (before materia alterations).
    +38 [][]     max hp (after materia alterations).
    +3a [][]     max mp (after materia alterations).
    +40 [][][][] weapon materia slot 1.
    +44 [][][][] weapon materia slot 2.
    +48 [][][][] weapon materia slot 3.
    +4c [][][][] weapon materia slot 4.
    +50 [][][][] weapon materia slot 5.
    +54 [][][][] weapon materia slot 6.
    +58 [][][][] weapon materia slot 7.
    +5c [][][][] weapon materia slot 8.
    +60 [][][][] armor materia slot 1.
    +64 [][][][] armor materia slot 2.
    +68 [][][][] armor materia slot 3.
    +6c [][][][] armor materia slot 4.
    +70 [][][][] armor materia slot 5.
    +74 [][][][] armor materia slot 6.
    +78 [][][][] armor materia slot 7.
    +7c [][][][] armor materia slot 8.
    +80 [][][][] exp to next level.
+04f8 [][][][] party member in slot1-4 (used in battle).
+04fc party item stock array
+0b7c [][][][] party gil amount.
+0b80 [][][][] total seconds played.
+0b84 [][][][] savemap seconds for timer (set in STTIM).
+0ba4 savemap memory bank 1/2 start
+0ba4 (+00) [][]     game progress
+0bc0 (+1c) [][]     menu visibility mask.
+0bc2 (+1e) [][]     menu locking mask.
+0c03       []       init with 0 on worldmap loading.
+0c1e (+7a) []       flags
                        0x01 - used in world map.
                        0x40 - tagret text shown in battle.
                        0x80 - underwater timer in battle.
+0ca4 savemap memory bank 3/4 start
+0cad (+09) [][][]   party member in slot 1-3.
+0da4 savemap memory bank b/c start
+0ea4 savemap memory bank d/e start
+0eaa (+06) [][]     some value that increments each battle check.
+0f0c field map name for menu (0x17 size).
+0f2a (+86) []       flags
                        0x10 - used in world map
+0f5a [][]     ????
+0f5c array of coords for vehicles left on map (0x8 size 0x6 items) (cloud, wild chokobo, bronco/chocobo, buggy/highwind, submarine, diamond/ultimate/ruby).
    +00 [][][][] 0x0007ffff x.
                 0x00f80000 model id.
                 0xff000000 direction.
    +04 [][][][] 0x0003ffff z.
                 0xfffc0000 y.
+0f98 [][][][] ???
+0f9c [][]
+0fa4 savemap memory bank 7/f start
+10a4 [][]     character lock mask. You cant move character from and out party (in game methods)
+10a6 [][]     character availability mask. Add character here when adding it to party or enable it with opcode.
+10d8 []       battle speed.
8009d7bd []       battle message speed (used as value >> 2 + 4)
+10da [][]     config flags
                    0x1c00 - magic order
                    0x0300 - camera (0x0000-auto,0x0100-fixed)
                    0x00c0 - atb/recommended/wait (0x0000-atb,0x0040-recommended,0x0080-wait)
                    0x0010 - cursor (0x0000-initial,0x0010-memory)
                    0x0004 - conroller (0x0000-normal,0x0004-custom)
                    0x0001 - sound (0x0000-mono,0x0001-stereo)
+10dc array of button remap. Each record represent one button in buttons mask (0x10 items 0x1 size)
    +00 [] new button bit
8009d7d0 []       savemap message speed.






8009d84c start of some unit structure (size 0x440).
+000 []       set exp modifier from temp.
+001 []       set cover modifier from temp.
+002 []       strength.  Init with 0. Add strength bonus from weapon. Add base stat + bonus stat.
+003 []       vitality.  Init with 0. Add vitality bonus from weapon. Add base stat + bonus stat.
+004 []       magic.     Init with 0. Add magic bonus from weapon. Add base stat + bonus stat.
+005 []       spirit.    Init with 0. Add spirit bonus from weapon. Add base stat + bonus stat.
+006 []       dexterity. Init with 0. Add dexterity bonus from weapon. Add base stat + bonus stat.
+007 []       luck.      Init with 0. Add luck bonus from weapon. Add base stat + bonus stat.
+008 [][]     set with attack from temp.
+00a [][]     set with defense from temp.
+00c [][]     set with magic attack.
+00e [][]     set with magic defense.
+010 [][]     init with current hp. Limit to max hp.
+012 [][]     init with base hp (before materia alterations). Set modified value from temp with all boost. Lower limit to 10.
+014 [][]     init with current mp. Limit to max mp.
+016 [][]     init with base mp (before materia alterations). Set modified value from temp with all boost. Lower limit to 10.
+018 [][]     init with 0. Copy initial time value here.
+01a [][]     init with 0. Set limit bar value * 0x100 here.
+01c [][][][] init with 0. Set this here w[80082290 + FP * 38 + limit_level * 4 + V0].
+020 []       init with 1. Set current player limit level (1-4).
+021 []       number of command columns in battle UI. Calculated as number of commands / 4.
+022 []       init with 0.
+023 []       Init with 0. Flags.
              01 - underwater materia equipped.
              04 - long range materia equipped.
              08 - hp<->mp materia equipped.
+024          8 additional attack structure (0x3 size)
    +0 []     Init with 0. Counter attack set 9. Counter with command set 8. Counter with magic and summon set 7. Sneak command set 5. Sneak magic and summon set 4. Final command set 2. Final magic and summon set 1.
    +1 []     Init with 0. Counter attack set 9. Command set action id. Magic and summon set attack id. Master command set 0xfd. Master magic set 0xfe. Master summon set 0xff.
    +2 []     Init with 0. Store counter (1e 28 3c 50 64), sneak (14 23 32 41 50), final (01 02 03 04 05) value from materia.
+03c [][]     attack element type. Init with 0. Add type from weapon. Add type from elemental materia pairing if materia in weapon.
+03e [][]     half damage element type mask. Init with 0. Add element half damage from armor. Add type from materia paired with elemental if 1 star activated if materia in armor.
+040 [][]     no damage element type mask. Init with 0. Add element no damage from armor. Add type from materia paired with elemental if 2 star activated if materia in armor.
+042 [][]     absorb damage element type mask. Init with 0. Add element absorb damage from armor. Add type from materia paired with elemental if 3 star activated if materia in armor.
+044 [][][][] status attack. Init with 0. Add bit from weapon data. Add type from materia paired with added effect if materia in weapon.
+048 [][][][] status protect. Init with 0. Add bit from armor data. Add data from accessory. Add type from materia paired with added effect if materia in armor.
+04c          array of active commands (0x6 size) 0x10 items in array
    +0 []     Init with ff. Copy action id from temp.
    +1 []     Set default 800707c4 + 0. Set 0 here if weapon is long ranged or if some other condition.
    +2 []     Set default 800707c4 + 1 (target type). Add modified target type here.
    +3 []     Init with 1. Set 0 during copy from temp.
    +4 []     Copy number of stars from temp (but only in case of w command). Add number of stars in megaall materia in case of command id 5 6 9 a b 11. Set 0xff if actions 0x18,0x19,0x1a,0x1b
    +5 []     Init with 0. Flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut).
+0ac
    +0 []     looks like id of limit 1 (inited long ago).
    +1 []     looks like id of limit 2 (inited long ago).
    +2 []     looks like id of limit 3 (inited long ago).
    +3 []     set +b4+1c*0+c[] here during init for limit 1.
    +4 []     set +b4+1c*1+c[] here during init for limit 2.
    +5 []     set +b4+1c*2+c[] here during init for limit 3.
    +6 []     Number of activated/learned limits.
    +7 []     Init with 0.
+0b4          array for limit data (3 elements with 0x1c size)
    +0c []    this copied to +ac+3(+4,+5) during limit initialization.

+108               start of attacks data (0x60 total)
first 0x38 records about magic (0x8 size) first byte - attack id.
second 0x10 records about summon (0x8 size) first byte - attack id.
third 0x18 records about enemy skill (0x8 size) first byte - attack id.
+0 []       magic/summon/skill id (from 0 within group). Init with ff. Set magic, summon and enemy skill id.
+1 []       Set attack mana cost for magic summon and enemy skill. Boost mana cost acording to mp turbo stars (mp + mp * 10 / 100 + 1).
+2 []       all effect/number of summons. Init with 0. Set data from temp in case of magic and summon. Add megaall number of stars in case of magic.
+3 []       quadra pair number. Init with 0. Set data from temp in case of magic and summon.
+4 []       quadra number. Init with 0. Set data from temp in case of magic and summon. Set 0 if this is 0x19 (escape) or 0x47 (knight of the round) slot.
+5 []       Set 0xc data from kernel attack data for magic summon and enemy skill.
+6
+7 []       init with 0. Add number of stars in MP turbo linked to this summon to this 0xe0 (5 maximum) and leave 0x1f as is. 0x1f - flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut). Set from temp in case of magic.

+408                struct with equipped weapon data
+411 []     weapon model id (in player model file).
    +00
    +04
    +05 []       attack status bit id.
    +08
    +0c
    +10 [][]     attack element type.
    +14 []       stat1 id.
    +15 []       stat2 id.
    +16 []       stat3 id.
    +17 []       stat4 id.
    +18 []       stat1 bonus.
    +19 []       stat2 bonus.
    +1a []       stat3 bonus.
    +1b []       stat4 bonus.
    +1c [][][][]

+437 []             init with 0. Add here number of stars equipped enemy away materia has from temp.
+43c []             init with 0. Add Gil Plus value from temp.
+43d []             init with 0. Add encounter value (enemy lure/away) from temp.
+43e []             init with 0. Add chokobo lure value from temp.
+43f []             init with 0. Add preemptive value from temp.
