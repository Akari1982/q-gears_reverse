// 7 block in dat
+00 [][] size
+02 [][] number of models
// model data
+00 [] palette in global texture
+01 [] number of bones
+02 [] number of model parts
+03 [] number of animation
+04 [] we set model number (from now on used as model id) here or 0xff if model not enabled.
+05 [] enabled model or not.
+06 [] global model loaded
+07 [] global model



// BSX model header
+ 
+ 4 [][][][] number of models.
+ 8 [][][][] offset to texture.
+ c [][][][] offset to something. We copy enviroment settings for models here.



// BSX model enviroment settings
+ 0
+ 2 [][]     scale (12 bix fixed point).
+ 4 [][][][] offset to something.
+ 8 []       R
+ 9 []       G
+ a []       B
+12 []       start index of additional bone.
+17 []       additional number of bones.
+1e []       start index of additional parts.
+23 []       additional number of parts.
+2a []       start index of additional animations.
+2f []       additional number of animations.
+30



// model parts header
+00 []       0 - not calculate stage lighting and color. 1 - calculate.
+01 []       bone to which this part attached to.
+02 []       number of vertex.
+03 []
+04 []       number of textured quads (Gourad Shading) (3C 3E).
+05 []       number of textured triangles (Gourad Shading) (34 36).
+06 []       number of textured quads (Flat Shading) (2C 2E).
+07 []       number of textured triangles (Flat Shading) (24 26).
+08 []       number of monochrome triangles (20).
+09 []       number of monochrome quads (28).
+0a []       number of gradated triangles (30).
+0b []       number of gradated quads (38).
+0c []       number of data in block 4.
+0d []
+0e [][]     offset to polygon block.
+10 [][]     offset to texture coordinates block (0x02 each).
+12 [][]     offset to 4th block.
+14 [][]     offset to 5th block.
+16 [][]     size of buffer for packet drafts.
+18 [][][][] offset to data block (vertex block first).
+1c [][][][] offset to precompiled packet draft (bone matrixes already skipped).

// start of data
+0 [][][][] some flag indicates that we applied scale. if 1 then we will not scale this parts.

// textured quads (Gourad Shading) data
+00 []       vertex 1 index
+01 []       vertex 2 index
+02 []       vertex 3 index
+03 []       vertex 4 index
+04 [][][]   BGR 1
+07 []       normal index 1
+08 [][][]   BGR 2
+0b []       normal index 2
+0c [][][]   BGR 3
+0f []       normal index 3
+10 [][][]   BGR 4
+13 []       normal index 4
+14 []       tex coord index for vertex 1
+15 []       tex coord index for vertex 2
+16 []       tex coord index for vertex 3
+17 []       tex coord index for vertex 4

// textured triangles (Gourad Shading) data
+00 []       vertex 1 index
+01 []       vertex 2 index
+02 []       vertex 3 index
+03 []
+04 [][][]   BGR 1
+07 []       normal index 1
+08 [][][]   BGR 2
+0b []       normal index 2
+0c [][][]   BGR 3
+0f []       normal index 3
+10 []       tex coord index for vertex 1
+11 []       tex coord index for vertex 2
+12 []       tex coord index for vertex 3
+13 []

// 4th block data
+0 [][][][] texture settings. Indexed by 5th block data.
            0x0000003f - 0 - if set we use global texture.
                         1 - if set we use global texture.
                         2 - if 2 then we use clut X and Y as defined. Add model_id to Y otherwise.
            0x000000c0 - clut type (4bpp, 8bpp, 15bpp)
            0x00000f00 - texture page X.
            0x00001000 - texture page Y.
            0x003f0000 - CLUT X.
            0x7fc00000 - CLUT Y.

// 5th block data
+0 []       one byte stream for every packet with texture.
            0x0f - index for 4th block data.
            0x10 - transparency on/off
            0x60 - blending type

// animation header
+00 [][]     number of frames.
+02 []       number of bones.
+03 []       number of frames translation sequenses (bones).
+04 []       number of static translation (bones).
+05 []       number of frames rotation sequenses (bones).
+06 [][]     local offset to frames translation.
+08 [][]     local offset to static translation.
+0a [][]     local offset to frames rotation.
+0c [][][][] offset to data block (static frames block first).

// animation data
+ 0 [][][][] some flag indicates that we applied scale. if 1 then we will not scale this animations.
// idle bone data
// for each bone
+ 0 [] mask byte that tells which rotation or translation is changed every frame (0 TZ TY TX 0 RZ RY RX)
+ 1 [] x rotation
+ 2 [] y rotation
+ 3 [] z rotation
+ 4 [] x translation start id
+ 5 [] y translation start id
+ 6 [] z translation start id
+ 7 [] unused

matrix for bone
+00 [][]     basis xx
+02 [][]     basis xy
+04 [][]     basis xz
+06 [][]     basis yx
+08 [][]     basis yy
+0a [][]     basis yz
+0c [][]     basis zx
+0e [][]     basis zy
+10 [][]     basis zz
+12 [][]     basis zz
+14 [][][][] translation X
+18 [][][][] translation Y
+1c [][][][] translation Z