// compiled textured quads gourad
+00 [][][]
+03 []       store 0x0c here
+04 [][][]   +04 textured quad BGR 1
+07 []       packet header 0x3c or 0x3e
+08 [][][][] place for vertex 1
+0c [][]     tex coords 1. Data from block 3 (vertex 1 index * 2)
+0e [][]     clut x and y
+10 [][][][] +08 textured quad BGR 2
+14 [][][][] place for vertex 2
+18 [][]     tex coords 2. Data from block 3 (vertex 2 index * 2)
+1a [][]     texture page.
+1c [][][][] +0C textured quad BGR 3
+20 [][][][] place for vertex 3
+24 [][]     tex coords 3. Data from block 3 (vertex 3 index * 2)
+26 [][]
+28 [][][][] +10 textured quad BGR 4
+2c [][][][] place for vertex 4
+30 [][]     tex coords 4. Data from block 3 (vertex 4 index * 2)
+32 [][]

// compiled textured quads flat
+00 [][][]
+03 []
+04 [][][]   BGR.
+07 []       packet header
+08 [][][][] place for vertex 1.
+0c [][]     tex coords 1.
+0e [][]     clut x and y
+10 [][][][] place for vertex 2.
+14 [][]     tex coords 2.
+16 [][]     texture page.
+18 [][][][] place for vertex 3.
+1c [][]     tex coords 3.
+20 [][][][] place for vertex 4.
+24 [][]     tex coords 4.

// compiled textured triangles gourad
+08 [][][][] vertex 1 screen coords
+0c [][]     tx, ty for vertex 1
+0e [][]     CLUT
+10 [][][][] vertex 2 screen coords
+14 [][]     tx, ty for vertex 2
+16 [][]     tpage
+18 [][][][] vertex 3 screen coords
+1c [][]     tx, ty for vertex 3

