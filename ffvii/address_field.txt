80049208 window RGB. (size [r][g][b]x4)

8004a62c offset to new model structure at 80138250.

80062f19 [] looks like enemy lure value (looks like 0xc fixed point)
80062f1b [] 

80062f24 addresss of current message render data.

80063048 start of font padding file.

800707be [][]     battle result stored here. Loaded by 0x23 BTRLD.

8007078c []       array of enities lines data. (size 0x01).

800707c0 [][][][] offset to font padding file.

800716c4 [][][][] offset to sector 5 triggers.
+ 38 [][][][] triggers data.
+158 [][][][] offset to background triggers.

800716c8 []       store here entity id for which we calculate debug draw.

800716d0 []       store 0 or 4 here during random encounter.

800716d4 []       store music lock here. MULCK opcode.

800716dc [][]     entity array (set to 0 during script initing)

8007173c [][]     danger counter.

80071748 array of priority script offsets. (size 0x10 0x2).

80071a54 offset to sector 6 encounters.
80071a5c [][]     map for which we loading background in background.

80071A88 array if priority data. Entity id that request this priority with REQ-type opcodes. (size 0x08 0x01).

80071c08 []       current debug page.
80071c0c store that we in line and SLIP byte in line == 1 during move_line_check.

80071e24 []       some value used in debug draw.

80071e38 current screen scroll X.
80071e3c current screen scroll Y.
80071e40 offset to camera section

80074ea4 model related data. (size 0x84)
+ 00 [][]     store 1 here in KAWAI opcode. Store 2 here ir run_kawai function returns 1 (maybe end kawai)
+ 02 [][]     store 0 here in KAWAI opcode.
+ 04 [][][][] offset to KAWAI opcode data in script (like offset to opcode + 3).
+ 08 []       blinking. 0 - on, 1 - off.
+ 09 []       store 0 here in KAWAI opcode under some curcumstances.
+ 0c [][][][] x.
+ 10 [][][][] y.
+ 14 [][][][] z.
+ 18 [][][][] x start (in JUMP and LADER).
+ 1c [][][][] y start (in JUMP and LADER).
+ 20 [][][][] z start (in JUMP and LADER).
+ 2c [][]     b value for JUMP function.
+ 30 [][]     store number of steps for JUMP and LADER here.
+ 32 [][]     current step for JUMP and LADER.
+ 35 []       shift addition to move direction.
+ 36 []       move direction (used when calculated movement).
+ 37 []       lock rotation. (1 - direction will not be changed)
+ 38 []       model direction.
+ 39 []       number of steps for turn.
+ 3a []       current step for turn.
+ 3b []       used during TURN (5th argument).
+ 3c [][]     start direction (for TURN), we store model direction here at start of turn.
+ 3e [][]     end direction (for TURN).
+ 40 [][]     real X offset value.
+ 42 [][]     start X offset value.
+ 44 [][]     end X offset value.
+ 46 [][]     real Y offset value.
+ 48 [][]     start Y offset value.
+ 4a [][]     end Y offset value.
+ 4c [][]     real Z offset value.
+ 4e [][]     start Z offset value.
+ 50 [][]     end Z offset value.
+ 52 [][]     steps in offseting.
+ 54 [][]     current step in offsetting.
+ 56 []       type of offsetting (LINEAR SMOOTH INSTANT).
+ 57 []       store current entity id here during CHAR opcode.
+ 58 []       pc entity collide with this entity. (1 - true/0 - false).
+ 59 []       model solidity (0x01 - off/0x00 - on).
+ 5a []       pc entity talk with this entity. (1 - true/0 - false).
+ 5b []       model talkability (0x01 - off/0x00 - on).
+ 5c []       model visibility (0x01 - on/0x00 - off).
+ 5d []       model state.
                0 - nothing.
                1 - MOVE-type.
                3 - JUMP.
                4 - up/down LADER.
                5 - left/right LADER.
+ 5e []       animation id.
+ 60 [][]     animation speed. Store 10 here during MOVE opcode and animation speed during LADER. 4bit fixed point.
+ 62 [][]     current frame. Store 0 here during MOVE and LADER opcode. 4bit fixed point.
+ 64 [][]     number of frames. Set during MOVE and LADER opcode.
+ 66 [][]     store CHAR byte here.
+ 68 [][]     0 or 1 during LADER (forward or reverse). Solid addition MOVE (0) MOVA (solid range of entity we moving to).
+ 6a [][]     stage of state.
                0 - init.
                1 - action.
                2 - finish.
+ 6c [][]     solid range value.
+ 6e [][]     talk range value.
+ 70 [][]     movement speed. For MOVE-type opcodes.
+ 72 [][]     triangle.
+ 74 [][]     move to triangle (LADER and JUMP).
+ 78 [][][][] move to x (MOVE and LADER and JUMP).
+ 7c [][][][] move to y (MOVE and LADER and JUMP).
+ 80 [][][][] move to z (MOVE and LADER and JUMP).



800756e8 [] array of animation state? Store 0 here if we set UC to 0. Store 1 here if we MOVE. (size 0x1)
            0 - play default animation.
            1 - if current frame >= number of frames - set first frame. (we start load anim after this)
            2 - play animation.
            3 - wait for continue animation.
            4 - finish animation.
            5 - play and set to 0.
            6 - play and set to 3.

80075cf8 [][]     current background scroll step.
80075e14 [][]     start X position of scroll.
80075e18 [][]     end X position of scroll.
80075e1c [][]     start Y position of scroll.
80075e20 [][]     end Y position of scroll.
80075e24 temp memory in script 5/6.

80075dec [][]     screen index (ffvii uses two render buffers). Used to render to specific buffers.

80075e10 [][][][] pointer to where to load next data for model. 1) Part after all new structures for the model. 2) Part after all loaded global models.

80077f64 message render related data. (0x3400 size each)

8007e770 [][][][] offset to block 7 in dat file.

8007e7a0          array of some fade data. (size 0x4).
8007e7a8 [][][][] offset to dialog block.

8007e7ac array of LINE data. (size 0x18).
+ 00 [][] x1.
+ 02 [][] y1.
+ 04 [][] z1.
+ 06 [][] x2.
+ 08 [][] y2.
+ 0a [][] z2.
+ 0c []   line on/off. (1 - true/0 - false).
+ 0d []   parent entity.
+ 0e []   entity currently in LINE (with solid).  Script call.
+ 0f []   entity cross LINE. Script call (removed after script call).
+ 10 []   entity move to line. Script call (removed after script call).
+ 11 []   entity talk to LINE. (1 - true/0 - false).
+ 12 []   entity enter LINE (with solid). Script call (removed after script call).
+ 13 []   entity leave LINE. Script call (removed after script call).
+ 14 []   store direction of moving between move vector and line if we move in line.
+ 15 []   entity move to line (for talk check).
+ 16 []   store SLIP byte here.

8007eaac packet settings for 800e8f84.
8007eb08 packet settings for 80100820.

8007eb90 [][]     some data.
8007eb94 [][]     some data.
8007eb98 [] array of entity data. entity_id <-> model_id. 0xFF if not visible entity. (size 0x01).

8007ebc8 []       store 1 here during random encounter.

80081d90 [] array of some entity data. Store 1 to pc entity here during SPLIT.

80081DC4 current UC opcode state. Not actually influence on game, but it is restored from here if chenged as in ASK opcode. Real uc is set in game data.

80082248 [][] array of model default animation speed.

800831fc entity current script pointers table.

8008325c [] array of model default animation.

800833F8 array of script running state. 0x00 - not started, 0x01 - running, 0x02 - finished. (size 0x8 0x1).

8008357c offset to model data in 7 block in dat file.

80095d84 number of inited lines.

80095dcc []   ???
80095dd0 [][] store here map id to whish trigger player character closer to load it's texture in advance.
80095dd4 [][] set this to 0 when type 3 fade reach 22.
80095ddc

80095de0 array of stored background palletes (0x20 size).

800965e0 we store manual visible entity here (pc).
800965e8 [][]     1 - field background already loading, 0 - not loading. Set 2 if background loading and re make some check and it returns 0.
800965ec [][]     depending on this value we load field differently. Store 1 here when move from map to map.

80099ffc [] script related. In script function.

8009a048 maybe array of states for KAWAI (byte per model). Used in 0xd kawai opcode

8009a058 save current opcode here.
8009a05c looks like we read field id from here when loading data.

8009a064 [][][][] script related. In script function. We increase this every opcode (maybe number of proseed opcodes). We go to next entoty after 8 of this.

8009a074 structures for fade (size 0x30). Index for using fade structure here 80075dec.

8009a100 manual or auto scroll. If 1 then this is manual scroll. O - we auto scroll to PC.

8009a1c4 [] array of current priority slot used by entity (size 0x01 0x08).

8009ad30 player character array of assigned entity_id (items 0x8 size 0x01).

8009c544 offset to model related data. 80074ea4

8009c558 [][]     total number of background scroll steps.

8009c6c4 []       number of already inited visible entity.

8009d5a6 []       enable or disable PC pointer and triangles help.

8009d70b []       some flag.

8009d820 unknown value that checked x & 3 == 0.
8009d824 []       debug dirty and needs update.
8009d828 [][] array of animation speed. ASPED set speed to model data+60 and here. 4bit fixed point.

800a00bc

800a00dc []       some flag in model loading functions. If true - load global texture.

800da5b8 structure where data for loading field files (size 0x18)
+00 [][][][] DAT file sector.
+04 [][][][] DAT file size.
+08 [][][][] MIM file sector.
+0c [][][][] MIM file size.
+10 [][][][] BSX file sector.
+14 [][][][] BSX file size.

800def80 [][][][] WORLD/WM.PRE file sector.
800def84 [][][][] WORLD/WM.PRE file size.

800df08c CLOUD.BCX start sector. After it pointers and sezes for all global models.
800df090 CLOUD.BCX size.

800df0d4 FIELD.TDB start sector.
800df0d8 FIELD.TDB size.

800df114 swich packet draft buffers to render. 0x00 - 1st biffer, 0x01 - second buffer.
800df118 offset to 800fc68c.
800df11c offset to KAWAI opcodes addreses (800df0dc).
800df120 Sin and Cos table. Sin +00 [][], Cos +02 [][]
800df520 normals table
800dfca0 store 80128000 here during level models initing. We store globals texture here.

800dfdfc array related with kawai. (0x2 size, 0x10 items) First element init with 0x10, others with 0.

800dfe1c
800dfe1c [][]     in case of KAWAI_5 we store here +00[][] transformed by camera.
800dfe1e [][]     in case of KAWAI_5 we store here +02[][] transformed by camera.
800dfe20 [][]     in case of KAWAI_5 we store here +04[][] transformed by camera.

800dfe22 []       +6[]
800dfe23 []       +7[]

800dfe24 [][]     +8[][]
800dfe26 [][]     +a[][]
800dfe28 [][]     +c[][]

800dfe2a [][]     +e[][]
800dfe2c [][]     +10[][]
800dfe2e [][]     +12[][]

800dfe3c kawai structure (size 0x3c)
800dfe3c + 00 [][]     used in function funcb0edc (it seems render data to packet draft)
800dfe3c + 02 [][]     used in function funcb0edc (it seems render data to packet draft)
800dfe3c + 04 [][]     used in function funcb0edc (it seems render data to packet draft)
800dfe3c + 06 [][]
800dfe3c + 08 [][]
800dfe3c + 0a [][]
800dfe3c + 0c [][]
800dfe3c + 0e [][]     store 0x0064 here during 0xD KAWAI opcode.
800dfe3c + 10 [][]     store 0x0800 here during 0xD KAWAI opcode.
800dfe3c + 12 []       used in function funcb0edc (it seems render data to packet draft)
800dfe3c + 13 []
800dfe3c + 14 [][]
800dfe3c + 16 [][]
800dfe3c + 18 []
800dfe3c + 19 []       store 0x00 here during 0x8 KAWAI opcode.
800dfe3c + 1a [][]
800dfe3c + 1c [][][][]
800dfe3c + 20 [][][][]
800dfe3c + 24 [][][][]
800dfe3c + 28 [][][][]
800dfe3c + 2c [][][][]
800dfe3c + 30 [][][][]
800dfe3c + 34 [][][][]
800dfe3c + 38 [][][][]

800e0200 [][][][] offset to color data from BSX file.
800e0204 [][][][] offset to BSX file.

800e0228 opcode address table.

800e0738 digit->letter assosiation array (10-26 letters from character table)

800e0748 debug array (0x6items 0x17a size). 1 - Actor, 3 - Word, 4 - Actor, 5 - field authtor.
    +   0 [][]     x.
    +   2 [][]     y.
    +   4 [][]     width.
    +   6 [][]     height.
    +   8 []       r.
    +   9 []       g.
    +   a []       b.
    +   c [][]     index into +10 array of strings. Next id to insert new string.
    +   e [][]     init with 0. Set to 4 after init.
    +  10 array of strings (0x18 items 0xe size)
    +  78 []       init with 0. If this is 2 then we not init some data but set this to 0.
    + 160 array of row colors (0x18 items 0x1 size)
        + 0 []       clut for render.
    + 178 []       ???

800e1024 [][]     init with 0.
800e1028 debug packets buffer (2 buffer with size 0x1580 with 0x158 packets 0x10 size) (textured rectangle, 8x8, opaque, raw-texture).
800e3b28 debug packets buffer (2 buffer with size 0x240 with 0x18 packets 0x18 size) (monochrome poly-line, opaque).
800e3fa8 debug packets buffer (2 buffer with size 0xc0 with 0x10 packets 0x18 size) (monochrome rectangle, variable size).
800e4128 debug packets buffer (2 buffer with size 0x48 with 0xc packets 0x18 size) (draw mode setting).

800e41b8 [][]     debug render sprite count (text).
800e41bc [][]     debug render poly-line count.
800e41c0 [][]     debug render monochrome rectangle count.
800e41c4 [][]     debug render draw mode settings count.
800e41c8 otc pointers for debug rendering (0x1c size per buffer, 0x04 per page).

800e4200 some debug array.
800e4210 [][]     opaque or semi-transparent 800e3fa8 monochrome rectangle. Init with 0.
800e4214 memory bank array for getting variable for windows. 8 for each window. (size 0x8 0x1)
800e4234 reading offsets in dialog in field. One for each window. (size 0x4).
800e424c total window height. Height of window with extra rows. Set this during B state in window as 8008328A (current row) * 10 + 11. (size 0x2).
800e4254 we copy here string "Actor:[entity name]" for debug purpose.
800e4274 offset to walkmesh block.
800e4278 [][] name reading offset for dialog windows. (size 0x2).
800e4280 [][] current variable for windows. (size 0x2).

800e42d8 some array (size 0x18)

800e4254 addr for temp debug string.

800e48d8

800e48e0 [][][][] store akao offset here when start menu tutorial.

800e48f0 []       store FF here during end of SPLIT.
800e48f4 array for some data for arrow or triangle (maybe tex coords). (size 0x28)
800e4944 texts for windows to diaplay. (size 0x100)
800e4d44 [][]     if 1 here we stop load background in advance.
800e4d48 offsets for getting variable from memory block for windows. 8 for each window. (size 0x10 0x2)

// MIM data
800e4d90 [][][][] pointer to clut data.
800e4d94 [][][][] pointer to first image block.
800e4d98 [][]     clut vram x.
800e4d9a [][]     clut vram y.
800e4d9c [][]     clut width.
800e4d9e [][]     clut height.

800e4da4 [][][][] pointer to 1st image data.
800e4da8 [][][][] pointer to second image block.
800e4dac [][]     1st image vram x.
800e4dae [][]     1st image vram y.
800e4db0 [][]     1st image width.
800e4db2 [][]     1st image height.
800e4db4 [][]     texpage settings for 1st image.

800e4dd4 [][][][] pointer to 2nd image data.
800e4dd8 [][][][] pointer to end.
800e4ddc [][]     2nd image vram x.
800e4dde [][]     2nd image vram y.
800e4de0 [][]     2nd image width.
800e4de2 [][]     2nd image height.
800e4de4 [][]     texpage settings for 2nd image.

800e8f7c render ordet table for some 1 element. Inited when start of field.

800fc68c some data related to model rendering packet. Depth sorted polygons addreses.

80100818 render ordet table for some 1 element. Inited when start of field (second budder of 800e8f7c).

8011016C        [8008357C]  some model related data (size 0x08)
8011016C + 04 []

80113f28 [][] store current triangle here during walkmesh_border_cross.

80114278 [][] some data for windows. Set this to zero during window initialization

801142CC [][] additional rows during text scrolling. (size 0x2).

801142D4 [] priority queue script id. (size 0x08 0x01).

80114458 [][][][] offset to walkmesh triangle access block.
8011445C [][] time to wait for windows. (size 0x2).

80114470 [][] field dialog value which content value how mush characters add at current character copy. (size 0x08 0x2).
80114480 [][] field dialog OK button speed modificator. (size 0x08 0x2).

80114488 we read something from here during reading unknown data in triggers and check if this != 0. If this != 0 then battle will not be activated during field battle check. (0)

80114490 buffer index for something like array or triangles.

80114498 arrray of something entity related (size 0x1).

801144CC [][] store which side we cross here during walkmesh_border_cross if we cant cross board (0 - BA, 1 - CB, 2 - AC).

801144DC [][] temp variable string. First we write variable here and then copy it to window string. (size 0x10).

8011451C [][] current variable read offset. (size 0x2).

80114fe4 temp storage for DAT file after load.

80128000 address for temp load of different textures.
    MIM files stored here before parse.
    FIELD.TDB (this is global textures for models)



80138250 [8004a62c]  header for new model structures (size 0x24).
80138250 + 00 []       number of models.
80138250 + 01 []       store 00 here during init.
80138250 + 02 [][]     store 00 here during init.
80138250 + 04 [][][][] offset to new structures (8013825c).
80138250 + 08 [][][][] store 00 here during init. Offset to texture in bsx file.
8013825c new structures for model data (we init it and copy data from 7 dat block during level loading) (size 0x24)
8013825c + 00 []       store 01 here during init. Store 0 here after initialization if number of models greater than 1.
8013825c + 01 []       store 0xff here during init. Store KAWAI second byte here. (4,8,9,b,c - one kind, others - other)
8013825c + 02 []       number of bones.
8013825c + 03 []       number of model parts.
8013825c + 04 []       number of animation.
8013825c + 05 []       store 00 here during init. Rotation x.
8013825c + 06 []       store 00 here during init. Rotation y.
8013825c + 07 []       model direction. (rotation z)
8013825c + 08 [][][][] translation x.
8013825c + 0c [][][][] translation y.
8013825c + 10 [][][][] translation z.
8013825c + 14 []       global model id.
8013825c + 15 []       face id in global texture (load palette with this id to vram). store + 00 [] of model data in 7 block in dat file.
8013825c + 16 [][]     model scale. Store 1000 here during init. (12bit fixed point)
8013825c + 18 [][]     local offset to model parts part.
8013825c + 1a [][]     local offset to animation part.
8013825c + 1c [][][][] start offset of data for this model (data starts right after new model structure).
8013825c + 20 [][][][] offset to packet drafts and bone matrixes. init with 0.



8013c864                    BALLET.BCX

8013f558                    BSX file.

801b0000 preload MIM file or WORLD/WM.PRE here if we got close to trigger that loads this map.