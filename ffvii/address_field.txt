80049208 window RGB. (size [r][g][b]x4)

8004a62c offset to new model structure at 80138250.

80062f19 [] looks like enemy lure value (looks like 0xc fixed point)
80062f1b [] 

80062f24 addresss of current message render data.

80063048 start of font padding file.

800707be [][]     battle result stored here. Loaded by 0x23 BTRLD.

8007078c []       array of actor to line data. (size 0x01).

800707c0 [][][][] offset to font padding file.

800716c4 [][][][] offset to sector 5 triggers.

800716c8 []       store here entity id for which we calculate debug draw.

800716d0 []       store 0 or 4 here during random encounter.

800716d4 []       store music lock here. MULCK opcode.

800716dc array of ??? Init with 0. (size 0x2).

8007173c [][]     danger counter.

80071748 array of actors 0x8 priority script offsets. (size 0x10 for each actor, 0x2 for each priority).

80071a54 offset to sector 6 encounters.

80071a5c [][]     map for which we loading background in background.

80071a88 array if priority data. Entity id that request this priority with REQ-type opcodes. (size 0x08 0x01).

80071c08 []       current debug page.
80071c0c store that we in line and SLIP byte in line == 1 during move_line_check.

80071c1c []       init with 0.

80071e24 []       debug flags.
                  0x01 - base debug.
                  0x02 - was removed.
                  0x04 - if set then require exact actor debug to be set.

80071e38 current screen scroll X.
80071e3c current screen scroll Y.
80071e40 offset to camera section

800722c4 []       current actor id.

80074ea4 entities_data. (size 0x84)
    + 00 [][]     store 1 here in KAWAI opcode. Store 2 here if run_kawai function returns 1 (maybe end kawai)
    + 02 [][]     store 0 here in KAWAI opcode.
    + 04 [][][][] kawai settings. Offset to KAWAI opcode data in script (like offset to opcode + 3).
    + 08 []       blinking. 0 - on, 1 - off.
    + 09 []       store 0 here in KAWAI opcode under some curcumstances.
    + 0c [][][][] x.
    + 10 [][][][] y.
    + 14 [][][][] z.
    + 18 [][][][] x start (in JUMP and LADER).
    + 1c [][][][] y start (in JUMP and LADER).
    + 20 [][][][] z start (in JUMP and LADER).
    + 2c [][]     b value for JUMP function.
    + 30 [][]     store number of steps for JUMP and LADER here.
    + 32 [][]     current step for JUMP and LADER.
    + 35 []       shift addition to move direction.
    + 36 []       move direction (used when calculated movement).
    + 37 []       lock rotation. (1 - direction will not be changed)
    + 38 []       direction.
    + 39 []       number of steps for turn.
    + 3a []       current step for turn.
    + 3b []       used during TURN (5th argument).
    + 3c [][]     start direction (for TURN), we store model direction here at start of turn.
    + 3e [][]     end direction (for TURN).
    + 40 [][]     real X offset value.
    + 42 [][]     start X offset value.
    + 44 [][]     end X offset value.
    + 46 [][]     real Y offset value.
    + 48 [][]     start Y offset value.
    + 4a [][]     end Y offset value.
    + 4c [][]     real Z offset value.
    + 4e [][]     start Z offset value.
    + 50 [][]     end Z offset value.
    + 52 [][]     steps in offseting.
    + 54 [][]     current step in offsetting.
    + 56 []       type of offsetting (LINEAR SMOOTH INSTANT).
    + 57 []       actor id that controls this model (set in CHAR opcode).
    + 58 []       pc entity collide with this entity. (1 - true/0 - false).
    + 59 []       model solidity (1 - off, 0 - on).
    + 5a []       pc entity talk with this entity. (1 - true/0 - false).
    + 5b []       model talkability (1 - off, 0 - on).
    + 5c []       model visibility (1 - on, 0 - off).
    + 5d []       model state.
                    0 - nothing.
                    1 - MOVE-type.
                    3 - JUMP.
                    4 - up/down LADER.
                    5 - left/right LADER.
    + 5e []       animation id.
    + 60 [][]     animation speed. Store 10 here during MOVE opcode and animation speed during LADER. 4bit fixed point.
    + 62 [][]     current frame. Store 0 here during MOVE and LADER opcode. 4bit fixed point.
    + 64 [][]     number of frames. Set during MOVE and LADER opcode.
    + 66 [][]     char id. Set with CHAR opcode.
    + 68 [][]     0 or 1 during LADER (forward or reverse). Solid addition MOVE (0) MOVA (solid range of entity we moving to).
    + 6a [][]     stage of state.
                    0 - init.
                    1 - action.
                    2 - finish.
    + 6c [][]     solid range value.
    + 6e [][]     talk range value.
    + 70 [][]     movement speed. For MOVE-type opcodes.
    + 72 [][]     triangle id.
    + 74 [][]     move to triangle (LADER and JUMP).
    + 78 [][][][] move to x (MOVE and LADER and JUMP).
    + 7c [][][][] move to y (MOVE and LADER and JUMP).
    + 80 [][][][] move to z (MOVE and LADER and JUMP).



800756e8 [] array of animation state? Store 0 here if we set UC to 0. Store 1 here if we MOVE. (size 0x1)
            0 - play default animation.
            1 - if current frame >= number of frames - set first frame. (we start load anim after this)
            2 - play animation.
            3 - wait for continue animation.
            4 - finish animation.
            5 - play and set to 0.
            6 - play and set to 3.

80075cf8 [][]     current background scroll step.
80075e10 [][][][] BCX start address. Color data. Looks like free place to do something.
80075e10 [][]     DP ???
80075e12 [][]     DP ???
80075e14 [][]     start X position of scroll.
80075e18 [][]     end X position of scroll.
80075e1c [][]     start Y position of scroll.
80075e20 [][]     end Y position of scroll.
80075e24 temp memory in script 5/6.

80075dec [][]     screen index (ffvii uses two render buffers). Used to render to specific buffers.

80077f64 message render related data. (0x3400 size each)

8007e770 [][][][] offset to field models header (block 7 in DAT file).

8007e7a0          array of some fade data. (size 0x4).
8007e7a8 [][][][] offset to dialog block.

8007e7b8

8007e7ac array of LINE data. (size 0x18).
    + 00 [][] x1.
    + 02 [][] y1.
    + 04 [][] z1.
    + 06 [][] x2.
    + 08 [][] y2.
    + 0a [][] z2.
    + 0c []   line on/off. (1 - true/0 - false).
    + 0d []   actor id.
    + 0e []   actor currently in LINE (with solid).  Script call.
    + 0f []   actor cross LINE. Script call (removed after script call).
    + 10 []   actor move to line. Script call (removed after script call).
    + 11 []   actor talk to LINE. (1 - true/0 - false).
    + 12 []   actor enter LINE (with solid). Script call (removed after script call).
    + 13 []   actor leave LINE. Script call (removed after script call).
    + 14 []   store direction of moving between move vector and line if we move in line.
    + 15 []   actor move to line (for talk check).
    + 16 []   store SLIP byte here.

8007eb08 packet settings for 80100820.

8007eb90 [][]     base offset x for DRAWENV. Init with 0xa0.
8007eb94 [][]     base offset y for DRAWENV. Init with 0x78.
8007eb98 array of entity_id for actors. -1 if no entity assigned to this actor. (size 0x01). Inited with value from 8009c6c4.

8007ebc8 []       store 1 here during random encounter.

8007ebe0 []       init with 1.

80081d90 [] array of some entity data. Store 1 to pc entity here during SPLIT.

80081dc4 current UC opcode state. Init with 0. Not actually influence on game, but it is restored from here if changed as in ASK opcode. Real uc is set in game data.

80082248 [][] array of model default animation speed.

800831fc actors current script pointers array (0x2 size for each actor).

8008325c [] array of model default animation.

800833f8 array of actors 0x8 script running states. (size 0x8 for each actor, 0x1 for each slot state). 0x00 - not started, 0x01 - running, 0x02 - finished.

8008357c offset to field models loading data (block 7 in DAT file + 4).

80095d84 number of inited lines.

80095dcc []   ???
80095dd0 [][] store here map id to whish trigger player character closer to load it's texture in advance.

80095de0 array of stored background palletes (0x40 items 0x20 size)(each palette is 0x10 items 0x2 size).

800965e0 we store manual visible entity here (pc).
800965e8 [][]     1 - field background already loading, 0 - not loading. Set 2 if background loading and re make some check and it returns 0.
800965ec [][]     depending on this value we load field differently. Store 1 here when move from map to map.
                    1 - 
                    2 - after battle?
                    3 - 
                    4 - 
                    5 - we not load mim to vram (maybe it's already there) (reload field?)
                    6 - 
                    7 - 
                    8 - 
                    9 - 
                    a - 
                    b - 
                    c - 
                    d - we not load mim to vram (maybe it's already there) (reload field?)

80099ffc [] script related. In script function.

8009a048 array of states for KAWAI (0x10 items 0x1 size). Used in 0xd kawai opcode. Init with -1.

8009a058 []       save current opcode here.
8009a05c field id to load (and current field id).
8009a060
8009a064 [][][][] script related. In script function. We increase this every opcode (maybe number of proseed opcodes). We go to next entoty after 8 of this.

8009a074 structures for fade (size 0x30). Index for using fade structure here 80075dec.

8009a100 manual or auto scroll. If 1 then this is manual scroll. O - we auto scroll to PC.

8009a1c4 array of current priority slot used by actors (size 0x01).

8009abf4 field_struct. 8009c6e0 points here.
    + 00 []       render buffer id (there are 2 render buffers)
    + 01 []       some state
                    00 - normal field.
                    01 - load new field or world (finalize field in this case).
                    02 - encounter.
                    09 - tutorial.
                    0a - set when field reset game by all shifts and start + select.
                    0c - minigame start.
                    0d -
                    19 -
                    1a - game over
    + 02 [][]     map to load (gateway activation) or battle to fight. Or param to menu.
    + 04 [][]     destination x during map load.
    + 06 [][]     destination y during map load.
    + 0a [][]     background X scroll to this position.
    + 0c [][]     background Y scroll to this position.
    + 10 [][]     field scale (9 bit fixed point).
    + 12 []       set to 0 in 0x6A VWOFT opcode.
    + 13 []       set to 0 in 0x6A VWOFT opcode.
    + 14 []       set to 0 in 0x6A VWOFT opcode.
    + 16 [][]     set to 2-3 bytes in 0x6A VWOFT opcode.
    + 18 [][]     set to 0 in 0x6A VWOFT opcode.
    + 1a [][]     set to 0 in 0x6A VWOFT opcode.
    + 1d []       set to (0-SCRCC(instant), 4-SCR2D(instant), 5-SCR2DL, 6-SCR2DC).
    + 1e []       store entity id to which we scroll background.
    + 1f []       state of scrolling. 0-init 1-action 2-finish.
    + 20 [][]     speed of background scroll. Number of steps?
    + 22 [][]     destination z during map load. (most likely triangle id).
    + 24 [][]     saved rotation for manual entity during map load.
    + 26 [][]     battle state ?
    + 28 [][]     number of entities.
    + 2a []       manual entity id.
    + 2c [][]     animation for stand. Set in CCANM (XX,-,-,0)
    + 2e [][]     animation for walk. Set in CCANM (XX,-,-,1)
    + 30 [][]     animation for run. Set in CCANM (XX,-,-,2)
    + 32 []       0 if player has control. 1 - otherwise.
    + 33 []       if 1 here model will not automove. And animation will not play.
    + 34 []       we store MENU byte here. Checked when call menu.
    + 35 []       ???
    + 36 []       check gateways during move or not (0 - check).
    + 37 []       scroll lock.
    + 38 [][]     0 here when there is no fade.
    + 3a []       we set walk run pc speed to 3/12 instead of 2/8 if this not 0. Set in BGMOVIE opcode.
    + 3b []       battle field check on/off (0/1).
    + 3c []       battle table to use (0 or 1).
    + 44 [][][][] offset to battle music (global, with field file offset).
    + 48 [][][][] offset to field music (global, with field file offset).
    + 4c [][]     we store FADE and NFADE type here.
    + 4e [][]     we store start value on FADE and zero on NFADE here.
    + 50 [][]     we store FADE and NFADE speed here.
    + 52 [][]     we store FADE R-value here.
    + 54 [][]     we store FADE G-value here.
    + 56 [][]     we store FADE B-value here.
    + 58 [][]     probably current fade R.
    + 5a [][]     probably current fade G.
    + 5c [][]     probably current fade B.
    + 5e [][]     we store NFADE 1/4-byte_value here.
    + 60 [][]     we store NFADE 2/5-byte_value here.
    + 62 [][]     we store NFADE 3/6-byte_value here.
    + 68 [][][][] key data.
    + 70 [][][][] key data.
                    0001 - L2
                    0002 - R2
                    0004 - L1.
                    0008 - R1.
                    0010 - triangle.
                    0020 - circle.
                    0040 - cross.
                    0080 - square.
                    0100 - select.
                    0800 - start.
                    1000 - up button.
                    2000 - right button
                    4000 - down button.
                    8000 - left button
    + 78 [][][][] key data hold. 0020 - ok button (hold, released or pressed). Checked during text copy.
    + 7c [][][][] key data. (repeat)
    + 80 [][][][] key data pressed. 0020 - ok button (hold, released or pressed). Checked during window state check.
    + 8a []       if 1 we activate X shaking. 0 - deactivate.
    + 8b []       state of shaking single X movement (0 - init, 1 - action)
    + 8c []       random shake array index single X movement.
    + 8d []       store here smooth shake single X movement.
    + 8e [][]     shake single X movement strength.
    + 90 [][]     start position of shake single X movement.
    + 92 [][]     end position of shake single X movement.
    + 94 [][]     number of steps for shake single X movement.
    + 96 [][]     current step for shake single X movement.
    + 98 []       if 1 we activate Y shaking. 0 - deactivate.
    + 99 []       state of shaking single Y movement (0 - init, 1 - action)
    + 9a []       random shake array index single Y movement.
    + 9b []       store here smooth shake single Y movement.
    + 9c [][]     shake single Y movement strength.
    + 9e [][]     start position of shake single Y movement.
    + a0 [][]     end position of shake single Y movement.
    + a2 [][]     number of steps for shake single Y movement.
    + a4 [][]     current step for shake single Y movement.
    + a6 [][]     x scroll for 2nd background.
    + a8 [][]     y scroll for 2nd background.
    + aa [][]     x scroll for 3rd background.
    + ac [][]     y scroll for 3rd background.
    + ae [][]     depth for background 3rd layer.
    + b0 [][]     depth for background 2nd layer.
    + b2          triangle lock array (bit per triangle) (0x40 items)
    + f2          background state array (0x40 items)
    + f2          minigame:
                    0 - highway
                    1 - chocobo
                    2 - snowboard
                    3 - condor
                    4 - submarine
                    5 - jet
                    6 - snowboard2

8009ad30 array of actor_id for characters (items 0x8 size 0x01).

8009c544 [][][][] pointer to entity structs at 80074ea4.

8009c558 [][]     total number of background scroll steps.

8009c6c4 []       number of already inited actors with entities (this value stored into 8007eb98 for given actor).

8009c6dc current pointer to field events data.
8009c6e0 [][][][] address of game data (fade/nfade/walkmesh/key data).

8009d5a6 []       enable or disable PC pointer and triangles help.

8009d70b []       some flag.

8009d820 unknown value that checked x & 3 == 0.
8009d824 []       debug dirty and needs update.
8009d828 [][] array of animation speed. ASPED set speed to model data+60 and here. 4bit fixed point.

8009fe8c []       init with 0. Looks like debug flag

800a00bc

800a00dc []       static var in FIELD.BIN (0 in release version). Load CLOUD.BCX instead of bsx.

800da5b8 data for loading field files (hardcoded into unpacked FIELD.BIN 0x3a5b8) (size 0x18)
    +00 [][][][] DAT file sector.
    +04 [][][][] DAT file size.
    +08 [][][][] MIM file sector.
    +0c [][][][] MIM file size.
    +10 [][][][] BSX file sector.
    +14 [][][][] BSX file size.

800def80 [][][][] WORLD/WM.PRE file sector.
800def84 [][][][] WORLD/WM.PRE file size.

800df08c CLOUD.BCX start sector. After it pointers and sezes for all global models.
800df090 CLOUD.BCX size.

800df0d4 FIELD.TDB start sector.
800df0d8 FIELD.TDB size.
800df0dc functions for KAWAI
    800B1C7C
    800B2A00
    800B0EDC
    800B0618
    800B2DD4
    800B5260
    800B480C
    800B4B04
    800B4EAC
    800B62C4
    800B6AE4
    800B86D8
    800B6B4C
    800B9B0C

800df114 swich packet draft buffers to render. 0x00 - 1st biffer, 0x01 - second buffer.
800df118 offset to 800fc68c.
800df11c offset to KAWAI opcodes addreses (800df0dc).
800df120 Sin and Cos table. Sin +00 [][], Cos +02 [][]
800df520 normals table
800dfca0 store 80128000 here during level models initing. We store globals texture here.

800dfca4 array of eye face settings (0x7 tdb textures id for each model 0x1 byte each).
800dfd94 array of mouth face settings (0x3 tdb textures id for each model 0x1 byte each).
800dfdfc init with 0x10 (number of element in 800dfdfe).
800dfdfe array related with kawai. (0x2 size, 0x10 items).

800dfe1c
800dfe1c [][]     in case of KAWAI_5 we store here +00[][] transformed by camera.
800dfe1e [][]     in case of KAWAI_5 we store here +02[][] transformed by camera.
800dfe20 [][]     in case of KAWAI_5 we store here +04[][] transformed by camera.

800dfe22 []       +6[]
800dfe23 []       +7[]

800dfe24 [][]     +8[][]
800dfe26 [][]     +a[][]
800dfe28 [][]     +c[][]

800dfe2a [][]     +e[][]
800dfe2c [][]     +10[][]
800dfe2e [][]     +12[][]

800dfe3c kawai data (size 0x3c)
    + 00 [][]     used in function field_model_set_color_to_model_packets (it seems render data to packet draft)
    + 02 [][]     used in function field_model_set_color_to_model_packets (it seems render data to packet draft)
    + 04 [][]     used in function field_model_set_color_to_model_packets (it seems render data to packet draft)
    + 06 [][]
    + 08 [][]
    + 0a [][]
    + 0c [][]
    + 0e [][]     store 0x0064 here during 0xD KAWAI opcode.
    + 10 [][]     store 0x0800 here during 0xD KAWAI opcode.
    + 12 []       used in function field_model_set_color_to_model_packets (it seems render data to packet draft)
    + 13 []
    + 14 [][]
    + 16 [][]
    + 18 []
    + 19 []       store 0x00 here during 0x8 KAWAI opcode.
    + 1a [][]
    + 1c [][][][]
    + 20 [][][][]
    + 24 [][][][]
    + 28 [][][][]
    + 2c [][][][]
    + 30 [][][][]
    + 34 [][][][]
    + 38 [][][][]

800e0200 [][][][] offset to model data from BSX file.
800e0204 [][][][] offset to BSX file.

800e0228 opcode address table.

800e0738 digit->letter assosiation array (10-26 letters from character table)

800e0748 debug array (0x6 items 0x17a size). 1 - Actor, 3 - Word, 4 - Actor, 5 - field authtor.
    +   0 [][]     x.
    +   2 [][]     y.
    +   4 [][]     width.
    +   6 [][]     height.
    +   8 []       r.
    +   9 []       g.
    +   a []       b.
    +   c [][]     index into +10 array of strings. Next id to insert new string.
    +   e [][]     init with 0. Set to 4 after init.
    +  10 array of strings (0x18 items 0xe size)
    +  78 []       init with 0. If this is 2 then we not init some data but set this to 0.
    + 160 array of row colors (0x18 items 0x1 size)
        + 0 []       clut for render.
    + 178 []       ???

800e1024 [][]     init with 0.
800e1028 debug packets buffer (2 buffer with size 0x1580 with 0x158 packets 0x10 size) (textured rectangle, 8x8, opaque, raw-texture).
800e3b28 debug packets buffer (2 buffer with size 0x240 with 0x18 packets 0x18 size) (monochrome poly-line, opaque).
800e3fa8 debug packets buffer (2 buffer with size 0xc0 with 0x10 packets 0x18 size) (monochrome rectangle, variable size).
800e4128 debug packets buffer (2 buffer with size 0x48 with 0xc packets 0x18 size) (draw mode setting).

800e41b8 [][]     debug render sprite count (text).
800e41bc [][]     debug render poly-line count.
800e41c0 [][]     debug render monochrome rectangle count.
800e41c4 [][]     debug render draw mode settings count.
800e41c8 otc pointers for debug rendering (0x1c size per buffer, 0x04 per page).

800e4200 some debug array.
800e4210 [][]     opaque or semi-transparent 800e3fa8 monochrome rectangle. Init with 0.
800e4214 memory bank array for getting variable for windows. 8 for each window. (size 0x8 0x1)
800e4234 reading offsets in dialog in field. One for each window. (size 0x4).
800e424c total window height. Height of window with extra rows. Set this during B state in window as 8008328A (current row) * 10 + 11. (size 0x2).
800e4254 temp debug string. We copy here string "Actor:[entity name]" for debug purpose.
800e4274 offset to walkmesh block.
800e4278 array of name reading offset for dialog windows. (size 0x2).
800e4280 array of current variable for windows. (size 0x2).

800e42d8 some array (size 0x18)

800e48d8 []       rain force (greater value more rain lines rendered).

800e48e0 [][][][] store akao offset here when start menu tutorial.

800e48f0 []       store 0xff here during end of SPLIT.
800e48f4 array of poly for pointer (0x2 items 0x28 size)
800e4944 texts for windows to diaplay. (size 0x100)
800e4d44 [][]     if 1 here we stop load background in advance.
800e4d48 offsets for getting variable from memory block for windows. 8 for each window. (size 0x10 0x2)

// MIM data
800e4d90 [][][][] pointer to clut data.
800e4d94 [][][][] pointer to first image block.
800e4d98 [][]     clut vram x.
800e4d9a [][]     clut vram y.
800e4d9c [][]     clut width.
800e4d9e [][]     clut height.

800e4da4 [][][][] pointer to 1st image data.
800e4da8 [][][][] pointer to second image block.
800e4dac [][]     1st image vram x.
800e4dae [][]     1st image vram y.
800e4db0 [][]     1st image width.
800e4db2 [][]     1st image height.
800e4db4 [][]     texpage settings for 1st image.

800e4dd4 [][][][] pointer to 2nd image data.
800e4dd8 [][][][] pointer to end.
800e4ddc [][]     2nd image vram x.
800e4dde [][]     2nd image vram y.
800e4de0 [][]     2nd image width.
800e4de2 [][]     2nd image height.
800e4de4 [][]     texpage settings for 2nd image.

800e4df0 render struct array (0x2 items 0x1789c size).
    +     0 scene OT (0x1000 items 0x4 size)
    +  4000 array of poly for gateway arrows (0xc items 0x10 size)
    +  40c0 array of poly for additional help arrows (0xc items 0x10 size)
    +  4180 draw mode for arrows 4000 and 40c0.
    +  418c OT for 4194 DR_ENV global (0x4 size)
    +  4190 OT for 41d4 DR_ENV prim 1 (0x4 size)
    +  4194 DR_ENV prim global (0x40 size). After scene render.
    +  41d4 DR_ENV prim 1 (0x40 size). Before scene render.
    +  4214 DR_ENV prim 2 (0x40 size). At end of layer 3.
    +  4254 DR_ENV prim 3 (0x40 size). At end of layer 4.
    +  4294 DR_ENV prim 4 (0x40 size). Between layer 2 and 3.
    +  42d4 DR_ENV prim 5 (0x40 size). Between layer 3 and 4.
    +  4314 ???
    +  4914 background prims fpr 1st and 2nd layer (0x10 size)
    +  e554 background prims fpr 3rd and 4th layer (0x14 size)
    + 10d54 animation packets data.
    + 124dc draw mode for backgrounds prims (0xc size).
    + 17488 ???
    + 1748c ui OT (0x1 item 0x4 size)
    + 17490 draw mode for rain (0xc size)
    + 1749c array of poly for rain (0x40 items 0x10 size)

8011016c [8008357c]  some model related data (size 0x8)
8011016c + 04 []

80113f28 [][] store current triangle here during walkmesh_border_cross.

80113f2c array DRAWENV structs (0xa items 0x5c size).

80114278 [][] some data for windows. Set this to zero during window initialization

801142cc array of additional rows during text scrolling. (size 0x2).

801142D4 [] priority queue script id. (size 0x08 0x01).

80114458 [][][][] offset to walkmesh triangle access block.
8011445C [][] time to wait for windows. (size 0x2).

80114470 [][] field dialog value which content value how mush characters add at current character copy. (size 0x08 0x2).
80114480 [][] field dialog OK button speed modificator. (size 0x08 0x2).

80114488 we read something from here during reading unknown data in triggers and check if this != 0. If this != 0 then battle will not be activated during field battle check. (0)

8011448c [][][][] number of draw mode packets for background prims inited.

80114490 buffer index for something like array or triangles.

80114498 array of debug actors opcodes and data or not (size 0x1).

801144cc [][] store which side we cross here during walkmesh_border_cross if we cant cross board (0 - BA, 1 - CB, 2 - AC).

801144dc [][] temp variable string. First we write variable here and then copy it to window string. (size 0x10).

8011451c array of current variable read offset. (size 0x2).

80114fe4 temp storage for DAT file after load.

80128000 address for temp load of different textures.
    MIM files stored here before parse.
    FIELD.TDB (this is global textures for models)



80138250 header for model struct. 8004a62c points here.
    + 0 []       number of inited models.
    + 1 []       store 00 here during init.
    + 2 [][]     store 00 here during init.
    + 4 [][][][] offset to model data (8013825c).
    + 8 [][][][] store 00 here during init. Offset to texture in bsx file.
    + с new structures for model data (we init it and copy data from 7 dat block during level loading) (size 0x24)
        +  0 []       store 01 here during init. Store 0 here after initialization if number of models greater than 1.
        +  1 []       store 0xff here during init. Store KAWAI second byte here. (4,8,9,b,c - one kind, others - other)
        +  2 []       number of bones.
        +  3 []       number of parts.
        +  4 []       number of animation.
        +  5 []       rotation x.
        +  6 []       rotation y.
        +  7 []       rotation z (direction).
        +  8 [][][][] translation x.
        +  c [][][][] translation y.
        + 10 [][][][] translation z.
        + 14 []       global model id.
        + 15 []       face id in global texture (load palette with this id to vram).
        + 16 [][]     model scale. Store 1000 here during init. (12bit fixed point)
        + 18 [][]     local offset to model parts.
        + 1a [][]     local offset to animation.
        + 1c [][][][] offset to data for this model and bones offset.
        + 20 [][][][] offset to part matrixes.



8013c864                    BALLET.BCX

8013f558                    BSX file.

801b0000 preload MIM file or WORLD/WM.PRE here if we got close to trigger that loads this map.
