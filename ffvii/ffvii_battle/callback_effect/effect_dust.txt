////////////////////////////////
// 800d3bf0
// function used to render dust effect (single cloud)
S2 = 801621f0 + h[801590d4] * 20;

[SP + 10] = w(w[800a0d98 + 0]);
[SP + 14] = w(w[800a0d98 + 4]);
[SP + 18] = w(w[800a0d98 + 8]);
[SP + 1c] = w(w[800a0d98 + c]);
[SP + 20] = w(w[800a0d98 + 10]);
[SP + 24] = w(w[800a0d98 + 14]);
[SP + 28] = w(w[800a0d98 + 18]);
[SP + 2c] = w(w[800a0d98 + 1c]);

[800f0218 + 4] = b(h[S2 + 2] * 20);

A0 = 800fa63c; // camera matrix
system_set_rotation_matrix_to_GTE;
A0 = 800fa63c;
system_set_translation_vector_to_GTE;

A0 = S2 + 4; // vector to transform
A1 = SP + 24; // result vector
A2 = SP + 30; // flag
system_call_rtv0tr_from_GTE;

// set scale
[SP + 10] = h(h[S2 +  e] + h[S2 +  e] * h[S2 + 2] / 8);
[SP + 18] = h(h[S2 + 10] + h[S2 + 10] * h[S2 + 2] / 8);
// set z translation
[SP + 2c] = w(w[SP + 2c] - h[S2 + 10] / 10);

A0 = SP + 10;
system_set_rotation_matrix_to_GTE;
A0 = SP + 10;
system_set_translation_vector_to_GTE;


A0 = 800f0218;
A1 = w[801517c0] + 70;
A2 = c;
A3 = w[80163c74];
funcd6260;
[80163c74] = w(V0);

V1 = bu[80062d98];
if (V1 == 0)
{
    V0 = h[S2 + 2];
    [S2 + 2] = h(V0 + 1);

    if (V0 >= 7)
    {
        [S2 + 0] = h(-1);
    }
}
////////////////////////////////



////////////////////////////////
// funcd6260
T0 = w[A0 + 0];
T9 = w[A0 + 4];
T1 = T9 & 00ff0000;

800D6270	srl    t1, t1, $0d
800D6274	lui    v0, $ff00
800D6278	and    t2, t9, v0
800D627C	srl    t2, t2, $05
V0 = 1fff1fff;
T0 = T0 & V0;

800D628C	sll    t0, t0, $03
800D6290	add    t1, t1, t0
800D6294	add    t3, t1, t2
800D6298	add    t2, t2, t0

VXY0 = T0; VZ0 = 0;
VXY1 = T1; VZ1 = 0;
VXY2 = T2; VZ2 = 0;
gte_RTPT; // Perspective transform on 3 points.
if (TRZ <= 0)
{
    return A3;
}

V1 = 10 - A2;
800D62C8	srav   v0, v1, v0
800D62CC	sll    v0, v0, $02
800D62D0	add    a1, a1, v0
800D62D4	lw     t0, $0000(a1)
800D62D8	lui    v0, $00ff
800D62DC	ori    v0, v0, $ffff
800D62E0	lui    v1, $0900
800D62E4	and    t0, t0, v0
800D62E8	or     t0, t0, v1
800D62EC	sw     t0, $0000(a3)
800D62F0	and    v0, a3, v0
800D62F4	sw     v0, $0000(a1)

T0 = SXY0;
T1 = SXY1;
T2 = SXY2;

if (V0 == T1)
{
    T1 = T1 + 1;
}

if (T0 == T2)
{
    T2 = T2 + 10000;
}

[A3 + 8] = w(T0);
[A3 + 10] = w(T1);
[A3 + 18] = w(T2);

800D6330	mtc2   t3,r11r12
800D6334	mtc2   zero,r13r21


gte_RTPS; // Perspective transform

800D6344	swc2   t6, $0020(a3)
800D6348	srl    t0, t9, $10
800D634C	andi   t1, t0, $00ff
800D6350	andi   t2, t0, $ff00

[A3 + c] = h(T9); // UV for vertex1
800D6358	add    v0, t9, t1
800D635C	sh     v0, $0014(a3)
800D6360	add    v0, t9, t2
800D6364	sh     v0, $001c(a3)
800D6368	add    v0, t9, t0
800D636C	sh     v0, $0024(a3)
800D6370	lw     v0, $0008(a0)
800D6374	lw     v1, $000c(a0)
800D6378	sw     v0, $0004(a3)
800D637C	sh     v1, $0016(a3)
800D6380	srl    v1, v1, $10
800D6384	sh     v1, $000e(a3)

return A3 + 28;
////////////////////////////////



////////////////////////////////
// 800d3d88
// function used to render dust effect
effect_id = h[801590d4];
unit_id = h[801621f0 + effect_id * 20 + 0];

bone_id = bu[801518e4 + unit_id * b9c + 2b + b + (hu[801621f0 + effect_id * 20 + 2] & 1)];

if (bone_id != ff)
{
    A0 = 800d3bf0;
    funcbc04c;
    new_effect_id = V0;

    A0 = unit_id;
    A1 = bone_id;
    A2 = 801621f0 + new_effect_id * 20 + 4;
    battle_get_point_by_model_bone;

    [801621f0 + new_effect_id * 20 + 6] = h(0);
    [801621f0 + new_effect_id * 20 + e] = h(hu[801621f0 + effect_id * 20 + e]);
    [801621f0 + new_effect_id * 20 + 10] = h(hu[801621f0 + effect_id * 20 + 10]);
}

[801621f0 + effect_id * 20 + 2] = h(h[801621f0 + effect_id * 20 + 2] + 1)

if (h[801621f0 + effect_id * 20 + 2] == 4)
{
    [801621f0 + effect_id * 20 + 0] = h(-1);
}
////////////////////////////////
