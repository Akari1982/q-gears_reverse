80010124

80034cf0 lzs buffer where we read into.
80034cf4 lzs extracted buffer.
80034cfc lzs extracted buffer.
80034d14 lzs extract function.

0x80048dd4 destination array for kernel data by types.
    0 800707C4 command data.
    1 800708C4 attack data.
    2 80082268 battle and growth data.
    3 8009C738 initialization data for savemap.
    4 800722CC item data.
    5 800738A0 weapon data.
    6 80071E44 armor data.
    7 80071C24 accessory data.
    8 800730D0 materia data.

80048f60 menu file array
     0 00000000 00000000
     1 0000D2D9 00004800 ITEMMENU.MNU
     2 0000D2E2 00003000 MGICMENU.MNU
     3 0000D2E8 00017800 EQIPMENU.MNU
     4 0000D2E8 00017800 EQIPMENU.MNU
     5 0000D317 00006000 STATMENU.MNU
     6 0000D323 00000800 CHNGMENU.MNU
     7 0000D324 00002800 LIMTMENU.MNU
     8 0000D329 00002800 CNFGMENU.MNU
     9 0000D377 0000F000 FORMMENU.MNU
     a 0000D395 0001C000 SAVEMENU.MNU
     b 0000D34F 00007800 PATYMENU.MNU
     c 0000D32E 00001000 BGINMENU.MNU
     d 0000D35E 0000C800 NAMEMENU.MNU
     e 0000D377 0000F000 FORMMENU.MNU
     f 0000D330 0000F800 SHOPMENU.MNU
    10 0000D395 0001C000 SAVEMENU.MNU

80048fe8 avatars file array
    00 0000D2BF 00001000
    01 0000D2C1 00001000
    02 0000D2C3 00001000
    03 0000D2C5 00001000
    04 0000D2C7 00001000
    05 0000D2C9 00001000
    06 0000D2CB 00001000
    07 0000D2CD 00001000
    08 0000D2CF 00001000
    09 0000D2D1 00001000
    0a 0000D2D3 00001000
    0b 0000D2D5 00001000
    0c 0000D2D7 00001000
    0d 0000D2D7 00001000
    0e 0000D2D7 00001000
    + 0 [][][][] sector
    + 4 [][][][] size

800491b0 elemental bit accordinance array (00 - 0x0001, 01 - 0x0002 etc)

800491d0 character id -> savemap block assosiation id. (0-0, 1-1, 2-2, 3-3, 4-4, 5-5, 6-6, 7-7, 8-8, 9-6, A-7)

80049208 colors for windows.
    + 0 []       color R1.
    + 1 []       color G1.
    + 2 []       color B1.
    + 3 []       color R2.
    + 4 []       color G2.
    + 5 []       color B2.
    + 6 []       color R3.
    + 7 []       color G3.
    + 8 []       color B3.
    + 9 []       color R4.
    + a []       color G4.
    + b []       color B4.

80049214 array of mm:ss timer divider (0x4 items 0x4 size).
    00000258 600 X0:00
    0000003C  60 0X:00
    0000000A  10 00:X0
    00000001   1 00:0X

80049224
    00989680 10000000
    000F4240  1000000
    000186A0   100000
    00002710    10000
    000003E8     1000
    00000064      100
    0000000A       10
    00000001        1

80049450 array of cursor pos to menu id (0x1 size ) 01 02 03 04 05 06 07 08 09 0A 0B

80049520 array materia type to something (0x1 size 0x5 items)
    09 05 08 04 0A

80049528 array of base type to materia type translation (0x1 size 0xf items).
    00 00 02 02 00 01 02 02 02 03 03 04 04 00 00 00
    0 - Independent
    1 - Support
    2 - Command
    3 - Magic
    4 - Summon

800498a8 size of opcodes.
80049c28 pause table.
80049c40 default AKAO sequence (only A0 here).
80049c44 AKAO left volume table (0x100 items 0x2 bytes each)
80049e44 AKAO right volume table (0x100 items 0x2 bytes each)

0x8004a60c

0x8004a630 []       random seed for field.

0x8004a68c [][][][] key status (mask of channels with on voices).
0x8004a694 [][][][] reverb status.
0x8004a698 [][][][] ???
0x8004a69c [][][][] stored reverb work area start address.
0x8004a6a4 [][][][] reverb mode.
0x8004a6a8 [][]     reverb depth left.
0x8004a6aa [][]     reverb depth right.
0x8004a6b4 [][][][] mask of channels with voice on (auto spu).
0x8004a6b8 [][][][] add flag 0x00000001 if we turn voices on or off in auto spu.
0x8004aaec [][][][] some flags SPU related. if this &1 == 0 then we write data to SPU directly
0x8004aaf4 [][][][] pointer to SPU addreses (0x1f801c00)
0x8004ab2c [][][][] store 0 here when setting new reverb mode.
0x8004ab50 [][][][] max number of times spu memory is allocated.
0x8004ab54 [][][][] number of times spu memory is allocated.
0x8004ab58 [][][][] pointer to spu memory management table, which stores information about each block.
    + 0 [][][][] 0x80000000 free block.
                 0x40000000 end block.
                 0x2fffffff empty block.
                 0x0fffffff address.
    + 4 [][][][] size.
0x8004ab5c array of default reverb work area start address (0x4 size).
0x8004abac array of default reverb settings (0x44 size).

8004bc98 Sin and Cos table. Sin +00 [][], Cos +02 [][]

800504de [][]     store Interrupt mask register (0x1f801074) here.
800504e0 [][][][] store DMA Control Register (0x1f8010f0) here.

80051628 [][][][] some cdrom related callback.
8005162c [][][][] some cdrom related callback.

800617b8 [][][][] store 0 here at the start of total battle circle.


0x80062bb8 array of some function pointers (0x4 size).
    +00 [][][][] 80010C98 function.
    +04 [][][][] 80045A00 function.
    +08 [][][][] 80045A24 function. inner func that handles dma work.
    +0c [][][][] 800451E0 function.
    +10 [][][][] 800458F0 function.
    +14 [][][][] 80045934 function.
    +18 [][][][] 80045984 function. A0 param to DrawOTag inner.
    +1c [][][][] 80045654 function. Passed as parameter when copy palette to ram.
    +20 [][][][] 80045400 function. Passed as parameter when copy palette from ram.
    +24 [][][][] 80045D18 function.
    +28 [][][][] 8004591C function.
    +2c [][][][] 800450F8 function.
    +30 [][][][] 800459D0 function.
    +34 [][][][] 8004602C function.
    +38 [][][][] 800450E0 function.
    +3c [][][][] 80046168 function.
0x80062bf8 [][][][] pointer to 80062bb8. Where pointers to some function stored.

0x80062c00 []       render mode (0 old normal, 1 old normal?, 2 old texture disable, 3 normal render, 4 texture disable).

0x80062d28 [][][][] GPU DMA Channel Control 0x1f8010a8.

0x80062f04 [][][][] ???

0x80062fa0
0x80062d44 GP
    + 1c              [][]     first pad start button delay (0 - delay, 1 - fast)
    + 1e              [][]     second pad start button delay (0 - delay, 1 - fast)
    + 20              [][]     first pad repeat button delay time (f/3).
    + 22              [][]     second pad repeat button delay time (f/3).
    + 24              [][]     first pad start button delay (0 - delay, 1 - fast)
    + 26              [][]     second pad start button delay (0 - delay, 1 - fast)
    + 28              [][]     first pad repeat button delay time (7/1).
    + 2a              [][]     second pad repeat button delay time (7/1).
    + 2c              []       if 1 then system pad started and inited.
    + 2e              [][]     x for tutorial text window.
    + 30              [][]     y for tutorial text window.
    + 44              [][]     10c?
    + 70              [][]     colour for dialog text
    + 72              [][]
    + 74              [][]
    + 76              [][]
    + 78              [][]     number letters to render.
    + 80              [][][][] monowidth text
    + 8c              [][][][] some prev menu (stack)
    + 90              [][][][] some request menu (stack).
    + 97              []       menu add window state.
    + 98              []       menu add window color.
    + 9c              [][][][] menu add window autoclose timer.
    + a0              []       menu add window type of text (static or dynamic position).
    + a1              []       menu add window open frame.
    + a2              [][]     menu add window x dynamic position.
    + a4              [][]     menu add window y dynamic position.
    + a8 (0x80062dec) [][][][] pointer to menu load address.
    + ac              [][][][] menu window height.
    + b4              [][][][] type of menu show.
                               0 - normal single menu item header
                               1 - normal menu list
                               2 - collapse menu
                               3 - fadeout
                               4 - change from one menu to another without return
                               5 - back to main menu
                               6 - play fadeout and menu list expand animation
    + b8              []       number of letters in string to render.
    + b0              []       global or single letter draw mode for menu text render (0 - single letter, whole string otherwise).
    + bc (0x80062e00) [][][][] sound event.
    +110              []       store array of values from 0x5 type materia to use in paired functions.
    +118              []       init with 0. Store 1 here if we has mastered Preemptive materia.
    +11c              [][][][] pointer to unit data (8009d84c).
    +120              []       number of enabled commands.
    +124              []       number of enabled spells.
    +128              [][]     init with 0. Add gil plus value. Limit to 0x20.
    +12a              [][]     init with 0. Add encounter value (enemy lure/away). Limit to 0xff.
    +12c              [][]     init with 0. Add chokobo lure value. Limit to 0x20.
    +12e              [][]     init with 0. Add preemptive value. Limit it to 0x55.
    +130              [][]     init with 0. Add here number of stars equipped enemy away materia has. Limit to 0xff.
    +134              []       Store 1 2 8 or 10 here in case of hp absorb, mp absorb, steal as well, added cut nateria pairing. used in appropriate function.
    +138              [][][][] number of command (used in cycle during copy commands from temp to unit structure)
    +13c              [][][][] number of counter materia already applied (8 max)
    +140              [][][][] store 8 here if we have counter materia equipped (set in pair check). Used when set counter command.
    +144              [][]     store 0 here. Used when set counter command.
    +148              []       store 1 here if we has magic or master magic materia in battle, 2 in case of w-magic.
    +14c              []       store 1 here if we has summon or master summon materia in battle, 2 in case of w-summon.
    +150              [][][][] wait tutorial opcode value.
    +158 (0x80062e9c) [][][][] tutorial data.
    +160              [][][][] ot for menu.
    +164              [][]     menu appear/disappear frame.
    +174              [][][][] store here pointer to text for menu add window.
    +188              [][][][] expand menu animation step.
    +1c8              [][][][] previous menu for animation to play.
    +1cc              [][][][] store AP to next star here (in case of menu).
    +1d0              [][][][] store -1 here at the start of total battle circle. We set error id here.
    +1d4              []       add gil plus value from all player structure. Limit to 0x20.
    +1d5              []       calculate and add enemy lure value (Limit 0x2-0x20).
    +1d6              []       add chokobo lure value from all player structure. Limit to 0x20.
    +1d7              []       add preemptive value from all player structure. Limit to 0x55. Add bit 0x80 if we have mastered preemptive materia equipped.
    +1dc              [][][][] menu change fade and current animation frame.
    +208              [][]     menu visibility mask.
    +20c              [][]     menu locking mask.
    +214 (0x80062f58) [][][][] frame buffer id.
    +220              [][][][] current main menu state
                               0 - menu list selection
                               1 - party selection
                               2 - order menu (party selection and row change).
    +238              [][][][] address to store materia data in case of menu. Init 8 items [][] from +a with 0.
                                +0 []       number of learned stars in materia.
                                +1 []       total number of stars in materia.
                                +4 [][][][] ap to next star in materia.
    +23c              [][][][] order menu char selected
    +244              [][][][] some flags. used in loading units.
    +250              [][][][] selected menu.
    +258              [][][][] text row count.
    +25c (0x80062fa0) [][][][] ???
    +278              [][][][] total number of stars currently parsing materia has.
    +27c              [][][][] state of main menu.
                              -1 - dissapear complete (exit menu cycle).
                               0 - appearing.
                               1 - appear complete.
                               2 - disappearing.
    +280 (0x80062fc4) [][][][] menu OT for render (store needed OT here for all menu render).
    +2b0              [][]     value step of menu appearing/disappearing.
    +2b8              []       we store magic number here according to added materia. (0x11 in case Underwater or HP<->MP)
    +2d8              [][][][] selected char in order menu.
    +2dc              []       0 - we load battle, 1 - we load menu.

0x80062cd0 [][][][] 0x1f801810. GP0 Send GP0 Commands/Packets (Rendering and VRAM Access). GPUREAD Read responses to GP0(C0h) and GP1(10h) commands.
0x80062cd4 [][][][] 0x1f801814. GP1 Send GP1 Commands (Display Control). GPUSTAT Read GPU Status Register.
0x80062ce0 [][][][] 0x1f8010a8.
0x80062ce4 [][][][] 0x1f8010e0.
0x80062ce8 [][][][] 0x1f8010e4.
0x80062cec [][][][] 0x1f8010e8.
0x80062cf0 [][][][] 0x1f8010f0.


80062d78 [][]     first pad button mask (remaped if needed)
80062d7a [][]     first pad previous button mask.
80062d7c [][]     first pad pressed button mask.
80062d7e [][]     first pad repeated button mask with pressed mask.
80062d80 [][]     second pad button mask.
80062d82 [][]     second pad previous button mask.
80062d84 [][]     second pad pressed button mask.
80062d86 [][]     second pad repeated button mask with pressed mask.
80062d88 [][]     first pad button mask from 80062d78.
80062d8a [][]     first pad previous button mask.
80062d8c [][]     first pad pressed button mask.
80062d8e [][]     first pad repeated (different speed) button mask with pressed mask.
                    0x0001 - L2
                    0x0002 - R2
                    0x0004 - L1.
                    0x0008 - R1.
                    0x0010 - triangle.
                    0x0020 - circle.
                    0x0040 - cross.
                    0x0080 - square.
                    0x0100 - select.
                    0x0800 - start.
                    0x1000 - up.
                    0x2000 - right.
                    0x4000 - down.
                    0x8000 - left.

0x80062d98 []       if this is not 0 we will not render effect?

0x80062f00 [][][][] 

0x80062f24 [][][][] place in memory for dialog packets creation (80077f64 + buffer_id * 3400).

0x80062f5e [][]     global volume?

0x80062f70 [][]     global left right reverberation pan.
0x80062f74 [][][][] pointer to 0x80089580. AKAO scripts. EFFECT.ALL offsets.
0x80062f84 [][][][] pointer to 0x8008a580. AKAO scripts. EFFECT.ALL data.

80062f8c [][][][] store 1 here at start of system_akao_execute. We will not add AKAO commands until this is 0.

80062fa0 [][][][] set to 0 in pad start and init sequence. Input enabled.

80062fb8 [][]     reverb multiplier.

0x80062fe6 [][]     global pitch addition?

80062fea [][][][] used as some tempo modificator for AKAO sequenser.

0x80063010 [][][][] index in 0x80081dc8 array.
80063014 [][][][] pointer to temp array for action calculation.

80063560 we copy kernel string here to display.
80063690 kernel strings start.
8006893e battle and battle-screen text in kernel

80069490 array of kernel string pack pointers (0x2 size).

// temp data to init
800694b4 []       0x10 slots array where we store number of summons (we just add number of active stars to current value, so if 2 or more materias equipped there can be more than 5 summons of the same type). Set 0xff in case of master summon.
800694c4 []       0x10 slots array. Init with 0. Add 1 to this every time we add paired Quadra Magic with this summon.
800694d4 []       0x10 slots array. Init with 0. Add number of stars in Quadra Magic linked to this summon.
800694e4 [][]     Init with 0. Add materia strength modifier (Materia 00 Plus). Limit to 0x64.
800694e6 [][]     Init with 0. Add materia vitality modifier (Materia 01 Plus). Limit to 0x64.
800694e8 [][]     Init with 0. Add materia magic modifier (Magic Plus). Limit to 0x64.
800694ea [][]     Init with 0. Add materia spirit modifier (Materia 03 Plus). Limit to 0x64.
800694ec [][]     Init with 0. Add materia dexterity modifier (Speed Plus). Limit to 0x64.
800694ee [][]     Init with 0. Add materia luck modifier (Luck Plus). Limit to 0x64.
800694f0 [][]     Init with 0. Add materia attack modifier (Materia 06 Plus). Limit to 0x64.
800694f2 [][]     Init with 0. Add materia defense modifier (Materia 07 Plus). Limit to 0x64.
800694f4 [][]     Init with 0. Add materia equip boost. Add materia max hp modifier. Add materia hp modifier (HP Plus). Limit to 0x64.
800694f6 [][]     Init with 0. Add materia equip boost. Add materia max mp modifier. Add materia mp modifier (MP Plus). Limit to 0x64.
800694f8 [][]     Init with 0. Add materia exp modifier (Exp Plus) (0x18 0x20). Limit to 0x64. Limit to 0x20.
800694fa [][]     Init with 0. Add materia cover modifier (added from Cover materia). Limit to 0x64.
800694fc [][]     Init with 0. Add materia equip strength modifier. Limit to 0xff if greater than zero.
800694fe [][]     Init with 0. Add materia equip vitality modifier. Limit to 0xff if greater than zero.
80069500 [][]     Init with 0. Add materia equip magic modifier. Limit to 0xff if greater than zero.
80069502 [][]     Init with 0. Add materia equip spirit modifier. Limit to 0xff if greater than zero.
80069504 [][]     Init with 0. Add materia equip luck modifier. Limit to 0xff if greater than zero.
80069506 [][]     Init with 0. Add materia equip dexterity modifier. Limit to 0xff if greater than zero.
80069508 active commands (0x3 size 0x10 items).
    +0 []                  Init with ff. Action id.
    +1 []                  Init with 0. We store number of stars here (but only in case of w command).
    +2 []                  Init with 0. Flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut)
80069538 [][]     Init with unit structure 0x440 + 0 (not inited data).
8006953a [][]     Init with unit structure 0x440 + 1 (not inited data).
8006953c [][]     Init with unit strength. Apply all boosts and store result here (limit to 0xff).
8006953e [][]     Init with unit vitality. Apply all boosts and store result here (limit to 0xff).
80069540 [][]     Init with unit magic. Apply all boosts and store result here (limit to 0xff).
80069542 [][]     Init with unit spirit. Apply all boosts and store result here (limit to 0xff).
80069544 [][]     Init with unit dexterity. Apply all boosts and store result here (limit to 0xff).
80069546 [][]     Init with unit luck. Apply all boosts and store result here (limit to 0xff).
80069548 [][]     Init with attack from weapon. Apply all boosts and store result here. Add boosted strength (limit to 0xff)
8006954a [][]     Init with defense from armor. Apply all boosts and store result here. Add boosted vitality (limit to 0xff)
8006954c [][]     Init with 0. Add magic to magic attack.
8006954e [][]     Init with 0. Add spirit to magic defense.
80069550 [][]     Init with base hp. Apply all boosts and store result here (limit to 9999).
80069552 [][]     Init with base mp. Apply all boosts and store result here (limit to 999).
80069554 0x38 slots for active spels (0x5 size).
    +0 []       magic id. Init with ff. Set if of active spell.
    +1 []       number of "all" effect. Init with 0. Add number of stars from paired all materia.
    +2 []       init with 0. Add 1 to this every time we add paired Quadra Magic with this magic.
    +3 []       init with 0. Add number of stars in Quadra Magic linked to this magic.
    +4 []       init with 0. Add number of stars in MP turbo linked to this magic to this 0xe0 (5 maximum) and leave 0x1f as is. 0x1f - flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut)
8006966c [][][][] we copy 8 weapon materia data here (size 0x4).
8006968c [][][][] we copy 8 armor materia data here (size 0x4).

800696ac first pad buffer.
800696ac + 22 second pad buffer.
    +00 []       status (00h=okay, FFh=timeout/wrong ID2)
    +01 []       ID1    (eg. 41h=digital_pad, 73h=analogue_pad, 12h=mouse, etc.)
    +02 [][]     (max 16 halfwords, depending on lower 4bit of ID1)

800698e8 [][][][] start cd sector to load (increment during load chain).
800698ec [][][][] retry set loc number. After some number of retry we reload disc.
800698f0 temp buffer for lzs compressed file.

8006e0f4 [][][][] set to 0 when set cd load chain to 0xc.
8006e0f8 [][][][] size to read. Clamp to 0x9 if greater.

800707bc [][]     battle id.
800707be [][]     battle result stored here. Loaded by opcode 0x23 btrlt.
800707c0 font width data.
800707c4 command data in kernel (size 0x8).
    + 0  []       default something.
    + 1  []       target type.
    + 4  [][]     default 8th 2bytes from attack data (Camera movement single).
    + 6  [][]     default Ath 2bytes from attack data (Camera movement multiple).
800708c4 attack data in kernel file (2nd section) (0x1c size).

80071a60 [][][][] cdrom load chain type id.
                   0 initial state. Ready to new chain.
                   1 set cdrom location.
                        1 (set location) -> 2 (check if location is set) -> 11 (do nothing) -> 10 (finish loading) -> 0
                   3 usual file load.
                        3 (set location) -> 4 (check if location is set) -> 5 (set to read data) -> 6 (check reading) -> 11 (do nothing) -> 10 (finish loading) -> 0
                   7 state for new disc load.
                        7 (do nothing) -> 0
                   8 func35744() 
                   9 func35430() 
                   a func34420() do nothing.
                   b start LZS load.
                        b (set location) -> c (check if location is set) -> d (set to read data) -> e (extract loaded part) -> b (set next part to extract) or 11 (do nothing) -> 10 (finish loading) -> 0
                   f func34420() do nothing.
                  12 func34420() do nothing.
                  13 abort loading.
                        13 (set cd pause) -> 14 (check if cd paused and finish) -> 0
80071a68 []       amm.
80071a69 []       ass.
80071a6a []       asect.
80071a6c [][][][] cdrom left load size.
80071a80 [][][][] cdrom load buffer ptr.
80071a84 [][][][] cdrom load callback.

80071c24 accessory data in kernel (0x10 size).

80071e28 [][][][] some data world map related.
80071e2c number of opened windows. Increment this during window initialization. Decrement during closing.

80071e44 armor data in kernel (0x24 size).
800722cc item data in kernel (0x1c size).
800730d0 materia data in kernel file (0x14 size).
800738a0 weapon data in kernel (0x2c size).

0x80075f28 INSTR.DAT number of struct with size 0x40
0x80076c68 add instrstruct with size 0x40
    +00 [][][][] start offset.
    +04 [][][][] loop offset.
    +08 []       attack rate.
    +09 []       decay rate.
    +0a []       sustain level.
    +0b []       sustain rate.
    +0c []       release rate.
    +0d []       attack mode.
    +0e []       sustain mode.
    +0f []       release mode.
    +10 [][][][] pitch 0.
    +14 [][][][] pitch 1.
    +18 [][][][] pitch 2.
    +1c [][][][] pitch 3.
    +20 [][][][] pitch 4.
    +24 [][][][] pitch 5.
    +28 [][][][] pitch 6.
    +2c [][][][] pitch 7.
    +30 [][][][] pitch 8.
    +34 [][][][] pitch 9.
    +38 [][][][] pitch a.
    +3c [][][][] pitch b.

0x80077f28 [][][][] mask of channels we put voice on (auto spu).
0x80077f2c [][][][] mask of channels we put voice off (auto spu).

0x8007eaac array of two global DRAWENV (0x2 items, 0x5c size).
0x8007eb68 array of two global DISPENV (0x2 items, 0x14 size).

0x8007ebe4 default AkaoVoiceAttr.

0x8007ec10 copy of channels struct for usual music.
0x800804d0 copy of channels struct for "ffvii_main_theme".

0x80081dc8 struct with size 0x24 where we store data for AKAO parser. Store here data from 8009a000.
    // for 0x10, 0x14, 0x15, 0x18, 0x19
    +00 [][][][] command 0x10, 0x14, 0x15, 0x18, 0x19
    +04 [][][][] offset to akao sequence.
    +08 [][][][] length of sequence.
    +0c [][][][] music id
    +10 [][][][] w[8009a008]

80082268 player ai and some data in kernel (3rd file).
    +61c player ai script.

8008326c arrays of windows parent entity (size 0x01).
80083274  windows data (size 0x30).
+00 [][][][] pointer to dialog string.
+04 [][]     WINDOW x.
+06 [][]     WINDOW y.
+08 [][]     WINDOW width.
+0a [][]     WINDOW height.
+0c [][]     WINDOW current width. Set during dialog init (width / 4) (8 - min value).
+0e [][]     WINDOW current height. Set during dialog init (height / 4) (8 - min value).
+10 [][]     text scrolling value.
+12 [][]     number of letters in window string.
+14 [][]     bytes in window string.
+16 [][]     current row in string. Incremented during copy.
+18 []       store here i if window oveflowed by height during render. 0 otherwise.
+19 []       WMODE style.
+1a []       show pointer.
+1b []       WSPCL type.
+1c []
+1d []       WNUMB number of digits in number.
+1e [][]
+20 [][][][] WNUMB number.
+24 [][]     pointer X.
+26 [][]     pointer Y.
+28 [][]     WSPCL x.
+2a [][]     WSPCL y.
+2c [][]     window state.
+2e []       WMODE cbc.
                0x01 permanency.
                0x02 show all text immediately.
+2f []

0x80083334 copy of channels config for usual music.
0x80083394 copy of channels config for "ffvii_main_theme".

0x80083580 we copy here akao sequence data when init music 0x10, 0x14 or 0x15.
0x80086580 we copy copy of sequence 0x80083580 here.

0x80089580 load effect.all file here

80095dd4 [][]     render type func. Render called in separate thread so we set type of render func to call from main thread.
                  0 - normal render.
                  3 - battle swirl effect.

0x800965ec [][]     previous game state. Id same as 8009c560
                    1 - field.
                    2 - battle.
                    3 - world map.
                    4 - battle.
                    5 - menu.
                    6 - highway.
                    7 - chocobo.
                    8 - snowboard.
                    9 - condor.
                    a - submarine.
                    b - jet.
                    c - disc change.
                    d - menu.
                    e - snowboard2.
                   10 - ???

0x80095508
0x80096608 structs for akao channels (0x108 size 0x18 items).
0x80097ec8 structs for akao channels (0x108 size 0x18 items).
0x80099788 structs for akao channels (0x108 size 0x8 items). For voices with mask 0x10000 and up.
    +000 [][][][] AKAO sequence pointer.
    +004 [][][][] loop point 0.
    +008 [][][][] loop point 1.
    +00c [][][][] loop point 2.
    +010 [][][][] loop point 3.
    +014 [][][][] drum offset.
    +018 [][][][] address into wave table for frequency lfo.
    +01c [][][][] address into wave table for volume lfo.
    +020 [][][][] address into wave table for volume pan lfo.
    +024 [][][][] id of overlay channel.
    +028 [][][][] id of alternative channel.
    +02c [][][][] volume multiplier. Store 0x78 here during init.
    +030 [][][][] base pitch. Summarize 0x30, 0x36 and 0xd6 it to get real pitch.
    +034 [][][][] init with 0. pitch related.
    +036 [][]     pitch addition. summarize 0x30, 0x36 and 0xd6 it to get real pitch.
    +038 [][][][] init with 0. Update mirror. If flag is set we update main params from mirror channel (previous 0x108 channel data).
                    0x00000001 - update frequency lfo.
                    0x00000002 - update volume lfo.
                    0x00000004 - update volume pan lfo.
                    0x00000008 - add when we save script pointer using system_akao_opcode_ec_drum_mode_on().
                    0x00000010 - update pitch. We update from +0xf8 from previous channel.
                    0x00000020 - use prev channel pitch for volume mod.
                    0x00000100 - overlay used.
                    0x00000200 - alt voice used.
                    0x00000400 - ???.
    +03c [][]     ???
    +03d [][]     pitch modifier. We multiply this with real calculated pitch if +0x54 != 2.
    +040 [][][][] ???
    +044 [][][][] volume level. Often used as 2 top bytes.
    +048 [][][][] volume_level_new.
    +04c [][][][] pitch growth. We increment pitch addition by this every frame.
    +050 [][][][] set to -1.
    +054 [][]     0 - ???, 1 - set for normal sound effects, 2 - playing menu sound (0x30).
    +056 [][]     pause. Set to 0x204 in case of 0x30 command. Set to 0x101.
    +058 [][]     current instrument.
    +05a [][]     ???
    +05c [][]     init with 0.
    +05e [][]     ???
    +060 [][]     base volume pan. Store 0x4000 here in case of playing system sound 0x30.
    +062 [][]     set to 0.
    +064 [][]     init with 0. Number of steps for pitch changes?.
    +066 [][]     pitch corrention. Set in 0xa5 opcode.
    +068 [][]     pitch slide speed.
    +06a [][]     ???
    +06c [][]     init with 0.
    +06e [][]     init with 0.
    +072 [][]     frequency lfo wait.
    +074 [][]     frequency lfo wait current;
    +076 [][]     frequency lfo refresh interval.
    +078 [][]     frequency lfo refresh interval counter.
    +07a [][]     frequency lfo table key node index.
    +07c [][]     frequency lfo multiplier.
    +07e [][]     frequency lfo multiplier. Init with 0.
    +080 [][]     depth fade speed.
    +082 [][]     depth fade destination.
    +086 [][]     volume lfo wait.
    +088 [][]     volume lfo wait current.
    +08a [][]     volume lfo refresh interval.
    +08c [][]     volume lfo refresh interval counter.
    +08e [][]     volume lfo table key node index.
    +090 [][]     volume lfo multiplier.
    +092 [][]     init with 0.
    +098 [][]     volume pan lfo refresh interval.
    +09a [][]     volume pan lfo refresh interval counter.
    +09c [][]     volume pan lfo table key node index.
    +09e [][]     init with 0.
    +0a0 [][]     init with 0.
    +0a4 [][]     noise switch delay.
    +0a6 [][]     pitch lfo switch delay.
    +0b8 [][]     index of last saved loop point (0-3). init with 0.
    +0ba [][]     something for loop point 0. Set to 0 when save loop point.
    +0bc [][]     something for loop point 1. Set to 0 when save loop point.
    +0be [][]     something for loop point 2. Set to 0 when save loop point.
    +0c0 [][]     something for loop point 3. Set to 0 when save loop point.
    +0c2 [][]     we store here pause after setting it.
    +0c4 [][]     init with 0. pause_multiplier.
    +0c6 [][]     volume multiplier.
    +0ca [][]     ???
    +0cc [][]     absolute transposition.
    +0ce [][]     frequency multiplier.
    +0d0 [][]     pitch saved parameters.
    +0d2 [][]     pitch slide destination.
    +0d4 [][]     ???
    +0d6 [][]     pitch lfo value.
    +0d8 [][]     volume lfo value.
    +0da [][]     volume pan lfo value.
    +0dc [][][][] voice_id.
    +0e0 [][][][] set flags. We remove flag as soon as we set params to SPU.
                    0x00000001 - set left volume.
                    0x00000002 - set right volume.
                    0x00000010 - set pitch.
                    0x00000080 - set start offset.
                    0x00000100 - set attack rate.
                    0x00000200 - set sustain rate.
                    0x00000400 - set release rate.
                    0x00000800 - set attack mode.
                    0x00001000 - set decay rate.
                    0x00002000 - set sustain mode.
                    0x00004000 - set release mode.
                    0x00008000 - set sustain level.
                    0x00010000 - set loop offset.
    +0e4 [][][][] start offset.
    +0e8 [][][][] loop offset.
    +0ec [][][][] attack mode.
                    0x05 - exponential.
                    else linear.
    +0f0 [][][][] sustain mode.
                    0x01 - sustain linear increase.
                    0x05 - sustain exponential increase.
                    0x07 - sustain exponential discrease.
                    else sustain linear discrease.
    +0f4 [][][][] release mode.
                    0x7 - exponential descrease.
                    else linear discrease.
    +0f8 [][]     pitch.
    +0fa [][]     attack rate.
    +0fc [][]     decay rate.
    +0fe [][]     sustain level.
    +100 [][]     sustain rate.
    +102 [][]     release rate.
    +104 [][]     left volume.
    +106 [][]     right volume.

0x80099fcc [][][][] mask of used sound channels.
0x80099fd0 [][][][] some channel mask. Remove from here channels we want to start sound.
0x80099fd4 [][][][] some channel mask. Remove from here channels we want to start sound.
0x80099fd8 [][][][] some channel mask. Add here channels we want to start sound.
0x80099fdc [][][][] some channel mask. Remove from here channels we want to start sound.
0x80099fec [][][][] noise soind voices mask.
0x80099ff0 [][][][] reverb sound voices mask.
0x80099ff4 [][][][] pitch lfo sound voices mask.
0x80099ffa [][]     noise clock.


8009a000 AKAO data
    +00 [][]     clear with 0.
                    Store 0xc8, 0xe4, 0xb0, 0xb1, 0xb2, 0xb3 in AKAO2 opcode.
                    Store 0xf0, 0xc0, 0xa0, 0xa1, 0xa2, 0xa3, 0x28, 0x29, 0x2a, 0x2b in AKAO opcode.
                    Store 0x10 in MUSIC opcode (play music?)
                    Store 0x14 in MUSVT opcode (play music?)
                    Store 0x15 in MUSVM opcode (play music?)
                    Store 0x20 in SOUND opcode (play sample?)
                    Store 0x30 when we try play sound.
    +04 [][][][] clear with 0.
                    Store 0x7000, 0x7fff in AKAO2 opcode during 0xc8 in +00.
                    Store 0x7f in AKAO opcode during 0xc0, 0xa0, 0xa1, 0xa2, 0xa3 in +00.
                    Store 0x3f in AKAO opcode during 0x28, 0x29, 0x2a, 0x2b in +00.
                    Store 0x00 in AKAO opcode during 0xf0 in +00.
                    Store offset to AKAO sequence in case of 0x10, 0x14, 0x15 in +00.
                    Store 0x40 in case of 0x20 in +00.
    +08 [][][][] clear with 0.
                    Store 0x0000 here in all cases in AKAO2 and AKAO.
                    Store 0x0168 in case of 0x20 in +00.
    +0c [][][][] clear with 0.
                    Store 0x0000 here in all cases in AKAO2 and AKAO.
    +10 [][][][] clear with 0.
                    Store 0x0000 here in all cases in AKAO2 and AKAO.
    +14 [][][][] clear with 0.
                    Store 0x0000 here in all cases in AKAO2 and AKAO.
    +18 [][][][] clear with 0.

8009a0c8 array of menu cursor data (0x12 size).
    + 2 [][]     scroll pos.
    + 6 [][]     total y items.
    + 8 [][]     scroll dir (0 - not scroll, 1 - up, 2 - down).
    + a []       x cursor pos.
    + b []       y cursor pos.
    + c []       x pos items.
    + d []       y pos items.
    + f []       scroll animation frame.
    +10 []       x warp around (0 - not warp, 1 - warp around, 2 - warp around with y move).
    +11 []       y warp around (0 - not warp).

0x8009a104 start of akao channels config
    + 0 [][][][] some settings for music (0x01- stereo, 0x02 - mono, 0x04 stereo with some channel volume spreading)
    + 4 [][][][] used music channel mask.
    + 8 [][][][] channels to be played mask.
    + c [][][][] some channels mask.
    +10 [][][][] some channels mask.
    +18 [][][][] tempo of music. Used as >> 0x10.
    +1c [][][][] tempo music increment.
    +20 [][][][] tempo music counter. If this & 0xffff0000 then we update akao sequence.
    +24 [][][][] overlay voices mask.
    +28 [][][][] alt voices mask.
    +2c [][][][] noise music voices mask.
    +30 [][][][] reverb music voices mask.
    +34 [][][][] pitch lfo music voices mask.
    +38 [][][][] spu config update flags.
                    0x00000010 - update noise clock frequency.
                    0x00000080 - update reverb.
    +3c [][][][] reverb mode.
    +40 [][][][] reverb depth. some value we can increment this by 8009a148 if 8009a154 not 0.
    +44 [][][][] increment for +40.
    +48 [][]     number of steps for tempo music increase.
    +4a [][]     AKAO music id for currently playing sequence.
    +4c [][]     store here +4e after jump has occured.
    +4e [][]     storage for 0xef conditional jump.
    +50 [][]     this is number of times we need to increment +40 each update by +44.
    +52 [][]     noise clock.
    +54 [][]     ???
    +56 [][]     upper timer equal value.
    +58 [][]     upper timer value. When this reach +56 then we reset this to 0 and increment +5e. Stored in CHMPH opcode.
    +5a [][]     lower timer equal value.
    +5c [][]     lower timer value. When this equal to +5a then we reset this to 0 and increment +58.
    +5e [][]     top timer. Stored in CHMPH opcode.
0x8009a164 start of second config.


0x8009c540 []       seed for battle random in field.

0x8009c560 [][][][] current state of game:
                    1 - field.
                    2 - battle.
                    3 - world map.
                    4 - battle.
                    5 - menu.
                    6 - highway.
                    7 - chocobo.
                    8 - snowboard.
                    9 - condor.
                    a - submarine.
                    b - jet.
                    c - disc change.
                    d - menu.
                    e - snowboard2.
                   10 - ???
0x8009c564 stored SpuReverbAttr.
    +  0 [][][][] store here which reverb channel to update (6 - left and right) in spu update.
    +  8 [][]     store here reverb depth left in spu update.
    +  a [][]     store here reverb depth right in spu update.
0x8009c578 stored SpuCommonAttr.
0x8009c5a0 array of some volume mod for channels. (0xc size 0x18 items)
    + 0 [][][][] value.
    + 4 [][][][] step.
    + 8 [][][][] steps.

8009c6e4 savemap start
    +  54          savemap character data (0x84 size).
        +00 []       character id.
        +01 []       level.
        +02 []       strength.
        +03 []       vitality
        +04 []       magic
        +05 []       spirit
        +06 []       dexterity
        +07 []       luck
        +08 []       strength bonus
        +09 []       vitality bonus
        +0a []       magic bonus
        +0b []       spirit bonus
        +0c []       dexterity bonus
        +0d []       luck bonus
        +0e []       current limit level
        +0f []       current limit bar (0xFF = limit break)
        +10          name string.
        +1c []       equipped weapon.
        +1d []       equipped armor.
        +1e []       equipped accessory.
        +1f []       flags (0x10 sadness, 0x20 fury).
        +20 []       char order (0xff normal, 0xfe back row).
        +21 []       level progress bar (0-255)
        +22 [][]     mask of learned limit skills
                        0x0001: Limit Lv. 1-1
                        0x0002: Limit Lv. 1-2
                        0x0004: Always 0 (reserved bit or spacer/breaker/end of limit)
                        0x0008: Limit Lv. 2-1
                        0x0010: Limit Lv. 2-2
                        0x0020: Always 0 (reserved bit or spacer/breaker/end of limit)
                        0x0040: Limit Lv. 3-1
                        0x0080: Limit Lv. 3-2
                        0x0100: Always 0 (reserved bit or spacer/breaker/end of limit)
                        0x0200: Limit Lv. 4
        +24 [][]     number of kills.
        +2c [][]     current hp.
        +2e [][]     max hp (before materia alterations).
        +30 [][]     current mp.
        +32 [][]     max mp (before materia alterations).
        +38 [][]     max hp (after materia alterations).
        +3a [][]     max mp (after materia alterations).
        +3c [][][][] current exp.
        +40 [][][][] weapon materia slot 1.
        +44 [][][][] weapon materia slot 2.
        +48 [][][][] weapon materia slot 3.
        +4c [][][][] weapon materia slot 4.
        +50 [][][][] weapon materia slot 5.
        +54 [][][][] weapon materia slot 6.
        +58 [][][][] weapon materia slot 7.
        +5c [][][][] weapon materia slot 8.
        +60 [][][][] armor materia slot 1.
        +64 [][][][] armor materia slot 2.
        +68 [][][][] armor materia slot 3.
        +6c [][][][] armor materia slot 4.
        +70 [][][][] armor materia slot 5.
        +74 [][][][] armor materia slot 6.
        +78 [][][][] armor materia slot 7.
        +7c [][][][] armor materia slot 8.
        +80 [][][][] exp to next level.
    + 4f8 []       party member slot 1 (used in battle).
    + 4f9 []       party member slot 2 (used in battle).
    + 4fa []       party member slot 3 (used in battle).
    + 4fc party item stock array.
    + 77c party materia stock (0x4 size 0xc8 items).
    + a9c materia stolen by yuffie (0x4 size 0x30 items).
            0xffffff00 materia exp (0xffffff - mastered).
            0x000000ff materia id.
    + b5c end of array
    + b7c [][][][] party gil amount.
    + b80 [][][][] total seconds played.
    + b84 [][][][] countdown seconds for timer (set in STTIM).
    + b88 [][][][] seconds fraction.
    + b90 [][][][] ???
    + b94 [][]     ???
    + b96 [][]     field id.
    + ba4 savemap memory bank 1/2 start
    + ba4 (+00) [][]     game progress
    + bb4 (+10) []       played hours.
    + bb5 (+11) []       played minutes.
    + bb6 (+12) []       played seconds.
    + bb7 (+13) []       played frames. From 0 to 30 (dec) in one sec.
    + bb8 (+14) []       countdown timer hours.
    + bb9 (+15) []       countdown timer minutes.
    + bba (+16) []       countdown timer seconds.
    + bbb (+17) []       countdown timer frames. From 0 to 30 (dec) in one sec.
    + bbe       [][]     number of escapes.
    + bc0 (+1c) [][]     menu visibility mask.
    + bc2 (+1e) [][]     menu locking mask.
                            0x0001 - item
                            0x0002 - magic
                            0x0004 - materia
                            0x0008 - equip
                            0x0010 - status
                            0x0020 - order
                            0x0040 - limit
                            0x0080 - config
                            0x0100 - PHS
                            0x0200 - SAVE
    + be4 bit array of key items (0x1bit size 0x40 items 0x8 bytes total)
    + bef       []       some flags.
                            0x01 set when any summon equiped.
                            0x02 set when enemy skill equipped.
    + c03       []       init with 0 on worldmap loading.
    + c1e (+7a) []       flags
                            0x01 - used in world map.
                            0x40 - tagret text shown in battle.
                            0x80 - underwater timer in battle.
    + ca4 savemap memory bank 3/4 start
    + cad (+09) []       character id in slot 1.
    + cae (+0a) []       character id in slot 2.
    + caf (+0b) []       character id in slot 3.
    + da4 savemap memory bank b/c start
    + ea4 savemap memory bank d/e start
    + eaa (+06) []       some value that increments each battle check.
    + eab (+07) []       some value that increments each battle check.
    + f04       []       ??? Northern Cave - Progress (TODO: more info) 
    + f0c field map name for menu (0x17 size).
    + f24 
    + f2a (+86) []       flags
                            0x10 - used in world map
    + f5a [][]     ????
    + f5c array of coords for vehicles left on map (0x8 size 0x6 items) (cloud, wild chokobo, bronco/chocobo, buggy/highwind, submarine, diamond/ultimate/ruby).
        +00 [][][][] 0x0007ffff x.
                     0x00f80000 model id.
                     0xff000000 direction.
        +04 [][][][] 0x0003ffff z.
                     0xfffc0000 y.
    + f98 [][][][] ???
    + f9c [][]     0x0fff camera rotation.
                   0x3000 camera view.
                   0xc000 camera mode.
    + fa6
    + fa2 []       set id from here as world map to load (planet, underwater, snowfield)
    + fa4 savemap memory bank 7/f start
    +1013 (+6f) []       all mastered materia for given type exist.
    +1027 (+83) []       flags.
                         0x80 - enable rain on field. If set it gradually become stronger. If unset if gradually fades away.
    +10a4 [][]     character lock mask. You cant move character from and out party (in game methods)
    +10a6 [][]     character availability mask. Add character here when adding it to party or enable it with opcode.
                        0x0001 - Cloud.
                        0x0002 - Barret.
                        0x0004 - Tifa.
                        0x0008 - Aerith.
                        0x0010 - Red XIII.
                        0x0020 - Yuffie.
                        0x0040 - Cait Sith.
                        0x0080 - Vincent.
                        0x0100 - Cid.
                        0x0200 - U (unknown).
    +10d8 []       battle speed.
    8009d7bd []       battle message speed (used as value >> 2 + 4)
    +10da [][]     config flags
                        0x1c00 - magic order
                        0x0300 - camera (0x0000-auto,0x0100-fixed)
                        0x00c0 - atb/recommended/wait (0x0000-atb,0x0040-recommended,0x0080-wait)
                        0x0010 - cursor (0x0000-initial,0x0010-memory)
                        0x0004 - conroller (0x0000-normal,0x0004-custom)
                        0x0001 - sound (0x0000-mono,0x0001-stereo)
    +10dc array of button remap. Each record represent one button in buttons mask (0x10 items 0x1 size)
        +00 [] new button bit
    +10ec []       message speed.



8009d84c start of some unit structure (size 0x440).
    +  0 []       set exp modifier from temp.
    +  1 []       set cover modifier from temp.
    +  2 []       strength.  Init with 0. Add strength bonus from weapon. Add base stat + bonus stat.
    +  3 []       vitality.  Init with 0. Add vitality bonus from weapon. Add base stat + bonus stat.
    +  4 []       magic.     Init with 0. Add magic bonus from weapon. Add base stat + bonus stat.
    +  5 []       spirit.    Init with 0. Add spirit bonus from weapon. Add base stat + bonus stat.
    +  6 []       dexterity. Init with 0. Add dexterity bonus from weapon. Add base stat + bonus stat.
    +  7 []       luck.      Init with 0. Add luck bonus from weapon. Add base stat + bonus stat.
    +  8 [][]     set with attack from temp.
    +  a [][]     set with defense from temp.
    +  c [][]     set with magic attack.
    +  e [][]     set with magic defense.
    + 10 [][]     init with current hp. Limit to max hp.
    + 12 [][]     init with base hp (before materia alterations). Set modified value from temp with all boost. Lower limit to 10.
    + 14 [][]     init with current mp. Limit to max mp.
    + 16 [][]     init with base mp (before materia alterations). Set modified value from temp with all boost. Lower limit to 10.
    + 18 [][]     init with 0. Copy initial time value here.
    + 1a [][]     init with 0. Set limit bar value * 0x100 here.
    + 1c [][][][] init with 0. Set this here w[80082290 + FP * 38 + limit_level * 4 + V0].
    + 20 []       init with 1. Set current player limit level (1-4).
    + 21 []       number of command columns in battle UI. Calculated as number of commands / 4.
    + 22 []       init with 0.
    + 23 []       Init with 0. Flags.
                  01 - underwater materia equipped.
                  04 - long range materia equipped.
                  08 - hp<->mp materia equipped.
    +024 counter attack structure (0x3 size 0x8 items)
        +0 []     Init with 0. Counter attack set 9. Counter with command set 8. Counter with magic and summon set 7. Sneak command set 5. Sneak magic and summon set 4. Final command set 2. Final magic and summon set 1.
        +1 []     Init with 0. Counter attack set 9. Command set action id. Magic and summon set attack id. Master command set 0xfd. Master magic set 0xfe. Master summon set 0xff.
        +2 []     chance for counter and sneak. Number of use for final.
    +03c [][]     attack element type. Init with 0. Add type from weapon. Add type from elemental materia pairing if materia in weapon.
    +03e [][]     half damage element type mask. Init with 0. Add element half damage from armor. Add type from materia paired with elemental if 1 star activated if materia in armor.
    +040 [][]     no damage element type mask. Init with 0. Add element no damage from armor. Add type from materia paired with elemental if 2 star activated if materia in armor.
    +042 [][]     absorb damage element type mask. Init with 0. Add element absorb damage from armor. Add type from materia paired with elemental if 3 star activated if materia in armor.
    +044 [][][][] status attack. Init with 0. Add bit from weapon data. Add type from materia paired with added effect if materia in weapon.
    +048 [][][][] status protect. Init with 0. Add bit from armor data. Add data from accessory. Add type from materia paired with added effect if materia in armor.
    +04c array of active commands (0x6 size 0x10 items).
        +0 []     Init with ff. Copy action id from temp.
        +1 []     Set default 800707c4 + 0. Set 0 here if weapon is long ranged or if some other condition.
        +2 []     Set default 800707c4 + 1 (target type). Add modified target type here.
        +3 []     Init with 1. Set 0 during copy from temp.
        +4 []     Copy number of stars from temp (but only in case of w command). Add number of stars in megaall materia in case of command id 5 6 9 a b 11. Set 0xff if actions 0x18,0x19,0x1a,0x1b
        +5 []     Init with 0. Flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut).
    +0ac
        +0 []     looks like id of limit 1 (inited long ago).
        +1 []     looks like id of limit 2 (inited long ago).
        +2 []     looks like id of limit 3 (inited long ago).
        +3 []     set +b4+1c*0+c[] here during init for limit 1.
        +4 []     set +b4+1c*1+c[] here during init for limit 2.
        +5 []     set +b4+1c*2+c[] here during init for limit 3.
        +6 []     number of activated/learned limits.
        +7 []     init with 0.
    +0b4          array for limit data (0x3 item 0x1c size)
        +0c []    this copied to +ac+3(+4,+5) during limit initialization.
    +108 start of attacks data (0x60 items)
        first 0x38 records about magic (0x8 size).
        second 0x10 records about summon (0x8 size).
        third 0x18 records about enemy skill (0x8 size).
        +0 []       magic/summon/skill id (from 0 within group). Init with ff. Set magic, summon and enemy skill id.
        +1 []       Set attack mana cost for magic summon and enemy skill. Boost mana cost acording to mp turbo stars (mp + mp * 10 / 100 + 1).
        +2 []       all effect/number of summons. Init with 0. Set data from temp in case of magic and summon. Add megaall number of stars in case of magic.
        +3 []       quadra pair number. Init with 0. Set data from temp in case of magic and summon.
        +4 []       quadra number. Init with 0. Set data from temp in case of magic and summon. Set 0 if this is 0x19 (escape) or 0x47 (knight of the round) slot.
        +5 []       Set 0xc data from kernel attack data for magic summon and enemy skill.
        +6 []       ???
        +7 []       init with 0. Add number of stars in MP turbo linked to this summon to this 0xe0 (5 maximum) and leave 0x1f as is. 0x1f - flags (0x01 - mp absorb, 0x02 - hp absorb, 0x08 - steal as well, 0x10 - added cut). Set from temp in case of magic.
    +408 struct with equipped weapon data
        +00 []       target type flags.
        +01 []       attack effect id.
        +02 []       damage formula id.
        +05 []       attack status bit id.
        +07 []       critical hit chance.
        +08 []       weapon hit chance.
        +09 []       0xf0 - model forms for barreett and vincent, 0xf - weapon id.
        +0b []       high sound id mask.
        +0c [][]     camera movement id.
        +10 [][]     attack element type.
        +14 []       stat1 id.
        +15 []       stat2 id.
        +16 []       stat3 id.
        +17 []       stat4 id.
        +18 []       stat1 bonus.
        +19 []       stat2 bonus.
        +1a []       stat3 bonus.
        +1b []       stat4 bonus.
        +1c [][][][]
        +20 [][][][]
        +24 []       normal sound effect id.
        +25 []       critical sound effect id.
        +26 []       missed sound effect id.
        +27 []       impact effect id.
        +28 [][]     special attack flags.
    +437 []             init with 0. Add here number of stars equipped enemy away materia has from temp.
    +43c []             init with 0. Add Gil Plus value from temp.
    +43d []             init with 0. Add encounter value (enemy lure/away) from temp.
    +43e []             init with 0. Add chokobo lure value from temp.
    +43f []             init with 0. Add preemptive value from temp.
