////////////////////////////////////////////////////
// run_kawai
//                    A2 = bu[block7_data + S2 * 8 + 4]; // model id
//                    A0 = w[V1 + 4] + A2 * 24;
//                    A1 = w[80074ea4 + S2 * 84 + 04]; // offset to kawai data
//                    A3 = w[80071e40]; // offset to camera section

// we read KAWAI sequence here
model_data = S2 = A0; // 0x24 data in new structures
T2 = A1; // pointer to kawai sequence
model_id = A2;
offset_to_camera = T0 = A3; // offset to camera section

V0 = bu[8009a048 + model_id];
if (V0 == 1 || V0 == 2)
{
    if (b[model_data + 1] != d)
    {
        [model_data + 1] = b(d);
        [8009a048 + model_id] = b(-1);
    }
}

V1 = b[model_data + 1];
if (V1 == -1)
{
    number_of_model_parts = bu[model_data + 3];
    if (number_of_model_parts > 0) // model parts > 0
    {
        A1 = 0;
        offset_to_model_parts = w[model_data + 1c] + hu[model_data + 18];

        loopafebc:	; 800AFEBC
            [offset_to_model_parts + A1 * 20 + 0] = b(1);

            A1 = A1 + 1;
            V0 = A1 < number_of_model_parts;
        800AFECC	bne    v0, zero, loopafebc [$800afebc]
    }

    return 1;
}
else if (V1 < e)
{
    switch (V1)
    {
        case 0:
        {
            [T2 + 3] = b(model_id);

            A0 = model_data;
            A1 = T2;
            funcb1c7c;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 1:
        {
            A0 = model_data;
            A1 = T2;
            kawai_action_1;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 2:
        {
            A0 = model_data;
            A1 = T2;
            funcb0edc;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 3:
        {
            A0 = model_data;
            A1 = T2;
            funcb0618;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 4:
        {
            A0 = model_data;
            A1 = T2;
            funcb2dd4;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 5:
        {
            [1f800200] = h(hu[T2 + 0]);
            [1f800202] = h(hu[T2 + 2]);
            [1f800204] = h(hu[T2 + 4]);

            T4 = w[offset_to_camera + 0];
            T5 = w[offset_to_camera + 4];
            800B0078	ctc2   t4,vxy0
            800B007C	ctc2   t5,vz0
            T4 = w[offset_to_camera + 8];
            T5 = w[offset_to_camera + c];
            T6 = w[offset_to_camera + 10];
            800B008C	ctc2   t4,vxy1
            800B0090	ctc2   t5,vz1
            800B0094	ctc2   t6,vxy2
            T4 = w[offset_to_camera + 14];
            T5 = w[offset_to_camera + 18];
            800B00A0	ctc2   t4,vz2
            T6 = w[offset_to_camera + 1c];
            800B00A8	ctc2   t5,rgb
            800B00AC	ctc2   t6,otz

            800B00B0	lwc2   zero, $0000(1f800200)
            800B00B4	lwc2   at, $0004(1f800200)
            800B00C0	gte_func18t0,r11r12
            800B00C4	mfc2   t4,l13l21
            800B00C8	mfc2   t5,l22l23
            800B00CC	mfc2   t6,l31l32

            [1f800208] = h(T4);
            [1f80020a] = h(T5);
            [1f80020c] = h(T6);

            [800dfe1c] = h(hu[1f800208]);
            [800dfe1e] = h(hu[1f80020a]);
            [800dfe20] = h(hu[1f80020c]);
            [800dfe22] = b(bu[T2 + 6]);
            [800dfe23] = b(bu[T2 + 7]);
            [800dfe24] = b(bu[T2 + 8]);
            [800dfe25] = b(bu[T2 + 9]);
            [800dfe26] = b(bu[T2 + a]);
            [800dfe27] = b(bu[T2 + b]);
            [800dfe28] = b(bu[T2 + c]);
            [800dfe29] = b(bu[T2 + d]);
            [800dfe2a] = b(bu[T2 + e]);
            [800dfe2b] = b(bu[T2 + f]);
            [800dfe2c] = b(bu[T2 + 10]);
            [800dfe2d] = b(bu[T2 + 11]);
            [800dfe2e] = b(bu[T2 + 12]);
            [800dfe2f] = b(bu[T2 + 13]);

            A0 = model_data;
            A1 = 800dfe1c;
            funcb5260;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case 6 7 8 9 B C:
        {
            A3 = bu[T2 + 0];
            if (A3 == 0)
            {
                [800dfdfe + model_id * 2] = b(0);
                [800dfdff + model_id * 2] = b(model_id);
                [T2 + 1] = b(model_id);

                A0 = model_data;
                A1 = T2;
                V0 = b[model_data + 1];
                run_kawai_action_function(V0);

                return V0;
            }
            else
            {
                V0 = bu[800dfdfe + model_id * 2];
                if (V0 != 1)
                {
                    if (A3 != 1)
                    {
                        return 1;
                    }

                    [800dfdfe + model_id * 2] = b(1);
                    [800dfdff + model_id * 2] = b(model_id);
                }

                A0 = model_data;
                A1 = 800dfdfe;

                V0 = b[model_data + 1];
                run_kawai_action_function(V0);

                return V0;
            }
        }
        break;

                4C6B0B80 C

        case a:
        {
            A0 = model_data;
            A1 = T2;
            kawai_action_a;

            [model_data + 1] = b(-1);
            return 1;
        }
        break;

        case d:
        {
            V1 = bu[T2 + 0]; // read KAWAI sequence
            if (V1 != 2)
            {
                V0 = bu[800dfdfc + model_id * 2 + 2];
                if (V0 == 1)
                {
                    [8009a048 + model_id] = b(2);

                    [800dfe1c + 0] = b(1);
                }
                else
                {
                    V1 = b[8009a048 + model_id];
                    if (V1 == -1)
                    {
                        [8009a048 + model_id] = b(1);

                        [800dfe1c + 0] = b(0);
                    }
                    else if (V1 == 1)
                    {
                        [8009a048 + model_id] = b(2);

                        [800dfdfe + model_id * 2 + 0] = b(1);
                        [800dfdff + model_id * 2 + 1] = b(model_id);

                        [800dfe1c + 0] = b(1);
                    }
                }

                [800dfe1c + 01] = b(model_id);

                // copy camera data
                [800dfe1c + 02] = h(hu[offset_to_camera + 00]);
                [800dfe1c + 04] = h(hu[offset_to_camera + 02]);
                [800dfe1c + 06] = h(hu[offset_to_camera + 04]);
                [800dfe1c + 08] = h(hu[offset_to_camera + 06]);
                [800dfe1c + 0a] = h(hu[offset_to_camera + 08]);
                [800dfe1c + 0c] = h(hu[offset_to_camera + 0a]);
                [800dfe1c + 0e] = h(hu[offset_to_camera + 0c]);
                [800dfe1c + 10] = h(hu[offset_to_camera + 0e]);
                [800dfe1c + 12] = h(hu[offset_to_camera + 10]);
                [800dfe1c + 14] = w(w[offset_to_camera + 14]);
                [800dfe1c + 18] = w(w[offset_to_camera + 18]);
                [800dfe1c + 1c] = w(w[offset_to_camera + 1c]);

                A0 = model_data;
                A1 = 800dfe1c;

                V0 = b[model_data + 1];
                run_kawai_action_function(V0);
            }
            else
            {
                S3 = w[model_data + 20];

                [8009a048 + model_id] = b(-1);
                [model_data + 1] = b(-1);

                [800DFDFC + model_id * 2 + 2] = b(0);
                V0 = bu[model_data + 3];
                if (V0 <= 0)
                {
                    return 0;
                }

                S4 = 1;
                S0 = w[model_data + 1c] + hu[model_data + 18];

                S1 = 0;
                loopb02d0:	; 800B02D0
                    800B02D0	lbu    v0, $0001(s0)
                    800B02D4	sb     s4, $0000(s0)
                    800B02D8	sll    v0, v0, $05
                    800B02DC	addu   v0, s3, v0
                    800B02E0	lw     t4, $0000(v0)
                    800B02E4	lw     t5, $0004(v0)
                    800B02E8	ctc2   t4,vxy0
                    800B02EC	ctc2   t5,vz0
                    800B02F0	lw     t4, $0008(v0)
                    800B02F4	lw     t5, $000c(v0)
                    800B02F8	lw     t6, $0010(v0)
                    800B02FC	ctc2   t4,vxy1
                    800B0300	ctc2   t5,vz1
                    800B0304	ctc2   t6,vxy2
                    800B0308	lw     t4, $0014(v0)
                    800B030C	lw     t5, $0018(v0)
                    800B0310	ctc2   t4,vz2
                    800B0314	lw     t6, $001c(v0)
                    800B0318	ctc2   t5,rgb
                    800B031C	ctc2   t6,otz
                    800B0320	jal    funcae4dc [$800ae4dc]
                    800B0324	addu   a0, s0, zero
                    800B0328	lbu    v0, $0003(model_data)
                    800B032C	addiu  s1, s1, $0001
                    800B0330	slt    v0, s1, v0
                    800B0338	addiu  s0, s0, $0020
                800B0334	bne    v0, zero, loopb02d0 [$800b02d0]
            }

            return 0;
        }
        break;
    }
}

return 1;
////////////////////////////////////////////////////