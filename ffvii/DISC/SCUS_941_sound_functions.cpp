////////////////////////////////
// func2e428
[8009c578] = w(1c0);
[8009c58c] = w(0);
[8009c58a] = h(hu[80062fd6]);
[8009c588] = h(hu[80062fd6]);

A0 = 8009c578;
func39034;
////////////////////////////////



////////////////////////////////
// func39034
80039034	addiu  sp, sp, $fff0 (=-$10)
80039038	addu   a2, zero, zero
8003903C	lw     t1, $0000(a0)
80039040	nop
80039044	sltiu  t2, t1, $0001
80039048	bne    t2, zero, L39064 [$80039064]
8003904C	addu   t0, zero, zero
80039050	andi   v0, t1, $0001
80039054	beq    v0, zero, L39114 [$80039114]
80039058	andi   v0, t1, $0004
8003905C	beq    v0, zero, L390c8 [$800390c8]
80039060	nop

L39064:	; 80039064
80039064	lh     v1, $0008(a0)
80039068	nop
8003906C	sltiu  v0, v1, $0008
80039070	beq    v0, zero, L390c8 [$800390c8]
80039074	sll    v0, v1, $02
80039078	lui    at, $8001
8003907C	addu   at, at, v0
80039080	lw     v0, $052c(at)
80039084	nop
80039088	jr     v0 
8003908C	nop

80039090	j      L390d0 [$800390d0]
80039094	ori    a1, zero, $8000
80039098	j      L390d0 [$800390d0]
8003909C	ori    a1, zero, $9000
800390A0	j      L390d0 [$800390d0]
800390A4	ori    a1, zero, $a000
800390A8	j      L390d0 [$800390d0]
800390AC	ori    a1, zero, $b000
800390B0	j      L390d0 [$800390d0]
800390B4	ori    a1, zero, $c000
800390B8	j      L390d0 [$800390d0]
800390BC	ori    a1, zero, $d000
800390C0	j      L390d0 [$800390d0]
800390C4	ori    a1, zero, $e000

L390c8:	; 800390C8
800390C8	lhu    a2, $0004(a0)
800390CC	addu   a1, zero, zero

L390d0:	; 800390D0
800390D0	beq    a1, zero, L39104 [$80039104]
800390D4	andi   v0, a2, $7fff
800390D8	lh     a3, $0004(a0)
800390DC	nop
800390E0	slti   v0, a3, $0080
800390E4	bne    v0, zero, L390f4 [$800390f4]
800390E8	addu   v1, a3, zero
800390EC	j      L39100 [$80039100]
800390F0	ori    a2, zero, $007f

L390f4:	; 800390F4
800390F4	bgez   a3, L39100 [$80039100]
800390F8	addu   a2, v1, zero
800390FC	addu   a2, zero, zero

L39100:	; 80039100
80039100	andi   v0, a2, $7fff

L39104:	; 80039104
80039104	lui    v1, $8005
80039108	lw     v1, $aaf4(v1)
8003910C	or     v0, v0, a1
80039110	sh     v0, $0180(v1)

L39114:	; 80039114
80039114	bne    t2, zero, L3912c [$8003912c]
80039118	andi   v0, t1, $0002
8003911C	beq    v0, zero, L391dc [$800391dc]
80039120	andi   v0, t1, $0008
80039124	beq    v0, zero, L39190 [$80039190]
80039128	nop

L3912c:	; 8003912C
8003912C	lh     v1, $000a(a0)
80039130	nop
80039134	sltiu  v0, v1, $0008
80039138	beq    v0, zero, L39190 [$80039190]
8003913C	sll    v0, v1, $02
80039140	lui    at, $8001
80039144	addu   at, at, v0
80039148	lw     v0, $054c(at)
8003914C	nop
80039150	jr     v0 
80039154	nop

80039158	j      L39198 [$80039198]
8003915C	ori    a1, zero, $8000
80039160	j      L39198 [$80039198]
80039164	ori    a1, zero, $9000
80039168	j      L39198 [$80039198]
8003916C	ori    a1, zero, $a000
80039170	j      L39198 [$80039198]
80039174	ori    a1, zero, $b000
80039178	j      L39198 [$80039198]
8003917C	ori    a1, zero, $c000
80039180	j      L39198 [$80039198]
80039184	ori    a1, zero, $d000
80039188	j      L39198 [$80039198]
8003918C	ori    a1, zero, $e000

L39190:	; 80039190
80039190	lhu    t0, $0006(a0)
80039194	addu   a1, zero, zero

L39198:	; 80039198
80039198	beq    a1, zero, L391cc [$800391cc]
8003919C	andi   v0, t0, $7fff
800391A0	lh     a2, $0006(a0)
800391A4	nop
800391A8	slti   v0, a2, $0080
800391AC	bne    v0, zero, L391bc [$800391bc]
800391B0	addu   v1, a2, zero
800391B4	j      L391c8 [$800391c8]
800391B8	ori    t0, zero, $007f

L391bc:	; 800391BC
800391BC	bgez   a2, L391c8 [$800391c8]
800391C0	addu   t0, v1, zero
800391C4	addu   t0, zero, zero

L391c8:	; 800391C8
800391C8	andi   v0, t0, $7fff

L391cc:	; 800391CC
800391CC	lui    v1, $8005
800391D0	lw     v1, $aaf4(v1)
800391D4	or     v0, v0, a1
800391D8	sh     v0, $0182(v1)

L391dc:	; 800391DC
800391DC	bne    t2, zero, L391ec [$800391ec]
800391E0	andi   v0, t1, $0040
800391E4	beq    v0, zero, L39200 [$80039200]
800391E8	nop

L391ec:	; 800391EC
800391EC	lui    v1, $8005
800391F0	lw     v1, $aaf4(v1)
800391F4	lhu    v0, $0010(a0)
800391F8	nop
800391FC	sh     v0, $01b0(v1)

L39200:	; 80039200
80039200	bne    t2, zero, L39210 [$80039210]
80039204	andi   v0, t1, $0080
80039208	beq    v0, zero, L39224 [$80039224]
8003920C	nop

L39210:	; 80039210
80039210	lui    v1, $8005
80039214	lw     v1, $aaf4(v1)
80039218	lhu    v0, $0012(a0)
8003921C	nop
80039220	sh     v0, $01b2(v1)

L39224:	; 80039224
80039224	bne    t2, zero, L39234 [$80039234]
80039228	andi   v0, t1, $0400
8003922C	beq    v0, zero, L39248 [$80039248]
80039230	nop

L39234:	; 80039234
80039234	lui    v1, $8005
80039238	lw     v1, $aaf4(v1)
8003923C	lhu    v0, $001c(a0)
80039240	nop
80039244	sh     v0, $01b4(v1)

L39248:	; 80039248
80039248	bne    t2, zero, L39258 [$80039258]
8003924C	andi   v0, t1, $0800
80039250	beq    v0, zero, L3926c [$8003926c]
80039254	nop

L39258:	; 80039258
80039258	lui    v1, $8005
8003925C	lw     v1, $aaf4(v1)
80039260	lhu    v0, $001e(a0)
80039264	nop
80039268	sh     v0, $01b6(v1)

L3926c:	; 8003926C
8003926C	bne    t2, zero, L3927c [$8003927c]
80039270	andi   v0, t1, $0100
80039274	beq    v0, zero, L392c0 [$800392c0]
80039278	nop

L3927c:	; 8003927C
8003927C	lw     v0, $0014(a0)
80039280	nop
80039284	bne    v0, zero, L392a4 [$800392a4]
80039288	nop
8003928C	lui    v0, $8005
80039290	lw     v0, $aaf4(v0)
80039294	nop
80039298	lhu    v1, $01aa(v0)
8003929C	j      L392bc [$800392bc]
800392A0	andi   v1, v1, $fffb

L392a4:	; 800392A4
800392A4	lui    v0, $8005
800392A8	lw     v0, $aaf4(v0)
800392AC	nop
800392B0	lhu    v1, $01aa(v0)
800392B4	nop
800392B8	ori    v1, v1, $0004

L392bc:	; 800392BC
800392BC	sh     v1, $01aa(v0)

L392c0:	; 800392C0
800392C0	bne    t2, zero, L392d0 [$800392d0]
800392C4	andi   v0, t1, $0200
800392C8	beq    v0, zero, L39314 [$80039314]
800392CC	nop

L392d0:	; 800392D0
800392D0	lw     v0, $0018(a0)
800392D4	nop
800392D8	bne    v0, zero, L392f8 [$800392f8]
800392DC	nop
800392E0	lui    v0, $8005
800392E4	lw     v0, $aaf4(v0)
800392E8	nop
800392EC	lhu    v1, $01aa(v0)
800392F0	j      L39310 [$80039310]
800392F4	andi   v1, v1, $fffe

L392f8:	; 800392F8
800392F8	lui    v0, $8005
800392FC	lw     v0, $aaf4(v0)
80039300	nop
80039304	lhu    v1, $01aa(v0)
80039308	nop
8003930C	ori    v1, v1, $0001

L39310:	; 80039310
80039310	sh     v1, $01aa(v0)

L39314:	; 80039314
80039314	bne    t2, zero, L39324 [$80039324]
80039318	andi   v0, t1, $1000
8003931C	beq    v0, zero, L39368 [$80039368]
80039320	nop

L39324:	; 80039324
80039324	lw     v0, $0020(a0)
80039328	nop
8003932C	bne    v0, zero, L3934c [$8003934c]
80039330	nop
80039334	lui    v0, $8005
80039338	lw     v0, $aaf4(v0)
8003933C	nop
80039340	lhu    v1, $01aa(v0)
80039344	j      L39364 [$80039364]
80039348	andi   v1, v1, $fff7

L3934c:	; 8003934C
8003934C	lui    v0, $8005
80039350	lw     v0, $aaf4(v0)
80039354	nop
80039358	lhu    v1, $01aa(v0)
8003935C	nop
80039360	ori    v1, v1, $0008

L39364:	; 80039364
80039364	sh     v1, $01aa(v0)

L39368:	; 80039368
80039368	bne    t2, zero, L39378 [$80039378]
8003936C	andi   v0, t1, $2000
80039370	beq    v0, zero, L393bc [$800393bc]
80039374	nop

L39378:	; 80039378
80039378	lw     v0, $0024(a0)
8003937C	nop
80039380	bne    v0, zero, L393a0 [$800393a0]
80039384	nop
80039388	lui    v0, $8005
8003938C	lw     v0, $aaf4(v0)
80039390	nop
80039394	lhu    v1, $01aa(v0)
80039398	j      L393b8 [$800393b8]
8003939C	andi   v1, v1, $fffd

L393a0:	; 800393A0
800393A0	lui    v0, $8005
800393A4	lw     v0, $aaf4(v0)
800393A8	nop
800393AC	lhu    v1, $01aa(v0)
800393B0	nop
800393B4	ori    v1, v1, $0002

L393b8:	; 800393B8
800393B8	sh     v1, $01aa(v0)

L393bc:	; 800393BC
800393BC	addiu  sp, sp, $0010
800393C0	jr     ra 
800393C4	nop
////////////////////////////////



////////////////////////////////
// func29f44
A0 = w[8009a108];
if (A0 != 0)
{
    V0 = w[8009a128] | w[8009a12c];

    [8009a128] = w(0);
    [8009a12c] = w(0);
    [8009a110] = w(0);
    [8009a10c] = w(0);



    [8009a108] = w(A0 | V0);
    [8009a114] = w(w[8009a114] | A0 | V0);

    A1 = 1;
    A2 = 80096608;
    loop29fc4:	; 80029FC4
        if (A0 & A1)
        {
            A0 = A0 XOR A1;
            [A2 + 56] = h(204);
            [A0 + 0] = w(80049c40);
        }
        A2 = A2 + 108;
        A1 = A1 << 1;
    80029FE0	bne    a0, zero, loop29fc4 [$80029fc4]
}



80029FE8	lui    a3, $800a
80029FEC	addiu  a3, a3, $a168 (=-$5e98)
80029FF0	lw     a0, $0000(a3)
80029FF4	nop
if (A0 != 0)
{
    8002A000	lui    a2, $8009
    8002A004	addiu  a2, a2, $7ec8
    8002A008	ori    a1, zero, $0001
    8002A00C	ori    t1, zero, $0204
    8002A010	lui    v0, $800a
    8002A014	lw     v0, $a188(v0)
    8002A018	lui    v1, $800a
    8002A01C	lw     v1, $a18c(v1)
    8002A020	lui    t0, $8005
    8002A024	addiu  t0, t0, $9c40 (=-$63c0)
    8002A028	lui    at, $800a
    8002A02C	sw     zero, $a18c(at)
    8002A030	lui    at, $800a
    8002A034	sw     zero, $a188(at)
    8002A038	lui    at, $800a
    8002A03C	sw     zero, $a170(at)
    8002A040	lui    at, $800a
    8002A044	sw     zero, $a16c(at)
    8002A048	or     v0, v0, v1
    8002A04C	lui    v1, $800a
    8002A050	lw     v1, $a174(v1)
    8002A054	or     a0, a0, v0
    8002A058	sw     a0, $0000(a3)
    8002A05C	or     v1, a0, v1
    8002A060	lui    at, $800a
    8002A064	sw     v1, $a174(at)

    loop2a068:	; 8002A068
        8002A068	and    v0, a0, a1
        if (V0 != 0)
        {
            8002A074	xor    a0, a0, a1
            8002A078	sh     t1, $0056(a2)
            8002A07C	sw     t0, $0000(a2)
        }

        8002A088	addiu  a2, a2, $0108
        8002A080	sll    a1, a1, $01
    8002A084	bne    a0, zero, loop2a068 [$8002a068]
}
////////////////////////////////



////////////////////////////////
// system_sound_reset_music_volume
A1 = w[8009a108];
if (A1 != 0)
{
    A0 = 1;
    V0 = 80096608;

    loop2a768:	; 8002A768
        if (A1 & A0)
        {
            [V0 + e0] = w(w[V0 + e0] | 00000003);
            A1 = A1 XOR A0;
        }

        A0 = A0 << 1;
        V0 = V0 + 108;
    8002A788	bne    a1, zero, loop2a768 [$8002a768]
}
////////////////////////////////



////////////////////////////////
// func29c48
S3 = 80096608;
S1 = w[80083580] & 00ffffff;
S2 = 80083580 + 4;

[8009a114] = w(w[8009a114] | 00ffffff);
[8009a108] = w(S1);

S4 = 1
if (S1 != 0)
{
    loop29cb8:	; 80029CB8
        if (S1 & S4)
        {
            V0 = hu[S2];
            S2 = S2 + 2;
            S1 = S1 XOR S4;

            A0 = S3;
            A1 = 14;
            func31820;

            [S3 + 0] = w(S2 + V0);
            [S3 + 14] = w(80083580);
            [S3 + 2c] = w(7f);
            [S3 + 34] = w(0);
            [S3 + 38] = w(0);
            [S3 + 44] = h(0);
            [S3 + 46] = h(3fff);
            [S3 + 56] = h(103);
            [S3 + 5c] = h(0);
            [S3 + 5e] = h(0);
            [S3 + 60] = h(4000);
            [S3 + 62] = h(0);
            [S3 + 64] = h(0);
            [S3 + 6c] = h(0);
            [S3 + 6e] = h(0);
            [S3 + 7e] = h(0);
            [S3 + 80] = h(0);
            [S3 + 90] = h(0);
            [S3 + 92] = h(0);
            [S3 + 9e] = h(0);
            [S3 + a0] = h(0);
            [S3 + a4] = h(0);
            [S3 + a6] = h(0);
            [S3 + b8] = h(0);
            [S3 + c2] = h(0);
            [S3 + c4] = h(0);
            [S3 + c6] = h(4000);
            [S3 + cc] = h(0);
            [S3 + ce] = h(0);
            [S3 + d2] = h(0);
            [S3 + da] = h(0);
        }

        S3 = S3 + 108;
        S4 = S4 << 1;
    80029D74	bne    s1, zero, loop29cb8 [$80029cb8]
}

[8009a10c] = w(0);
[8009a110] = w(0);
[8009a11c] = w(ffff0000); // tempo of music
[8009a124] = w(1);
[8009a128] = w(0);
[8009a12c] = w(0);
[8009a130] = w(0);
[8009a134] = w(0);
[8009a138] = w(0);
[8009a13c] = w(0);
[8009a144] = w(0);
[8009a148] = w(0);
[8009a14c] = h(0);
[8009a150] = h(0);
[8009a152] = h(0);
[8009a154] = h(0);
[8009a158] = h(0);
[8009a15c] = h(0);
[8009a15e] = h(0);
[8009a160] = h(0);
[8009a162] = h(0);

if (w[80062ff8] & 1)
{
    [8009a108] = w(0);
    [8009a118] = w(w[8009a108]);
}

func2ff4c;

func30038;

func30148;
////////////////////////////////



////////////////////////////////
// func29e98
if (w[8009a104 + 04] != 0)
{
    A2 = 80096608;

    V0 = w[8009a128];
    V1 = w[8009a12c];

    [8009a12c] = w(0);
    [8009a128] = w(0);
    [8009a110] = w(0);
    [8009a10c] = w(0);
    A0 = w[8009a104 + 04] | V0 | V1;
    [8009a104 + 04] = w(A0);
    [8009a114] = w(A0 | w[8009a114]);

    A1 = 1;
    loop29f18:	; 80029F18
        if (A0 XOR A1)
        {
            A0 = A0 XOR A1;
            [A2 + 56] = h(204);
            [A2 + 0] = w(80049c40);
        }

        A1 = A1 << 1;
        A2 = A2 + 108;
    80029F34	bne    a0, zero, loop29f18 [$80029f18]
}
////////////////////////////////



////////////////////////////////
// func29b78
A1 = A1 / 4;
V1 = 0;
if (A1 != 0)
{
    loop29b8c:	; 80029B8C
        [80083580 + V1] = w(w[A0]);

        A0 = A0 + 4;
        V1 = V1 + 4;
        A1 = A1 - 1;
    80029B9C	bne    a1, zero, loop29b8c [$80029b8c]
}
////////////////////////////////



////////////////////////////////
// func2a510
if (A1 == 1)
{
    V0 = A0 + 10;
    A0 = 3 << V0;
    V1 = 0 NOR A0;

    [80099fd0] = w(w[80099fd0] & V1);
    [80099fd4] = w(w[80099fd4] & V1);
    [80099fd8] = w(w[80099fd8] | A0);
}
else if (A1 == 2)
{
    8002A5C4	lui    a0, $ffc3
    8002A5C8	ori    a0, a0, $ffff
    8002A5CC	lui    v0, $800a
    8002A5D0	lw     v0, $9fd0(v0)
    8002A5D4	lui    v1, $800a
    8002A5D8	lw     v1, $9fd4(v1)
    8002A5DC	and    v0, v0, a0
    8002A5E0	lui    at, $800a
    8002A5E4	sw     v0, $9fd0(at)
    8002A5E8	lui    v0, $800a
    8002A5EC	lw     v0, $9fd8(v0)
    8002A5F0	and    v1, v1, a0
    8002A5F4	lui    at, $800a
    8002A5F8	sw     v1, $9fd4(at)
    8002A600	lui    v1, $003c
    V0 = V0 | V1;
    [80099fd8] = w(V0);
}
else if (A1 == 3)
{
    8002A604	lui    a0, $ffc0
    8002A608	ori    a0, a0, $ffff
    8002A60C	lui    v0, $800a
    8002A610	lw     v0, $9fd0(v0)
    8002A614	lui    v1, $800a
    8002A618	lw     v1, $9fd4(v1)
    8002A61C	and    v0, v0, a0
    8002A620	lui    at, $800a
    8002A624	sw     v0, $9fd0(at)
    8002A628	lui    v0, $800a
    8002A62C	lw     v0, $9fd8(v0)
    8002A630	and    v1, v1, a0
    8002A634	lui    at, $800a
    8002A638	sw     v1, $9fd4(at)
    8002A640	lui    v1, $003f
    V0 = V0 | V1;
    [80099fd8] = w(V0);
}
else if (A1 == 4)
{
    8002A568	lui    a0, $ff00
    8002A644	ori    a0, a0, $ffff
    8002A648	lui    v0, $800a
    8002A64C	lw     v0, $9fd0(v0)
    8002A650	lui    v1, $800a
    8002A654	lw     v1, $9fd4(v1)
    8002A658	and    v0, v0, a0
    8002A65C	lui    at, $800a
    8002A660	sw     v0, $9fd0(at)
    8002A664	lui    v0, $800a
    8002A668	lw     v0, $9fd8(v0)
    8002A66C	and    v1, v1, a0
    8002A670	lui    at, $800a
    8002A674	sw     v1, $9fd4(at)
    8002A678	lui    v1, $00ff
    V0 = V0 | V1;
    [80099fd8] = w(V0);
}



A3 = A1 * 2;
if (A3 > 0)
{
    A2 = 80099890 + A0 * 108;
    loop2a6a4:	; 8002A6A4
        [A2 + 56] = h(204);
        [A2 + 0] = w(80049c40);
        A2 = A2 - 108;

        A3 = A3 - 1;
    8002A6B4	bne    A3, zero, loop2a6a4 [$8002a6a4]
}
////////////////////////////////



////////////////////////////////
// func2a6c4
A2 = A2 & 3ff; // sound id
A2 = A2 * 2;
V1 = w[80062f74];

if (hu[V1 + A2 * 2] != ffff)
{
    [A0] = w(w[80062f84] + hu[V1 + A2 * 2]);
}
else
{
    [A0] = w(0);
}

A2 = A2 + 1;

if (hu[V1 + A2 * 2] != ffff)
{
    [A1] = w(w[80062f84] + hu[V1 + A2 * 2]);
}
else
{
    [A1] = w(0);
}
////////////////////////////////



////////////////////////////////
// func2a094
S4 = A3;
S1 = 0;
A0 = A0 & 7f;
S3 = A0 << 8;

S2 = A1 & ffff;
S0 = 80096608 + S2 * 108;

[S0 + 0] = w(80049c40);
[S0 + 50] = w(-1);
[S0 + 54] = h(1);
[S0 + 56] = h(101);

[S0 + 108 + 0] = w(80049c40);
[S0 + 108 + 50] = w(-1);
[S0 + 108 + 54] = h(1);
[S0 + 108 + 56] = h(101);

if (A2 != 0)
{
    S1 = 1;

    A0 = S0;
    A1 = A2; // pointer to AKAO sequence
    func29bac;

    [S0 + 60] = h(S3);
    [S0 + 62] = h(0);
}

if (S4 != 0)
{
    S1 = S1 | 2;

    A0 = S0 + 108;
    A1 = S4; // pointer to AKAO sequence
    func29bac;

    [S0 + 108 + 60] = h(S3);
    [S0 + 108 + 62] = h(0);
}

V1 = S2 - 20;

S1 = S1 << V1;

[80099fcc] = w(w[80099fcc] | S1);
[80099fd8] = w(w[80099fd8] | S1);

S1 = (3 << V1) & w[80099fcc];
S1 = 0 NOR S1;

[80099fd0] = w(w[80099fd0] & S1);
[80099fd4] = w(w[80099fd4] & S1);
[80099fec] = w(w[80099fec] & S1);
[80099ff0] = w(w[80099ff0] & S1);
[80099ff4] = w(w[80099ff4] & S1);

if (w[80062ff8] & 2)
{
    S1 = A0;
    if (hu[80099e0c] == 2)
    {
        [80099fcc] = w(S1 & 00c00000);
        S1 = S1 & ff3fffff;
    }
    else
    {
        [80099fcc] = w(0);
    }

    [80099fdc] = w(w[80099fdc] | S1);
}

func2ff4c;

func30038;

8002A260	jal    func30148 [$80030148]
////////////////////////////////



////////////////////////////////
// func29bac
// initialize script sequence
S0 = A0; // pointer to struct
offset = A1;

A1 = 5;
func31820;

[S0 + 0] = w(offset);
[S0 + 2c] = w(78);
[S0 + 34] = w(0);
[S0 + 38] = w(0);
[S0 + 44] = h(32000000);
[S0 + 5c] = h(0);
[S0 + 64] = h(0);
[S0 + 66] = h(2);
[S0 + 6c] = h(0);
[S0 + 6e] = h(0);
[S0 + 7e] = h(0);
[S0 + 80] = h(0);
[S0 + 90] = h(0);
[S0 + 92] = h(0);
[S0 + 9e] = h(0);
[S0 + a0] = h(0);
[S0 + a4] = h(0);
[S0 + a6] = h(0);
[S0 + b8] = h(0);
[S0 + c2] = h(0);
[S0 + c4] = h(0);
[S0 + cc] = h(0);
[S0 + ce] = h(0);
[S0 + d2] = h(0);
[S0 + da] = h(0);
////////////////////////////////



////////////////////////////////
// func31820
// init instrument
[A0 + 58] = h(A1); // set current instrument
A1 = A1 & ffff;

A1 = 80075f28 + A1 * 40; // INSTR.DAT

[A0 + e0] = w(w[A0 + e0] | 0001ff80); // set update SPU flags
[A0 + e4] = w(w[A1 + 0]);
[A0 + e8] = w(w[A1 + 4]);
[A0 + ec] = w(bu[A1 + d]);
[A0 + f0] = w(bu[A1 + e]);
[A0 + f4] = w(bu[A1 + f]);
[A0 + fa] = h(bu[A1 + 8]);
[A0 + fc] = h(bu[A1 + 9]);
[A0 + fe] = h(bu[A1 + a]);
[A0 + 100] = h(bu[A1 + b]);
[A0 + 102] = h(bu[A1 + c]);
////////////////////////////////



////////////////////////////////
// func37988
80037988	addu   t1, a0, zero
8003798C	lui    v0, $8005
80037990	lw     v0, $aaec(v0)
80037994	nop
80037998	andi   v0, v0, $0001
8003799C	beq    v0, zero, L379b4 [$800379b4]
800379A0	addu   t0, a1, zero
800379A4	lui    a0, $8007
800379A8	addiu  a0, a0, $7da0
800379AC	j      L379c0 [$800379c0]
800379B0	sll    v0, a3, $01

L379b4:	; 800379B4
800379B4	lui    a0, $8005
800379B8	lw     a0, $aaf4(a0)
800379BC	sll    v0, a3, $01

L379c0:	; 800379C0
800379C0	addu   v0, v0, a0
800379C4	lhu    v1, $0000(v0)
800379C8	sll    v0, a2, $01
800379CC	addu   v0, v0, a0
800379D0	lhu    v0, $0000(v0)
800379D4	andi   v1, v1, $00ff
800379D8	sll    v1, v1, $10
800379DC	beq    t1, zero, L37aac [$80037aac]
800379E0	or     t2, v0, v1
800379E4	ori    v0, zero, $0001
800379E8	bne    t1, v0, L37b84 [$80037b84]
800379EC	lui    v0, $00ff
800379F0	lui    v0, $8005
800379F4	lw     v0, $aaec(v0)
800379F8	nop
800379FC	andi   v0, v0, $0001
80037A00	beq    v0, zero, L37a64 [$80037a64]
80037A04	sll    v1, a2, $01
80037A08	lui    a1, $8007
80037A0C	addiu  a1, a1, $7da0
80037A10	addu   v1, v1, a1
80037A14	sll    a0, a3, $01
80037A18	lhu    v0, $0000(v1)
80037A1C	addu   a0, a0, a1
80037A20	or     v0, v0, t0
80037A24	sh     v0, $0000(v1)
80037A28	srl    v0, t0, $10
80037A2C	lhu    v1, $0000(a0)
80037A30	andi   v0, v0, $00ff
80037A34	or     v1, v1, v0
80037A38	addiu  v0, a2, $ff3a (=-$c6)
80037A3C	sra    v0, v0, $01
80037A40	sh     v1, $0000(a0)
80037A44	lui    v1, $8005
80037A48	lw     v1, $a6b8(v1)
80037A4C	sllv   v0, v0, t1
80037A50	or     v0, v0, v1
80037A54	lui    at, $8005
80037A58	sw     v0, $a6b8(at)
80037A5C	j      L37a9c [$80037a9c]
80037A60	lui    v0, $00ff

L37a64:	; 80037A64
80037A64	lui    a1, $8005
80037A68	lw     a1, $aaf4(a1)
80037A6C	sll    a0, a3, $01
80037A70	addu   v1, v1, a1
80037A74	lhu    v0, $0000(v1)
80037A78	addu   a0, a0, a1
80037A7C	or     v0, v0, t0
80037A80	sh     v0, $0000(v1)
80037A84	srl    v0, t0, $10
80037A88	lhu    v1, $0000(a0)
80037A8C	andi   v0, v0, $00ff
80037A90	or     v1, v1, v0
80037A94	sh     v1, $0000(a0)
80037A98	lui    v0, $00ff

L37a9c:	; 80037A9C
80037A9C	ori    v0, v0, $ffff
80037AA0	and    v0, t0, v0
80037AA4	j      L37b80 [$80037b80]
80037AA8	or     t2, t2, v0

L37aac:	; 80037AAC
80037AAC	lui    v0, $8005
80037AB0	lw     v0, $aaec(v0)
80037AB4	nop
80037AB8	andi   v0, v0, $0001
80037ABC	beq    v0, zero, L37b2c [$80037b2c]
80037AC0	sll    v1, a2, $01
80037AC4	lui    a1, $8007
80037AC8	addiu  a1, a1, $7da0
80037ACC	addu   v1, v1, a1
80037AD0	lhu    v0, $0000(v1)
80037AD4	nor    a0, zero, t0
80037AD8	and    v0, v0, a0
80037ADC	sll    a0, a3, $01
80037AE0	addu   a0, a0, a1
80037AE4	sh     v0, $0000(v1)
80037AE8	srl    v0, t0, $10
80037AEC	andi   v0, v0, $00ff
80037AF0	lhu    v1, $0000(a0)
80037AF4	nor    v0, zero, v0
80037AF8	and    v1, v1, v0
80037AFC	sh     v1, $0000(a0)
80037B00	addiu  v1, a2, $ff3a (=-$c6)
80037B04	sra    v1, v1, $01
80037B08	ori    v0, zero, $0001
80037B0C	lui    a0, $8005
80037B10	lw     a0, $a6b8(a0)
80037B14	sllv   v0, v1, v0
80037B18	or     v0, v0, a0
80037B1C	lui    at, $8005
80037B20	sw     v0, $a6b8(at)
80037B24	j      L37b70 [$80037b70]
80037B28	lui    v0, $00ff

L37b2c:	; 80037B2C
80037B2C	lui    a1, $8005
80037B30	lw     a1, $aaf4(a1)
80037B34	nop
80037B38	addu   v1, v1, a1
80037B3C	lhu    v0, $0000(v1)
80037B40	nor    a0, zero, t0
80037B44	and    v0, v0, a0
80037B48	sll    a0, a3, $01
80037B4C	addu   a0, a0, a1
80037B50	sh     v0, $0000(v1)
80037B54	srl    v0, t0, $10
80037B58	andi   v0, v0, $00ff
80037B5C	lhu    v1, $0000(a0)
80037B60	nor    v0, zero, v0
80037B64	and    v1, v1, v0
80037B68	sh     v1, $0000(a0)
80037B6C	lui    v0, $00ff

L37b70:	; 80037B70
80037B70	ori    v0, v0, $ffff
80037B74	and    v0, t0, v0
80037B78	nor    v0, zero, v0
80037B7C	and    t2, t2, v0

L37b80:	; 80037B80
80037B80	lui    v0, $00ff

L37b84:	; 80037B84
80037B84	ori    v0, v0, $ffff
80037B88	jr     ra 
80037B8C	and    v0, t2, v0
////////////////////////////////



////////////////////////////////
// func2a28c
offset1 = A0;
offset2 = A1;

[80099e0e] = h(1);
[80099f16] = h(1);

[80099db8 + 0] = w(80049c40);
[80099ec0 + 0] = w(80049c40);

[80099db8 + 50] = w(-1);
[80099ec0 + 50] = w(-1);

[80099db8 + 54] = h(2);
[80099ec0 + 54] = h(2);

S0 = 0;

if offset1 != 0)
{
    S0 = 1;
    A0 = 80099db8;
    A1 = offset1;
    func29bac;

    [80099db8 + 60] = h(4000);
    [80099db8 + 62] = h(0);
}


if (offset2 != 0)
{
    S0 = S0 | 2;
    A0 = 80099ec0;
    A1 = offset2;
    func29bac;

    [80099ec0 + 60] = h(4000);
    [80099ec0 + 62] = h(0);
}

[80099fcc] = w(w[80099fcc] | (S0 << 16));
[80099fd0] = w(w[80099fd0] & ff3fffff);
[80099fd4] = w(w[80099fd4] & ff3fffff);
[80099fd8] = w(w[80099fd8] | 00c00000);
[80099fec] = w(w[80099fec] & ff3fffff);
[80099ff0] = w(w[80099ff0] & ff3fffff);
[80099ff4] = w(w[80099ff4] & ff3fffff);

func2ff4c;

func30038;

func30148;

[80099fdc] = w(w[80099fdc] & ff3fffff);
////////////////////////////////



////////////////////////////////
// func2ff4c
[SP + 10] = w(0);
A3 = 0 NOR (w[80099fcc] | w[80062f00]);
A2 = A3 & (w[8009a190] & w[80062f68]);

if (A2 != 0)
{
    A0 = 80097ec8;
    A1 = SP + 10;
    A2 = A2;
    A3 = A3;
    func2fda0;
}


A3 = 0 NOR (w[80062f68] | w[80099fcc] | w[80062f00]);
A2 = A3 & w[8009a130];

if (A2 != 0)
{
    A0 = 80096608;
    A1 = SP + 10;
    A2 = A2;
    A3 = A3;
    func2fda0;
}

A0 = 1;
A1 = w[SP + 10] | w[80099fec];
[SP + 10] = w(A1);
func37964;

A0 = 0;
A1 = w[SP + 10] XOR 00ffffff;
[SP + 10] = w(A1);
func37964;
////////////////////////////////



////////////////////////////////
// func30038
V1 = w[8009a194];
A1 = w[80062f68];
[SP + 10] = w(0);
V1 = V1 & A1;
V0 = w[80099fcc] | w[80062f00];
A3 = 0 NOR V0;
A2 = V1 & A3;
if (A2 != 0)
{
    A0 = 80097ec8;
    A1 = SP + 10;
    A2 = A2;
    A3 = A3;
    func2fda0;
}

if (w[80062ff8] & 00000010)
{
    [SP + 10] = w(00ffffff);
}
else
{
    A3 = 0 NOR (w[80062f68] | w[80099fcc] | w[80062f00]);
    A2 = A3 & w[8009a134];
    if (A2 != 0)
    {
        A0 = 80096608;
        A1 = SP + 10;
        A2 = A2;
        A3 = A3;
        func2fda0;
    }
}

A0 = 0;
A1 = w[SP + 10] | w[80099ff0];
[SP + 10] = w(A1);
func388c4;

A0 = 0;
A1 = w[SP + 10] ^ 00ffffff;
[SP + 10] = w(A1);
func388c4;
////////////////////////////////



////////////////////////////////
// func30148
V1 = w[8009a198];
A1 = w[80062f68];
S0 = 80099fcc;
[SP + 10] = w(0);
V0 = w[S0];
A0 = w[80062f00];
V1 = V1 & A1;
V0 = V0 | A0;
A3 = 0 NOR V0;
A2 = V1 & A3;
if (A2 != 0)
{
    A0 = 80097ec8;
    A1 = SP + 10;
    A2 = A2;
    A3 = A3;
    func2fda0;
}

800301A4	lui    v0, $8006
800301A8	lw     v0, $2f68(v0)
800301AC	lw     v1, $0000(s0)
800301B0	lui    a0, $8006
800301B4	lw     a0, $2f00(a0)
800301B8	or     v0, v0, v1
800301BC	or     v0, v0, a0
800301C0	lui    v1, $800a
800301C4	lw     v1, $a138(v1)
800301C8	nor    a3, zero, v0
800301CC	and    a2, a3, v1
if (A2 != 0)
{
    A0 = 80096608;
    A1 = SP + 10;
    A2 = A2;
    A3 = A3;
    func2fda0;
}

800301E8	lw     a1, $0010(sp)
800301EC	lui    v0, $800a
800301F0	lw     v0, $9ff4(v0)
800301F4	ori    a0, zero, $0001
800301F8	or     a1, a1, v0
800301FC	jal    func39010 [$80039010]
80030200	sw     a1, $0010(sp)
80030204	lui    v0, $00ff
80030208	ori    v0, v0, $ffff
8003020C	lw     a1, $0010(sp)
80030210	addu   a0, zero, zero
80030214	xor    a1, a1, v0
8003021C	sw     a1, $0010(sp)
80030218	jal    func39010 [$80039010]
////////////////////////////////



////////////////////////////////
// func2fda0
[A1] = w(w[A1] | A2);

T0 = 1;
if (A2 != 0)
{
    loop2fdc0:	; 8002FDC0
        if (A2 & T0)
        {
            if (w[A0 + 38] & 00000100)
            {
                V1 = hu[A0 + 24];

                if (w[A0 + 24] >= 18)
                {
                    V1 = V1 - 18;
                }

                V1 = 1 << V1;
                if (A3 & V1)
                {
                    [A1] = w(w[A1] | V1);
                }
            }
            else if (w[A0 + 38] & 00000200)
            {
                V1 = 1 << w[A0 + 28];
                if (A3 & V1)
                {
                    [A1] = w(w[A1] | V1);
                }
            }

            A2 = A2 ^ T0;
        }

        T0 = T0 << 1;
        A0 = A0 + 108;
    8002FE38	bne    a2, zero, loop2fdc0 [$8002fdc0]
}
////////////////////////////////
